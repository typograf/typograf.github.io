/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/app.desktop.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/diff/dist/diff.js":
/*!****************************************!*\
  !*** ./node_modules/diff/dist/diff.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n\n diff v4.0.1\n\nSoftware License Agreement (BSD License)\n\nCopyright (c) 2009-2015, Kevin Decker <kpdecker@gmail.com>\n\nAll rights reserved.\n\nRedistribution and use of this software in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above\n  copyright notice, this list of conditions and the\n  following disclaimer.\n\n* Redistributions in binary form must reproduce the above\n  copyright notice, this list of conditions and the\n  following disclaimer in the documentation and/or other\n  materials provided with the distribution.\n\n* Neither the name of Kevin Decker nor the names of its\n  contributors may be used to endorse or promote products\n  derived from this software without specific prior\n  written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER\nIN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\nOF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n@license\n*/\n(function (global, factory) {\n   true ? factory(exports) : undefined;\n})(this, function (exports) {\n  'use strict';\n\n  function Diff() {}\n\n  Diff.prototype = {\n    diff: function diff(oldString, newString) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var callback = options.callback;\n\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      this.options = options;\n      var self = this;\n\n      function done(value) {\n        if (callback) {\n          setTimeout(function () {\n            callback(undefined, value);\n          }, 0);\n          return true;\n        } else {\n          return value;\n        }\n      } // Allow subclasses to massage the input prior to running\n\n\n      oldString = this.castInput(oldString);\n      newString = this.castInput(newString);\n      oldString = this.removeEmpty(this.tokenize(oldString));\n      newString = this.removeEmpty(this.tokenize(newString));\n      var newLen = newString.length,\n          oldLen = oldString.length;\n      var editLength = 1;\n      var maxEditLength = newLen + oldLen;\n      var bestPath = [{\n        newPos: -1,\n        components: []\n      }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n      var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n\n      if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n        // Identity per the equality and tokenizer\n        return done([{\n          value: this.join(newString),\n          count: newString.length\n        }]);\n      } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n      function execEditLength() {\n        for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n          var basePath = void 0;\n\n          var addPath = bestPath[diagonalPath - 1],\n              removePath = bestPath[diagonalPath + 1],\n              _oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n          if (addPath) {\n            // No one else is going to attempt to use this value, clear it\n            bestPath[diagonalPath - 1] = undefined;\n          }\n\n          var canAdd = addPath && addPath.newPos + 1 < newLen,\n              canRemove = removePath && 0 <= _oldPos && _oldPos < oldLen;\n\n          if (!canAdd && !canRemove) {\n            // If this path is a terminal then prune\n            bestPath[diagonalPath] = undefined;\n            continue;\n          } // Select the diagonal that we want to branch from. We select the prior\n          // path whose position in the new string is the farthest from the origin\n          // and does not pass the bounds of the diff graph\n\n\n          if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n            basePath = clonePath(removePath);\n            self.pushComponent(basePath.components, undefined, true);\n          } else {\n            basePath = addPath; // No need to clone, we've pulled it from the list\n\n            basePath.newPos++;\n            self.pushComponent(basePath.components, true, undefined);\n          }\n\n          _oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath); // If we have hit the end of both strings, then we are done\n\n          if (basePath.newPos + 1 >= newLen && _oldPos + 1 >= oldLen) {\n            return done(buildValues(self, basePath.components, newString, oldString, self.useLongestToken));\n          } else {\n            // Otherwise track this path as a potential candidate and continue.\n            bestPath[diagonalPath] = basePath;\n          }\n        }\n\n        editLength++;\n      } // Performs the length of edit iteration. Is a bit fugly as this has to support the\n      // sync and async mode which is never fun. Loops over execEditLength until a value\n      // is produced.\n\n\n      if (callback) {\n        (function exec() {\n          setTimeout(function () {\n            // This should not happen, but we want to be safe.\n\n            /* istanbul ignore next */\n            if (editLength > maxEditLength) {\n              return callback();\n            }\n\n            if (!execEditLength()) {\n              exec();\n            }\n          }, 0);\n        })();\n      } else {\n        while (editLength <= maxEditLength) {\n          var ret = execEditLength();\n\n          if (ret) {\n            return ret;\n          }\n        }\n      }\n    },\n    pushComponent: function pushComponent(components, added, removed) {\n      var last = components[components.length - 1];\n\n      if (last && last.added === added && last.removed === removed) {\n        // We need to clone here as the component clone operation is just\n        // as shallow array clone\n        components[components.length - 1] = {\n          count: last.count + 1,\n          added: added,\n          removed: removed\n        };\n      } else {\n        components.push({\n          count: 1,\n          added: added,\n          removed: removed\n        });\n      }\n    },\n    extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\n      var newLen = newString.length,\n          oldLen = oldString.length,\n          newPos = basePath.newPos,\n          oldPos = newPos - diagonalPath,\n          commonCount = 0;\n\n      while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n        newPos++;\n        oldPos++;\n        commonCount++;\n      }\n\n      if (commonCount) {\n        basePath.components.push({\n          count: commonCount\n        });\n      }\n\n      basePath.newPos = newPos;\n      return oldPos;\n    },\n    equals: function equals(left, right) {\n      if (this.options.comparator) {\n        return this.options.comparator(left, right);\n      } else {\n        return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\n      }\n    },\n    removeEmpty: function removeEmpty(array) {\n      var ret = [];\n\n      for (var i = 0; i < array.length; i++) {\n        if (array[i]) {\n          ret.push(array[i]);\n        }\n      }\n\n      return ret;\n    },\n    castInput: function castInput(value) {\n      return value;\n    },\n    tokenize: function tokenize(value) {\n      return value.split('');\n    },\n    join: function join(chars) {\n      return chars.join('');\n    }\n  };\n\n  function buildValues(diff, components, newString, oldString, useLongestToken) {\n    var componentPos = 0,\n        componentLen = components.length,\n        newPos = 0,\n        oldPos = 0;\n\n    for (; componentPos < componentLen; componentPos++) {\n      var component = components[componentPos];\n\n      if (!component.removed) {\n        if (!component.added && useLongestToken) {\n          var value = newString.slice(newPos, newPos + component.count);\n          value = value.map(function (value, i) {\n            var oldValue = oldString[oldPos + i];\n            return oldValue.length > value.length ? oldValue : value;\n          });\n          component.value = diff.join(value);\n        } else {\n          component.value = diff.join(newString.slice(newPos, newPos + component.count));\n        }\n\n        newPos += component.count; // Common case\n\n        if (!component.added) {\n          oldPos += component.count;\n        }\n      } else {\n        component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n        oldPos += component.count; // Reverse add and remove so removes are output first to match common convention\n        // The diffing algorithm is tied to add then remove output and this is the simplest\n        // route to get the desired output with minimal overhead.\n\n        if (componentPos && components[componentPos - 1].added) {\n          var tmp = components[componentPos - 1];\n          components[componentPos - 1] = components[componentPos];\n          components[componentPos] = tmp;\n        }\n      }\n    } // Special case handle for when one terminal is ignored (i.e. whitespace).\n    // For this case we merge the terminal into the prior string and drop the change.\n    // This is only available for string mode.\n\n\n    var lastComponent = components[componentLen - 1];\n\n    if (componentLen > 1 && typeof lastComponent.value === 'string' && (lastComponent.added || lastComponent.removed) && diff.equals('', lastComponent.value)) {\n      components[componentLen - 2].value += lastComponent.value;\n      components.pop();\n    }\n\n    return components;\n  }\n\n  function clonePath(path) {\n    return {\n      newPos: path.newPos,\n      components: path.components.slice(0)\n    };\n  }\n\n  var characterDiff = new Diff();\n\n  function diffChars(oldStr, newStr, options) {\n    return characterDiff.diff(oldStr, newStr, options);\n  }\n\n  function generateOptions(options, defaults) {\n    if (typeof options === 'function') {\n      defaults.callback = options;\n    } else if (options) {\n      for (var name in options) {\n        /* istanbul ignore else */\n        if (options.hasOwnProperty(name)) {\n          defaults[name] = options[name];\n        }\n      }\n    }\n\n    return defaults;\n  } //\n  // Ranges and exceptions:\n  // Latin-1 Supplement, 0080–00FF\n  //  - U+00D7  × Multiplication sign\n  //  - U+00F7  ÷ Division sign\n  // Latin Extended-A, 0100–017F\n  // Latin Extended-B, 0180–024F\n  // IPA Extensions, 0250–02AF\n  // Spacing Modifier Letters, 02B0–02FF\n  //  - U+02C7  ˇ &#711;  Caron\n  //  - U+02D8  ˘ &#728;  Breve\n  //  - U+02D9  ˙ &#729;  Dot Above\n  //  - U+02DA  ˚ &#730;  Ring Above\n  //  - U+02DB  ˛ &#731;  Ogonek\n  //  - U+02DC  ˜ &#732;  Small Tilde\n  //  - U+02DD  ˝ &#733;  Double Acute Accent\n  // Latin Extended Additional, 1E00–1EFF\n\n\n  var extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\n  var reWhitespace = /\\S/;\n  var wordDiff = new Diff();\n\n  wordDiff.equals = function (left, right) {\n    if (this.options.ignoreCase) {\n      left = left.toLowerCase();\n      right = right.toLowerCase();\n    }\n\n    return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\n  };\n\n  wordDiff.tokenize = function (value) {\n    var tokens = value.split(/(\\s+|[()[\\]{}'\"]|\\b)/); // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n\n    for (var i = 0; i < tokens.length - 1; i++) {\n      // If we have an empty string in the next field and we have only word chars before and after, merge\n      if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\n        tokens[i] += tokens[i + 2];\n        tokens.splice(i + 1, 2);\n        i--;\n      }\n    }\n\n    return tokens;\n  };\n\n  function diffWords(oldStr, newStr, options) {\n    options = generateOptions(options, {\n      ignoreWhitespace: true\n    });\n    return wordDiff.diff(oldStr, newStr, options);\n  }\n\n  function diffWordsWithSpace(oldStr, newStr, options) {\n    return wordDiff.diff(oldStr, newStr, options);\n  }\n\n  var lineDiff = new Diff();\n\n  lineDiff.tokenize = function (value) {\n    var retLines = [],\n        linesAndNewlines = value.split(/(\\n|\\r\\n)/); // Ignore the final empty token that occurs if the string ends with a new line\n\n    if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n      linesAndNewlines.pop();\n    } // Merge the content and line separators into single tokens\n\n\n    for (var i = 0; i < linesAndNewlines.length; i++) {\n      var line = linesAndNewlines[i];\n\n      if (i % 2 && !this.options.newlineIsToken) {\n        retLines[retLines.length - 1] += line;\n      } else {\n        if (this.options.ignoreWhitespace) {\n          line = line.trim();\n        }\n\n        retLines.push(line);\n      }\n    }\n\n    return retLines;\n  };\n\n  function diffLines(oldStr, newStr, callback) {\n    return lineDiff.diff(oldStr, newStr, callback);\n  }\n\n  function diffTrimmedLines(oldStr, newStr, callback) {\n    var options = generateOptions(callback, {\n      ignoreWhitespace: true\n    });\n    return lineDiff.diff(oldStr, newStr, options);\n  }\n\n  var sentenceDiff = new Diff();\n\n  sentenceDiff.tokenize = function (value) {\n    return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n  };\n\n  function diffSentences(oldStr, newStr, callback) {\n    return sentenceDiff.diff(oldStr, newStr, callback);\n  }\n\n  var cssDiff = new Diff();\n\n  cssDiff.tokenize = function (value) {\n    return value.split(/([{}:;,]|\\s+)/);\n  };\n\n  function diffCss(oldStr, newStr, callback) {\n    return cssDiff.diff(oldStr, newStr, callback);\n  }\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  var objectPrototypeToString = Object.prototype.toString;\n  var jsonDiff = new Diff(); // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n  // dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n\n  jsonDiff.useLongestToken = true;\n  jsonDiff.tokenize = lineDiff.tokenize;\n\n  jsonDiff.castInput = function (value) {\n    var _this$options = this.options,\n        undefinedReplacement = _this$options.undefinedReplacement,\n        _this$options$stringi = _this$options.stringifyReplacer,\n        stringifyReplacer = _this$options$stringi === void 0 ? function (k, v) {\n      return typeof v === 'undefined' ? undefinedReplacement : v;\n    } : _this$options$stringi;\n    return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n  };\n\n  jsonDiff.equals = function (left, right) {\n    return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n  };\n\n  function diffJson(oldObj, newObj, options) {\n    return jsonDiff.diff(oldObj, newObj, options);\n  } // This function handles the presence of circular references by bailing out when encountering an\n  // object that is already on the \"stack\" of items being processed. Accepts an optional replacer\n\n\n  function canonicalize(obj, stack, replacementStack, replacer, key) {\n    stack = stack || [];\n    replacementStack = replacementStack || [];\n\n    if (replacer) {\n      obj = replacer(key, obj);\n    }\n\n    var i;\n\n    for (i = 0; i < stack.length; i += 1) {\n      if (stack[i] === obj) {\n        return replacementStack[i];\n      }\n    }\n\n    var canonicalizedObj;\n\n    if ('[object Array]' === objectPrototypeToString.call(obj)) {\n      stack.push(obj);\n      canonicalizedObj = new Array(obj.length);\n      replacementStack.push(canonicalizedObj);\n\n      for (i = 0; i < obj.length; i += 1) {\n        canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n      }\n\n      stack.pop();\n      replacementStack.pop();\n      return canonicalizedObj;\n    }\n\n    if (obj && obj.toJSON) {\n      obj = obj.toJSON();\n    }\n\n    if (_typeof(obj) === 'object' && obj !== null) {\n      stack.push(obj);\n      canonicalizedObj = {};\n      replacementStack.push(canonicalizedObj);\n\n      var sortedKeys = [],\n          _key;\n\n      for (_key in obj) {\n        /* istanbul ignore else */\n        if (obj.hasOwnProperty(_key)) {\n          sortedKeys.push(_key);\n        }\n      }\n\n      sortedKeys.sort();\n\n      for (i = 0; i < sortedKeys.length; i += 1) {\n        _key = sortedKeys[i];\n        canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\n      }\n\n      stack.pop();\n      replacementStack.pop();\n    } else {\n      canonicalizedObj = obj;\n    }\n\n    return canonicalizedObj;\n  }\n\n  var arrayDiff = new Diff();\n\n  arrayDiff.tokenize = function (value) {\n    return value.slice();\n  };\n\n  arrayDiff.join = arrayDiff.removeEmpty = function (value) {\n    return value;\n  };\n\n  function diffArrays(oldArr, newArr, callback) {\n    return arrayDiff.diff(oldArr, newArr, callback);\n  }\n\n  function parsePatch(uniDiff) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n        delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n        list = [],\n        i = 0;\n\n    function parseIndex() {\n      var index = {};\n      list.push(index); // Parse diff metadata\n\n      while (i < diffstr.length) {\n        var line = diffstr[i]; // File header found, end parsing diff metadata\n\n        if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\n          break;\n        } // Diff index\n\n\n        var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\n\n        if (header) {\n          index.index = header[1];\n        }\n\n        i++;\n      } // Parse file headers if they are defined. Unified diff requires them, but\n      // there's no technical issues to have an isolated hunk without file header\n\n\n      parseFileHeader(index);\n      parseFileHeader(index); // Parse hunks\n\n      index.hunks = [];\n\n      while (i < diffstr.length) {\n        var _line = diffstr[i];\n\n        if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\n          break;\n        } else if (/^@@/.test(_line)) {\n          index.hunks.push(parseHunk());\n        } else if (_line && options.strict) {\n          // Ignore unexpected content unless in strict mode\n          throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\n        } else {\n          i++;\n        }\n      }\n    } // Parses the --- and +++ headers, if none are found, no lines\n    // are consumed.\n\n\n    function parseFileHeader(index) {\n      var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\n\n      if (fileHeader) {\n        var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n        var data = fileHeader[2].split('\\t', 2);\n        var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n\n        if (/^\".*\"$/.test(fileName)) {\n          fileName = fileName.substr(1, fileName.length - 2);\n        }\n\n        index[keyPrefix + 'FileName'] = fileName;\n        index[keyPrefix + 'Header'] = (data[1] || '').trim();\n        i++;\n      }\n    } // Parses a hunk\n    // This assumes that we are at the start of a hunk.\n\n\n    function parseHunk() {\n      var chunkHeaderIndex = i,\n          chunkHeaderLine = diffstr[i++],\n          chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n      var hunk = {\n        oldStart: +chunkHeader[1],\n        oldLines: +chunkHeader[2] || 1,\n        newStart: +chunkHeader[3],\n        newLines: +chunkHeader[4] || 1,\n        lines: [],\n        linedelimiters: []\n      };\n      var addCount = 0,\n          removeCount = 0;\n\n      for (; i < diffstr.length; i++) {\n        // Lines starting with '---' could be mistaken for the \"remove line\" operation\n        // But they could be the header for the next file. Therefore prune such cases out.\n        if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\n          break;\n        }\n\n        var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\n\n        if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n          hunk.lines.push(diffstr[i]);\n          hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n          if (operation === '+') {\n            addCount++;\n          } else if (operation === '-') {\n            removeCount++;\n          } else if (operation === ' ') {\n            addCount++;\n            removeCount++;\n          }\n        } else {\n          break;\n        }\n      } // Handle the empty block count case\n\n\n      if (!addCount && hunk.newLines === 1) {\n        hunk.newLines = 0;\n      }\n\n      if (!removeCount && hunk.oldLines === 1) {\n        hunk.oldLines = 0;\n      } // Perform optional sanity checking\n\n\n      if (options.strict) {\n        if (addCount !== hunk.newLines) {\n          throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n        }\n\n        if (removeCount !== hunk.oldLines) {\n          throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n        }\n      }\n\n      return hunk;\n    }\n\n    while (i < diffstr.length) {\n      parseIndex();\n    }\n\n    return list;\n  } // Iterator that traverses in the range of [min, max], stepping\n  // by distance from a given start position. I.e. for [0, 4], with\n  // start of 2, this will iterate 2, 3, 1, 4, 0.\n\n\n  function distanceIterator(start, minLine, maxLine) {\n    var wantForward = true,\n        backwardExhausted = false,\n        forwardExhausted = false,\n        localOffset = 1;\n    return function iterator() {\n      if (wantForward && !forwardExhausted) {\n        if (backwardExhausted) {\n          localOffset++;\n        } else {\n          wantForward = false;\n        } // Check if trying to fit beyond text length, and if not, check it fits\n        // after offset location (or desired location on first iteration)\n\n\n        if (start + localOffset <= maxLine) {\n          return localOffset;\n        }\n\n        forwardExhausted = true;\n      }\n\n      if (!backwardExhausted) {\n        if (!forwardExhausted) {\n          wantForward = true;\n        } // Check if trying to fit before text beginning, and if not, check it fits\n        // before offset location\n\n\n        if (minLine <= start - localOffset) {\n          return -localOffset++;\n        }\n\n        backwardExhausted = true;\n        return iterator();\n      } // We tried to fit hunk before text beginning and beyond text length, then\n      // hunk can't fit on the text. Return undefined\n\n    };\n  }\n\n  function applyPatch(source, uniDiff) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (typeof uniDiff === 'string') {\n      uniDiff = parsePatch(uniDiff);\n    }\n\n    if (Array.isArray(uniDiff)) {\n      if (uniDiff.length > 1) {\n        throw new Error('applyPatch only works with a single input.');\n      }\n\n      uniDiff = uniDiff[0];\n    } // Apply the diff to the input\n\n\n    var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n        delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n        hunks = uniDiff.hunks,\n        compareLine = options.compareLine || function (lineNumber, line, operation, patchContent) {\n      return line === patchContent;\n    },\n        errorCount = 0,\n        fuzzFactor = options.fuzzFactor || 0,\n        minLine = 0,\n        offset = 0,\n        removeEOFNL,\n        addEOFNL;\n    /**\n     * Checks if the hunk exactly fits on the provided location\n     */\n\n\n    function hunkFits(hunk, toPos) {\n      for (var j = 0; j < hunk.lines.length; j++) {\n        var line = hunk.lines[j],\n            operation = line.length > 0 ? line[0] : ' ',\n            content = line.length > 0 ? line.substr(1) : line;\n\n        if (operation === ' ' || operation === '-') {\n          // Context sanity check\n          if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n            errorCount++;\n\n            if (errorCount > fuzzFactor) {\n              return false;\n            }\n          }\n\n          toPos++;\n        }\n      }\n\n      return true;\n    } // Search best fit offsets for each hunk based on the previous ones\n\n\n    for (var i = 0; i < hunks.length; i++) {\n      var hunk = hunks[i],\n          maxLine = lines.length - hunk.oldLines,\n          localOffset = 0,\n          toPos = offset + hunk.oldStart - 1;\n      var iterator = distanceIterator(toPos, minLine, maxLine);\n\n      for (; localOffset !== undefined; localOffset = iterator()) {\n        if (hunkFits(hunk, toPos + localOffset)) {\n          hunk.offset = offset += localOffset;\n          break;\n        }\n      }\n\n      if (localOffset === undefined) {\n        return false;\n      } // Set lower text limit to end of the current hunk, so next ones don't try\n      // to fit over already patched text\n\n\n      minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n    } // Apply patch hunks\n\n\n    var diffOffset = 0;\n\n    for (var _i = 0; _i < hunks.length; _i++) {\n      var _hunk = hunks[_i],\n          _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\n\n      diffOffset += _hunk.newLines - _hunk.oldLines;\n\n      if (_toPos < 0) {\n        // Creating a new file\n        _toPos = 0;\n      }\n\n      for (var j = 0; j < _hunk.lines.length; j++) {\n        var line = _hunk.lines[j],\n            operation = line.length > 0 ? line[0] : ' ',\n            content = line.length > 0 ? line.substr(1) : line,\n            delimiter = _hunk.linedelimiters[j];\n\n        if (operation === ' ') {\n          _toPos++;\n        } else if (operation === '-') {\n          lines.splice(_toPos, 1);\n          delimiters.splice(_toPos, 1);\n          /* istanbul ignore else */\n        } else if (operation === '+') {\n          lines.splice(_toPos, 0, content);\n          delimiters.splice(_toPos, 0, delimiter);\n          _toPos++;\n        } else if (operation === '\\\\') {\n          var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\n\n          if (previousOperation === '+') {\n            removeEOFNL = true;\n          } else if (previousOperation === '-') {\n            addEOFNL = true;\n          }\n        }\n      }\n    } // Handle EOFNL insertion/removal\n\n\n    if (removeEOFNL) {\n      while (!lines[lines.length - 1]) {\n        lines.pop();\n        delimiters.pop();\n      }\n    } else if (addEOFNL) {\n      lines.push('');\n      delimiters.push('\\n');\n    }\n\n    for (var _k = 0; _k < lines.length - 1; _k++) {\n      lines[_k] = lines[_k] + delimiters[_k];\n    }\n\n    return lines.join('');\n  } // Wrapper that supports multiple file patches via callbacks.\n\n\n  function applyPatches(uniDiff, options) {\n    if (typeof uniDiff === 'string') {\n      uniDiff = parsePatch(uniDiff);\n    }\n\n    var currentIndex = 0;\n\n    function processIndex() {\n      var index = uniDiff[currentIndex++];\n\n      if (!index) {\n        return options.complete();\n      }\n\n      options.loadFile(index, function (err, data) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        var updatedContent = applyPatch(data, index, options);\n        options.patched(index, updatedContent, function (err) {\n          if (err) {\n            return options.complete(err);\n          }\n\n          processIndex();\n        });\n      });\n    }\n\n    processIndex();\n  }\n\n  function structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n    if (!options) {\n      options = {};\n    }\n\n    if (typeof options.context === 'undefined') {\n      options.context = 4;\n    }\n\n    var diff = diffLines(oldStr, newStr, options);\n    diff.push({\n      value: '',\n      lines: []\n    }); // Append an empty value to make cleanup easier\n\n    function contextLines(lines) {\n      return lines.map(function (entry) {\n        return ' ' + entry;\n      });\n    }\n\n    var hunks = [];\n    var oldRangeStart = 0,\n        newRangeStart = 0,\n        curRange = [],\n        oldLine = 1,\n        newLine = 1;\n\n    var _loop = function _loop(i) {\n      var current = diff[i],\n          lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n      current.lines = lines;\n\n      if (current.added || current.removed) {\n        var _curRange; // If we have previous context, start with that\n\n\n        if (!oldRangeStart) {\n          var prev = diff[i - 1];\n          oldRangeStart = oldLine;\n          newRangeStart = newLine;\n\n          if (prev) {\n            curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n            oldRangeStart -= curRange.length;\n            newRangeStart -= curRange.length;\n          }\n        } // Output our changes\n\n\n        (_curRange = curRange).push.apply(_curRange, _toConsumableArray(lines.map(function (entry) {\n          return (current.added ? '+' : '-') + entry;\n        }))); // Track the updated file position\n\n\n        if (current.added) {\n          newLine += lines.length;\n        } else {\n          oldLine += lines.length;\n        }\n      } else {\n        // Identical context lines. Track line changes\n        if (oldRangeStart) {\n          // Close out any changes that have been output (or join overlapping)\n          if (lines.length <= options.context * 2 && i < diff.length - 2) {\n            var _curRange2; // Overlapping\n\n\n            (_curRange2 = curRange).push.apply(_curRange2, _toConsumableArray(contextLines(lines)));\n          } else {\n            var _curRange3; // end the range and output\n\n\n            var contextSize = Math.min(lines.length, options.context);\n\n            (_curRange3 = curRange).push.apply(_curRange3, _toConsumableArray(contextLines(lines.slice(0, contextSize))));\n\n            var hunk = {\n              oldStart: oldRangeStart,\n              oldLines: oldLine - oldRangeStart + contextSize,\n              newStart: newRangeStart,\n              newLines: newLine - newRangeStart + contextSize,\n              lines: curRange\n            };\n\n            if (i >= diff.length - 2 && lines.length <= options.context) {\n              // EOF is inside this hunk\n              var oldEOFNewline = /\\n$/.test(oldStr);\n              var newEOFNewline = /\\n$/.test(newStr);\n              var noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n\n              if (!oldEOFNewline && noNlBeforeAdds) {\n                // special case: old has no eol and no trailing context; no-nl can end up before adds\n                curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n              }\n\n              if (!oldEOFNewline && !noNlBeforeAdds || !newEOFNewline) {\n                curRange.push('\\\\ No newline at end of file');\n              }\n            }\n\n            hunks.push(hunk);\n            oldRangeStart = 0;\n            newRangeStart = 0;\n            curRange = [];\n          }\n        }\n\n        oldLine += lines.length;\n        newLine += lines.length;\n      }\n    };\n\n    for (var i = 0; i < diff.length; i++) {\n      _loop(i);\n    }\n\n    return {\n      oldFileName: oldFileName,\n      newFileName: newFileName,\n      oldHeader: oldHeader,\n      newHeader: newHeader,\n      hunks: hunks\n    };\n  }\n\n  function createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n    var diff = structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options);\n    var ret = [];\n\n    if (oldFileName == newFileName) {\n      ret.push('Index: ' + oldFileName);\n    }\n\n    ret.push('===================================================================');\n    ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n    ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n    for (var i = 0; i < diff.hunks.length; i++) {\n      var hunk = diff.hunks[i];\n      ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\n      ret.push.apply(ret, hunk.lines);\n    }\n\n    return ret.join('\\n') + '\\n';\n  }\n\n  function createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n    return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n  }\n\n  function arrayEqual(a, b) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    return arrayStartsWith(a, b);\n  }\n\n  function arrayStartsWith(array, start) {\n    if (start.length > array.length) {\n      return false;\n    }\n\n    for (var i = 0; i < start.length; i++) {\n      if (start[i] !== array[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function calcLineCount(hunk) {\n    var _calcOldNewLineCount = calcOldNewLineCount(hunk.lines),\n        oldLines = _calcOldNewLineCount.oldLines,\n        newLines = _calcOldNewLineCount.newLines;\n\n    if (oldLines !== undefined) {\n      hunk.oldLines = oldLines;\n    } else {\n      delete hunk.oldLines;\n    }\n\n    if (newLines !== undefined) {\n      hunk.newLines = newLines;\n    } else {\n      delete hunk.newLines;\n    }\n  }\n\n  function merge(mine, theirs, base) {\n    mine = loadPatch(mine, base);\n    theirs = loadPatch(theirs, base);\n    var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning.\n    // Leaving sanity checks on this to the API consumer that may know more about the\n    // meaning in their own context.\n\n    if (mine.index || theirs.index) {\n      ret.index = mine.index || theirs.index;\n    }\n\n    if (mine.newFileName || theirs.newFileName) {\n      if (!fileNameChanged(mine)) {\n        // No header or no change in ours, use theirs (and ours if theirs does not exist)\n        ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n        ret.newFileName = theirs.newFileName || mine.newFileName;\n        ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n        ret.newHeader = theirs.newHeader || mine.newHeader;\n      } else if (!fileNameChanged(theirs)) {\n        // No header or no change in theirs, use ours\n        ret.oldFileName = mine.oldFileName;\n        ret.newFileName = mine.newFileName;\n        ret.oldHeader = mine.oldHeader;\n        ret.newHeader = mine.newHeader;\n      } else {\n        // Both changed... figure it out\n        ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n        ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n        ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n        ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n      }\n    }\n\n    ret.hunks = [];\n    var mineIndex = 0,\n        theirsIndex = 0,\n        mineOffset = 0,\n        theirsOffset = 0;\n\n    while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n      var mineCurrent = mine.hunks[mineIndex] || {\n        oldStart: Infinity\n      },\n          theirsCurrent = theirs.hunks[theirsIndex] || {\n        oldStart: Infinity\n      };\n\n      if (hunkBefore(mineCurrent, theirsCurrent)) {\n        // This patch does not overlap with any of the others, yay.\n        ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n        mineIndex++;\n        theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n      } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n        // This patch does not overlap with any of the others, yay.\n        ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n        theirsIndex++;\n        mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n      } else {\n        // Overlap, merge as best we can\n        var mergedHunk = {\n          oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n          oldLines: 0,\n          newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n          newLines: 0,\n          lines: []\n        };\n        mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n        theirsIndex++;\n        mineIndex++;\n        ret.hunks.push(mergedHunk);\n      }\n    }\n\n    return ret;\n  }\n\n  function loadPatch(param, base) {\n    if (typeof param === 'string') {\n      if (/^@@/m.test(param) || /^Index:/m.test(param)) {\n        return parsePatch(param)[0];\n      }\n\n      if (!base) {\n        throw new Error('Must provide a base reference or pass in a patch');\n      }\n\n      return structuredPatch(undefined, undefined, base, param);\n    }\n\n    return param;\n  }\n\n  function fileNameChanged(patch) {\n    return patch.newFileName && patch.newFileName !== patch.oldFileName;\n  }\n\n  function selectField(index, mine, theirs) {\n    if (mine === theirs) {\n      return mine;\n    } else {\n      index.conflict = true;\n      return {\n        mine: mine,\n        theirs: theirs\n      };\n    }\n  }\n\n  function hunkBefore(test, check) {\n    return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\n  }\n\n  function cloneHunk(hunk, offset) {\n    return {\n      oldStart: hunk.oldStart,\n      oldLines: hunk.oldLines,\n      newStart: hunk.newStart + offset,\n      newLines: hunk.newLines,\n      lines: hunk.lines\n    };\n  }\n\n  function mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n    // This will generally result in a conflicted hunk, but there are cases where the context\n    // is the only overlap where we can successfully merge the content here.\n    var mine = {\n      offset: mineOffset,\n      lines: mineLines,\n      index: 0\n    },\n        their = {\n      offset: theirOffset,\n      lines: theirLines,\n      index: 0\n    }; // Handle any leading content\n\n    insertLeading(hunk, mine, their);\n    insertLeading(hunk, their, mine); // Now in the overlap content. Scan through and select the best changes from each.\n\n    while (mine.index < mine.lines.length && their.index < their.lines.length) {\n      var mineCurrent = mine.lines[mine.index],\n          theirCurrent = their.lines[their.index];\n\n      if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n        // Both modified ...\n        mutualChange(hunk, mine, their);\n      } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n        var _hunk$lines; // Mine inserted\n\n\n        (_hunk$lines = hunk.lines).push.apply(_hunk$lines, _toConsumableArray(collectChange(mine)));\n      } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n        var _hunk$lines2; // Theirs inserted\n\n\n        (_hunk$lines2 = hunk.lines).push.apply(_hunk$lines2, _toConsumableArray(collectChange(their)));\n      } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n        // Mine removed or edited\n        removal(hunk, mine, their);\n      } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n        // Their removed or edited\n        removal(hunk, their, mine, true);\n      } else if (mineCurrent === theirCurrent) {\n        // Context identity\n        hunk.lines.push(mineCurrent);\n        mine.index++;\n        their.index++;\n      } else {\n        // Context mismatch\n        conflict(hunk, collectChange(mine), collectChange(their));\n      }\n    } // Now push anything that may be remaining\n\n\n    insertTrailing(hunk, mine);\n    insertTrailing(hunk, their);\n    calcLineCount(hunk);\n  }\n\n  function mutualChange(hunk, mine, their) {\n    var myChanges = collectChange(mine),\n        theirChanges = collectChange(their);\n\n    if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n      // Special case for remove changes that are supersets of one another\n      if (arrayStartsWith(myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n        var _hunk$lines3;\n\n        (_hunk$lines3 = hunk.lines).push.apply(_hunk$lines3, _toConsumableArray(myChanges));\n\n        return;\n      } else if (arrayStartsWith(theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n        var _hunk$lines4;\n\n        (_hunk$lines4 = hunk.lines).push.apply(_hunk$lines4, _toConsumableArray(theirChanges));\n\n        return;\n      }\n    } else if (arrayEqual(myChanges, theirChanges)) {\n      var _hunk$lines5;\n\n      (_hunk$lines5 = hunk.lines).push.apply(_hunk$lines5, _toConsumableArray(myChanges));\n\n      return;\n    }\n\n    conflict(hunk, myChanges, theirChanges);\n  }\n\n  function removal(hunk, mine, their, swap) {\n    var myChanges = collectChange(mine),\n        theirChanges = collectContext(their, myChanges);\n\n    if (theirChanges.merged) {\n      var _hunk$lines6;\n\n      (_hunk$lines6 = hunk.lines).push.apply(_hunk$lines6, _toConsumableArray(theirChanges.merged));\n    } else {\n      conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n    }\n  }\n\n  function conflict(hunk, mine, their) {\n    hunk.conflict = true;\n    hunk.lines.push({\n      conflict: true,\n      mine: mine,\n      theirs: their\n    });\n  }\n\n  function insertLeading(hunk, insert, their) {\n    while (insert.offset < their.offset && insert.index < insert.lines.length) {\n      var line = insert.lines[insert.index++];\n      hunk.lines.push(line);\n      insert.offset++;\n    }\n  }\n\n  function insertTrailing(hunk, insert) {\n    while (insert.index < insert.lines.length) {\n      var line = insert.lines[insert.index++];\n      hunk.lines.push(line);\n    }\n  }\n\n  function collectChange(state) {\n    var ret = [],\n        operation = state.lines[state.index][0];\n\n    while (state.index < state.lines.length) {\n      var line = state.lines[state.index]; // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n\n      if (operation === '-' && line[0] === '+') {\n        operation = '+';\n      }\n\n      if (operation === line[0]) {\n        ret.push(line);\n        state.index++;\n      } else {\n        break;\n      }\n    }\n\n    return ret;\n  }\n\n  function collectContext(state, matchChanges) {\n    var changes = [],\n        merged = [],\n        matchIndex = 0,\n        contextChanges = false,\n        conflicted = false;\n\n    while (matchIndex < matchChanges.length && state.index < state.lines.length) {\n      var change = state.lines[state.index],\n          match = matchChanges[matchIndex]; // Once we've hit our add, then we are done\n\n      if (match[0] === '+') {\n        break;\n      }\n\n      contextChanges = contextChanges || change[0] !== ' ';\n      merged.push(match);\n      matchIndex++; // Consume any additions in the other block as a conflict to attempt\n      // to pull in the remaining context after this\n\n      if (change[0] === '+') {\n        conflicted = true;\n\n        while (change[0] === '+') {\n          changes.push(change);\n          change = state.lines[++state.index];\n        }\n      }\n\n      if (match.substr(1) === change.substr(1)) {\n        changes.push(change);\n        state.index++;\n      } else {\n        conflicted = true;\n      }\n    }\n\n    if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\n      conflicted = true;\n    }\n\n    if (conflicted) {\n      return changes;\n    }\n\n    while (matchIndex < matchChanges.length) {\n      merged.push(matchChanges[matchIndex++]);\n    }\n\n    return {\n      merged: merged,\n      changes: changes\n    };\n  }\n\n  function allRemoves(changes) {\n    return changes.reduce(function (prev, change) {\n      return prev && change[0] === '-';\n    }, true);\n  }\n\n  function skipRemoveSuperset(state, removeChanges, delta) {\n    for (var i = 0; i < delta; i++) {\n      var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n\n      if (state.lines[state.index + i] !== ' ' + changeContent) {\n        return false;\n      }\n    }\n\n    state.index += delta;\n    return true;\n  }\n\n  function calcOldNewLineCount(lines) {\n    var oldLines = 0;\n    var newLines = 0;\n    lines.forEach(function (line) {\n      if (typeof line !== 'string') {\n        var myCount = calcOldNewLineCount(line.mine);\n        var theirCount = calcOldNewLineCount(line.theirs);\n\n        if (oldLines !== undefined) {\n          if (myCount.oldLines === theirCount.oldLines) {\n            oldLines += myCount.oldLines;\n          } else {\n            oldLines = undefined;\n          }\n        }\n\n        if (newLines !== undefined) {\n          if (myCount.newLines === theirCount.newLines) {\n            newLines += myCount.newLines;\n          } else {\n            newLines = undefined;\n          }\n        }\n      } else {\n        if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n          newLines++;\n        }\n\n        if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n          oldLines++;\n        }\n      }\n    });\n    return {\n      oldLines: oldLines,\n      newLines: newLines\n    };\n  } // See: http://code.google.com/p/google-diff-match-patch/wiki/API\n\n\n  function convertChangesToDMP(changes) {\n    var ret = [],\n        change,\n        operation;\n\n    for (var i = 0; i < changes.length; i++) {\n      change = changes[i];\n\n      if (change.added) {\n        operation = 1;\n      } else if (change.removed) {\n        operation = -1;\n      } else {\n        operation = 0;\n      }\n\n      ret.push([operation, change.value]);\n    }\n\n    return ret;\n  }\n\n  function convertChangesToXML(changes) {\n    var ret = [];\n\n    for (var i = 0; i < changes.length; i++) {\n      var change = changes[i];\n\n      if (change.added) {\n        ret.push('<ins>');\n      } else if (change.removed) {\n        ret.push('<del>');\n      }\n\n      ret.push(escapeHTML(change.value));\n\n      if (change.added) {\n        ret.push('</ins>');\n      } else if (change.removed) {\n        ret.push('</del>');\n      }\n    }\n\n    return ret.join('');\n  }\n\n  function escapeHTML(s) {\n    var n = s;\n    n = n.replace(/&/g, '&amp;');\n    n = n.replace(/</g, '&lt;');\n    n = n.replace(/>/g, '&gt;');\n    n = n.replace(/\"/g, '&quot;');\n    return n;\n  }\n  /* See LICENSE file for terms of use */\n\n\n  exports.Diff = Diff;\n  exports.diffChars = diffChars;\n  exports.diffWords = diffWords;\n  exports.diffWordsWithSpace = diffWordsWithSpace;\n  exports.diffLines = diffLines;\n  exports.diffTrimmedLines = diffTrimmedLines;\n  exports.diffSentences = diffSentences;\n  exports.diffCss = diffCss;\n  exports.diffJson = diffJson;\n  exports.diffArrays = diffArrays;\n  exports.structuredPatch = structuredPatch;\n  exports.createTwoFilesPatch = createTwoFilesPatch;\n  exports.createPatch = createPatch;\n  exports.applyPatch = applyPatch;\n  exports.applyPatches = applyPatches;\n  exports.parsePatch = parsePatch;\n  exports.merge = merge;\n  exports.convertChangesToDMP = convertChangesToDMP;\n  exports.convertChangesToXML = convertChangesToXML;\n  exports.canonicalize = canonicalize;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});\n\n//# sourceURL=webpack:///./node_modules/diff/dist/diff.js?");

/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery JavaScript Library v3.5.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2020-05-04T22:49Z\n */\n(function (global, factory) {\n  \"use strict\";\n\n  if ( true && typeof module.exports === \"object\") {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get jQuery.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    // e.g. var jQuery = require(\"jquery\")(window);\n    // See ticket #14549 for more info.\n    module.exports = global.document ? factory(global, true) : function (w) {\n      if (!w.document) {\n        throw new Error(\"jQuery requires a window with a document\");\n      }\n\n      return factory(w);\n    };\n  } else {\n    factory(global);\n  } // Pass this if window is not defined yet\n\n})(typeof window !== \"undefined\" ? window : this, function (window, noGlobal) {\n  // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n  // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n  // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n  // enough that all such attempts are guarded in a try block.\n  \"use strict\";\n\n  var arr = [];\n  var getProto = Object.getPrototypeOf;\n  var slice = arr.slice;\n  var flat = arr.flat ? function (array) {\n    return arr.flat.call(array);\n  } : function (array) {\n    return arr.concat.apply([], array);\n  };\n  var push = arr.push;\n  var indexOf = arr.indexOf;\n  var class2type = {};\n  var toString = class2type.toString;\n  var hasOwn = class2type.hasOwnProperty;\n  var fnToString = hasOwn.toString;\n  var ObjectFunctionString = fnToString.call(Object);\n  var support = {};\n\n  var isFunction = function isFunction(obj) {\n    // Support: Chrome <=57, Firefox <=52\n    // In some browsers, typeof returns \"function\" for HTML <object> elements\n    // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n    // We don't want to classify *any* DOM node as a function.\n    return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n  var isWindow = function isWindow(obj) {\n    return obj != null && obj === obj.window;\n  };\n\n  var document = window.document;\n  var preservedScriptAttributes = {\n    type: true,\n    src: true,\n    nonce: true,\n    noModule: true\n  };\n\n  function DOMEval(code, node, doc) {\n    doc = doc || document;\n    var i,\n        val,\n        script = doc.createElement(\"script\");\n    script.text = code;\n\n    if (node) {\n      for (i in preservedScriptAttributes) {\n        // Support: Firefox 64+, Edge 18+\n        // Some browsers don't support the \"nonce\" property on scripts.\n        // On the other hand, just using `getAttribute` is not enough as\n        // the `nonce` attribute is reset to an empty string whenever it\n        // becomes browsing-context connected.\n        // See https://github.com/whatwg/html/issues/2369\n        // See https://html.spec.whatwg.org/#nonce-attributes\n        // The `node.getAttribute` check was added for the sake of\n        // `jQuery.globalEval` so that it can fake a nonce-containing node\n        // via an object.\n        val = node[i] || node.getAttribute && node.getAttribute(i);\n\n        if (val) {\n          script.setAttribute(i, val);\n        }\n      }\n    }\n\n    doc.head.appendChild(script).parentNode.removeChild(script);\n  }\n\n  function toType(obj) {\n    if (obj == null) {\n      return obj + \"\";\n    } // Support: Android <=2.3 only (functionish RegExp)\n\n\n    return typeof obj === \"object\" || typeof obj === \"function\" ? class2type[toString.call(obj)] || \"object\" : typeof obj;\n  }\n  /* global Symbol */\n  // Defining this global in .eslintrc.json would create a danger of using the global\n  // unguarded in another place, it seems safer to define global only for this module\n\n\n  var version = \"3.5.1\",\n      // Define a local copy of jQuery\n  jQuery = function (selector, context) {\n    // The jQuery object is actually just the init constructor 'enhanced'\n    // Need init if jQuery is called (just allow error to be thrown if not included)\n    return new jQuery.fn.init(selector, context);\n  };\n\n  jQuery.fn = jQuery.prototype = {\n    // The current version of jQuery being used\n    jquery: version,\n    constructor: jQuery,\n    // The default length of a jQuery object is 0\n    length: 0,\n    toArray: function () {\n      return slice.call(this);\n    },\n    // Get the Nth element in the matched element set OR\n    // Get the whole matched element set as a clean array\n    get: function (num) {\n      // Return all the elements in a clean array\n      if (num == null) {\n        return slice.call(this);\n      } // Return just the one element from the set\n\n\n      return num < 0 ? this[num + this.length] : this[num];\n    },\n    // Take an array of elements and push it onto the stack\n    // (returning the new matched element set)\n    pushStack: function (elems) {\n      // Build a new jQuery matched element set\n      var ret = jQuery.merge(this.constructor(), elems); // Add the old object onto the stack (as a reference)\n\n      ret.prevObject = this; // Return the newly-formed element set\n\n      return ret;\n    },\n    // Execute a callback for every element in the matched set.\n    each: function (callback) {\n      return jQuery.each(this, callback);\n    },\n    map: function (callback) {\n      return this.pushStack(jQuery.map(this, function (elem, i) {\n        return callback.call(elem, i, elem);\n      }));\n    },\n    slice: function () {\n      return this.pushStack(slice.apply(this, arguments));\n    },\n    first: function () {\n      return this.eq(0);\n    },\n    last: function () {\n      return this.eq(-1);\n    },\n    even: function () {\n      return this.pushStack(jQuery.grep(this, function (_elem, i) {\n        return (i + 1) % 2;\n      }));\n    },\n    odd: function () {\n      return this.pushStack(jQuery.grep(this, function (_elem, i) {\n        return i % 2;\n      }));\n    },\n    eq: function (i) {\n      var len = this.length,\n          j = +i + (i < 0 ? len : 0);\n      return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n    },\n    end: function () {\n      return this.prevObject || this.constructor();\n    },\n    // For internal use only.\n    // Behaves like an Array's method, not like a jQuery method.\n    push: push,\n    sort: arr.sort,\n    splice: arr.splice\n  };\n\n  jQuery.extend = jQuery.fn.extend = function () {\n    var options,\n        name,\n        src,\n        copy,\n        copyIsArray,\n        clone,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false; // Handle a deep copy situation\n\n    if (typeof target === \"boolean\") {\n      deep = target; // Skip the boolean and the target\n\n      target = arguments[i] || {};\n      i++;\n    } // Handle case when target is a string or something (possible in deep copy)\n\n\n    if (typeof target !== \"object\" && !isFunction(target)) {\n      target = {};\n    } // Extend jQuery itself if only one argument is passed\n\n\n    if (i === length) {\n      target = this;\n      i--;\n    }\n\n    for (; i < length; i++) {\n      // Only deal with non-null/undefined values\n      if ((options = arguments[i]) != null) {\n        // Extend the base object\n        for (name in options) {\n          copy = options[name]; // Prevent Object.prototype pollution\n          // Prevent never-ending loop\n\n          if (name === \"__proto__\" || target === copy) {\n            continue;\n          } // Recurse if we're merging plain objects or arrays\n\n\n          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n            src = target[name]; // Ensure proper type for the source value\n\n            if (copyIsArray && !Array.isArray(src)) {\n              clone = [];\n            } else if (!copyIsArray && !jQuery.isPlainObject(src)) {\n              clone = {};\n            } else {\n              clone = src;\n            }\n\n            copyIsArray = false; // Never move original objects, clone them\n\n            target[name] = jQuery.extend(deep, clone, copy); // Don't bring in undefined values\n          } else if (copy !== undefined) {\n            target[name] = copy;\n          }\n        }\n      }\n    } // Return the modified object\n\n\n    return target;\n  };\n\n  jQuery.extend({\n    // Unique for each copy of jQuery on the page\n    expando: \"jQuery\" + (version + Math.random()).replace(/\\D/g, \"\"),\n    // Assume jQuery is ready without the ready module\n    isReady: true,\n    error: function (msg) {\n      throw new Error(msg);\n    },\n    noop: function () {},\n    isPlainObject: function (obj) {\n      var proto, Ctor; // Detect obvious negatives\n      // Use toString instead of jQuery.type to catch host objects\n\n      if (!obj || toString.call(obj) !== \"[object Object]\") {\n        return false;\n      }\n\n      proto = getProto(obj); // Objects with no prototype (e.g., `Object.create( null )`) are plain\n\n      if (!proto) {\n        return true;\n      } // Objects with prototype are plain iff they were constructed by a global Object function\n\n\n      Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\n      return typeof Ctor === \"function\" && fnToString.call(Ctor) === ObjectFunctionString;\n    },\n    isEmptyObject: function (obj) {\n      var name;\n\n      for (name in obj) {\n        return false;\n      }\n\n      return true;\n    },\n    // Evaluates a script in a provided context; falls back to the global one\n    // if not specified.\n    globalEval: function (code, options, doc) {\n      DOMEval(code, {\n        nonce: options && options.nonce\n      }, doc);\n    },\n    each: function (obj, callback) {\n      var length,\n          i = 0;\n\n      if (isArrayLike(obj)) {\n        length = obj.length;\n\n        for (; i < length; i++) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      } else {\n        for (i in obj) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      }\n\n      return obj;\n    },\n    // results is for internal usage only\n    makeArray: function (arr, results) {\n      var ret = results || [];\n\n      if (arr != null) {\n        if (isArrayLike(Object(arr))) {\n          jQuery.merge(ret, typeof arr === \"string\" ? [arr] : arr);\n        } else {\n          push.call(ret, arr);\n        }\n      }\n\n      return ret;\n    },\n    inArray: function (elem, arr, i) {\n      return arr == null ? -1 : indexOf.call(arr, elem, i);\n    },\n    // Support: Android <=4.0 only, PhantomJS 1 only\n    // push.apply(_, arraylike) throws on ancient WebKit\n    merge: function (first, second) {\n      var len = +second.length,\n          j = 0,\n          i = first.length;\n\n      for (; j < len; j++) {\n        first[i++] = second[j];\n      }\n\n      first.length = i;\n      return first;\n    },\n    grep: function (elems, callback, invert) {\n      var callbackInverse,\n          matches = [],\n          i = 0,\n          length = elems.length,\n          callbackExpect = !invert; // Go through the array, only saving the items\n      // that pass the validator function\n\n      for (; i < length; i++) {\n        callbackInverse = !callback(elems[i], i);\n\n        if (callbackInverse !== callbackExpect) {\n          matches.push(elems[i]);\n        }\n      }\n\n      return matches;\n    },\n    // arg is for internal usage only\n    map: function (elems, callback, arg) {\n      var length,\n          value,\n          i = 0,\n          ret = []; // Go through the array, translating each of the items to their new values\n\n      if (isArrayLike(elems)) {\n        length = elems.length;\n\n        for (; i < length; i++) {\n          value = callback(elems[i], i, arg);\n\n          if (value != null) {\n            ret.push(value);\n          }\n        } // Go through every key on the object,\n\n      } else {\n        for (i in elems) {\n          value = callback(elems[i], i, arg);\n\n          if (value != null) {\n            ret.push(value);\n          }\n        }\n      } // Flatten any nested arrays\n\n\n      return flat(ret);\n    },\n    // A global GUID counter for objects\n    guid: 1,\n    // jQuery.support is not used in Core but other projects attach their\n    // properties to it so it needs to exist.\n    support: support\n  });\n\n  if (typeof Symbol === \"function\") {\n    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];\n  } // Populate the class2type map\n\n\n  jQuery.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"), function (_i, name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n  });\n\n  function isArrayLike(obj) {\n    // Support: real iOS 8.2 only (not reproducible in simulator)\n    // `in` check used to prevent JIT error (gh-2145)\n    // hasOwn isn't used here due to false negatives\n    // regarding Nodelist length in IE\n    var length = !!obj && \"length\" in obj && obj.length,\n        type = toType(obj);\n\n    if (isFunction(obj) || isWindow(obj)) {\n      return false;\n    }\n\n    return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && length - 1 in obj;\n  }\n\n  var Sizzle =\n  /*!\n   * Sizzle CSS Selector Engine v2.3.5\n   * https://sizzlejs.com/\n   *\n   * Copyright JS Foundation and other contributors\n   * Released under the MIT license\n   * https://js.foundation/\n   *\n   * Date: 2020-03-14\n   */\n  function (window) {\n    var i,\n        support,\n        Expr,\n        getText,\n        isXML,\n        tokenize,\n        compile,\n        select,\n        outermostContext,\n        sortInput,\n        hasDuplicate,\n        // Local document vars\n    setDocument,\n        document,\n        docElem,\n        documentIsHTML,\n        rbuggyQSA,\n        rbuggyMatches,\n        matches,\n        contains,\n        // Instance-specific data\n    expando = \"sizzle\" + 1 * new Date(),\n        preferredDoc = window.document,\n        dirruns = 0,\n        done = 0,\n        classCache = createCache(),\n        tokenCache = createCache(),\n        compilerCache = createCache(),\n        nonnativeSelectorCache = createCache(),\n        sortOrder = function (a, b) {\n      if (a === b) {\n        hasDuplicate = true;\n      }\n\n      return 0;\n    },\n        // Instance methods\n    hasOwn = {}.hasOwnProperty,\n        arr = [],\n        pop = arr.pop,\n        pushNative = arr.push,\n        push = arr.push,\n        slice = arr.slice,\n        // Use a stripped-down indexOf as it's faster than native\n    // https://jsperf.com/thor-indexof-vs-for/5\n    indexOf = function (list, elem) {\n      var i = 0,\n          len = list.length;\n\n      for (; i < len; i++) {\n        if (list[i] === elem) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n        booleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|\" + \"ismap|loop|multiple|open|readonly|required|scoped\",\n        // Regular expressions\n    // http://www.w3.org/TR/css3-selectors/#whitespace\n    whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n        // https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n    identifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",\n        // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n    attributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace + // Operator (capture 2)\n    \"*([*^$|!~]?=)\" + whitespace + // \"Attribute values must be CSS identifiers [capture 5]\n    // or strings [capture 3 or capture 4]\"\n    \"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace + \"*\\\\]\",\n        pseudos = \":(\" + identifier + \")(?:\\\\((\" + // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n    // 1. quoted (capture 3; capture 4 or capture 5)\n    \"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" + // 2. simple (capture 6)\n    \"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" + // 3. anything else (capture 2)\n    \".*\" + \")\\\\)|)\",\n        // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n    rwhitespace = new RegExp(whitespace + \"+\", \"g\"),\n        rtrim = new RegExp(\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\"),\n        rcomma = new RegExp(\"^\" + whitespace + \"*,\" + whitespace + \"*\"),\n        rcombinators = new RegExp(\"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\"),\n        rdescend = new RegExp(whitespace + \"|>\"),\n        rpseudo = new RegExp(pseudos),\n        ridentifier = new RegExp(\"^\" + identifier + \"$\"),\n        matchExpr = {\n      \"ID\": new RegExp(\"^#(\" + identifier + \")\"),\n      \"CLASS\": new RegExp(\"^\\\\.(\" + identifier + \")\"),\n      \"TAG\": new RegExp(\"^(\" + identifier + \"|[*])\"),\n      \"ATTR\": new RegExp(\"^\" + attributes),\n      \"PSEUDO\": new RegExp(\"^\" + pseudos),\n      \"CHILD\": new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\"),\n      \"bool\": new RegExp(\"^(?:\" + booleans + \")$\", \"i\"),\n      // For use in libraries implementing .is()\n      // We use this for POS matching in `select`\n      \"needsContext\": new RegExp(\"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\")\n    },\n        rhtml = /HTML$/i,\n        rinputs = /^(?:input|select|textarea|button)$/i,\n        rheader = /^h\\d$/i,\n        rnative = /^[^{]+\\{\\s*\\[native \\w/,\n        // Easily-parseable/retrievable ID or TAG or CLASS selectors\n    rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n        rsibling = /[+~]/,\n        // CSS escapes\n    // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n    runescape = new RegExp(\"\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\", \"g\"),\n        funescape = function (escape, nonHex) {\n      var high = \"0x\" + escape.slice(1) - 0x10000;\n      return nonHex ? // Strip the backslash prefix from a non-hex escape sequence\n      nonHex : // Replace a hexadecimal escape sequence with the encoded Unicode code point\n      // Support: IE <=11+\n      // For values outside the Basic Multilingual Plane (BMP), manually construct a\n      // surrogate pair\n      high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);\n    },\n        // CSS string/identifier serialization\n    // https://drafts.csswg.org/cssom/#common-serializing-idioms\n    rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n        fcssescape = function (ch, asCodePoint) {\n      if (asCodePoint) {\n        // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n        if (ch === \"\\0\") {\n          return \"\\uFFFD\";\n        } // Control characters and (dependent upon position) numbers get escaped as code points\n\n\n        return ch.slice(0, -1) + \"\\\\\" + ch.charCodeAt(ch.length - 1).toString(16) + \" \";\n      } // Other potentially-special ASCII characters get backslash-escaped\n\n\n      return \"\\\\\" + ch;\n    },\n        // Used for iframes\n    // See setDocument()\n    // Removing the function wrapper causes a \"Permission Denied\"\n    // error in IE\n    unloadHandler = function () {\n      setDocument();\n    },\n        inDisabledFieldset = addCombinator(function (elem) {\n      return elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\n    }, {\n      dir: \"parentNode\",\n      next: \"legend\"\n    }); // Optimize for push.apply( _, NodeList )\n\n\n    try {\n      push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes); // Support: Android<4.0\n      // Detect silently failing push.apply\n      // eslint-disable-next-line no-unused-expressions\n\n      arr[preferredDoc.childNodes.length].nodeType;\n    } catch (e) {\n      push = {\n        apply: arr.length ? // Leverage slice if possible\n        function (target, els) {\n          pushNative.apply(target, slice.call(els));\n        } : // Support: IE<9\n        // Otherwise append directly\n        function (target, els) {\n          var j = target.length,\n              i = 0; // Can't trust NodeList.length\n\n          while (target[j++] = els[i++]) {}\n\n          target.length = j - 1;\n        }\n      };\n    }\n\n    function Sizzle(selector, context, results, seed) {\n      var m,\n          i,\n          elem,\n          nid,\n          match,\n          groups,\n          newSelector,\n          newContext = context && context.ownerDocument,\n          // nodeType defaults to 9, since context defaults to document\n      nodeType = context ? context.nodeType : 9;\n      results = results || []; // Return early from calls with invalid selector or context\n\n      if (typeof selector !== \"string\" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\n        return results;\n      } // Try to shortcut find operations (as opposed to filters) in HTML documents\n\n\n      if (!seed) {\n        setDocument(context);\n        context = context || document;\n\n        if (documentIsHTML) {\n          // If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n          // (excepting DocumentFragment context, where the methods don't exist)\n          if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\n            // ID selector\n            if (m = match[1]) {\n              // Document context\n              if (nodeType === 9) {\n                if (elem = context.getElementById(m)) {\n                  // Support: IE, Opera, Webkit\n                  // TODO: identify versions\n                  // getElementById can match elements by name instead of ID\n                  if (elem.id === m) {\n                    results.push(elem);\n                    return results;\n                  }\n                } else {\n                  return results;\n                } // Element context\n\n              } else {\n                // Support: IE, Opera, Webkit\n                // TODO: identify versions\n                // getElementById can match elements by name instead of ID\n                if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {\n                  results.push(elem);\n                  return results;\n                }\n              } // Type selector\n\n            } else if (match[2]) {\n              push.apply(results, context.getElementsByTagName(selector));\n              return results; // Class selector\n            } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {\n              push.apply(results, context.getElementsByClassName(m));\n              return results;\n            }\n          } // Take advantage of querySelectorAll\n\n\n          if (support.qsa && !nonnativeSelectorCache[selector + \" \"] && (!rbuggyQSA || !rbuggyQSA.test(selector)) && ( // Support: IE 8 only\n          // Exclude object elements\n          nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\")) {\n            newSelector = selector;\n            newContext = context; // qSA considers elements outside a scoping root when evaluating child or\n            // descendant combinators, which is not what we want.\n            // In such cases, we work around the behavior by prefixing every selector in the\n            // list with an ID selector referencing the scope context.\n            // The technique has to be used as well when a leading combinator is used\n            // as such selectors are not recognized by querySelectorAll.\n            // Thanks to Andrew Dupont for this technique.\n\n            if (nodeType === 1 && (rdescend.test(selector) || rcombinators.test(selector))) {\n              // Expand context for sibling selectors\n              newContext = rsibling.test(selector) && testContext(context.parentNode) || context; // We can use :scope instead of the ID hack if the browser\n              // supports it & if we're not changing the context.\n\n              if (newContext !== context || !support.scope) {\n                // Capture the context ID, setting it first if necessary\n                if (nid = context.getAttribute(\"id\")) {\n                  nid = nid.replace(rcssescape, fcssescape);\n                } else {\n                  context.setAttribute(\"id\", nid = expando);\n                }\n              } // Prefix every selector in the list\n\n\n              groups = tokenize(selector);\n              i = groups.length;\n\n              while (i--) {\n                groups[i] = (nid ? \"#\" + nid : \":scope\") + \" \" + toSelector(groups[i]);\n              }\n\n              newSelector = groups.join(\",\");\n            }\n\n            try {\n              push.apply(results, newContext.querySelectorAll(newSelector));\n              return results;\n            } catch (qsaError) {\n              nonnativeSelectorCache(selector, true);\n            } finally {\n              if (nid === expando) {\n                context.removeAttribute(\"id\");\n              }\n            }\n          }\n        }\n      } // All others\n\n\n      return select(selector.replace(rtrim, \"$1\"), context, results, seed);\n    }\n    /**\n     * Create key-value caches of limited size\n     * @returns {function(string, object)} Returns the Object data after storing it on itself with\n     *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n     *\tdeleting the oldest entry\n     */\n\n\n    function createCache() {\n      var keys = [];\n\n      function cache(key, value) {\n        // Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n        if (keys.push(key + \" \") > Expr.cacheLength) {\n          // Only keep the most recent entries\n          delete cache[keys.shift()];\n        }\n\n        return cache[key + \" \"] = value;\n      }\n\n      return cache;\n    }\n    /**\n     * Mark a function for special use by Sizzle\n     * @param {Function} fn The function to mark\n     */\n\n\n    function markFunction(fn) {\n      fn[expando] = true;\n      return fn;\n    }\n    /**\n     * Support testing using an element\n     * @param {Function} fn Passed the created element and returns a boolean result\n     */\n\n\n    function assert(fn) {\n      var el = document.createElement(\"fieldset\");\n\n      try {\n        return !!fn(el);\n      } catch (e) {\n        return false;\n      } finally {\n        // Remove from its parent by default\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        } // release memory in IE\n\n\n        el = null;\n      }\n    }\n    /**\n     * Adds the same handler for all of the specified attrs\n     * @param {String} attrs Pipe-separated list of attributes\n     * @param {Function} handler The method that will be applied\n     */\n\n\n    function addHandle(attrs, handler) {\n      var arr = attrs.split(\"|\"),\n          i = arr.length;\n\n      while (i--) {\n        Expr.attrHandle[arr[i]] = handler;\n      }\n    }\n    /**\n     * Checks document order of two siblings\n     * @param {Element} a\n     * @param {Element} b\n     * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n     */\n\n\n    function siblingCheck(a, b) {\n      var cur = b && a,\n          diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex; // Use IE sourceIndex if available on both nodes\n\n      if (diff) {\n        return diff;\n      } // Check if b follows a\n\n\n      if (cur) {\n        while (cur = cur.nextSibling) {\n          if (cur === b) {\n            return -1;\n          }\n        }\n      }\n\n      return a ? 1 : -1;\n    }\n    /**\n     * Returns a function to use in pseudos for input types\n     * @param {String} type\n     */\n\n\n    function createInputPseudo(type) {\n      return function (elem) {\n        var name = elem.nodeName.toLowerCase();\n        return name === \"input\" && elem.type === type;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for buttons\n     * @param {String} type\n     */\n\n\n    function createButtonPseudo(type) {\n      return function (elem) {\n        var name = elem.nodeName.toLowerCase();\n        return (name === \"input\" || name === \"button\") && elem.type === type;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for :enabled/:disabled\n     * @param {Boolean} disabled true for :disabled; false for :enabled\n     */\n\n\n    function createDisabledPseudo(disabled) {\n      // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n      return function (elem) {\n        // Only certain elements can match :enabled or :disabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n        if (\"form\" in elem) {\n          // Check for inherited disabledness on relevant non-disabled elements:\n          // * listed form-associated elements in a disabled fieldset\n          //   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n          // * option elements in a disabled optgroup\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n          // All such elements have a \"form\" property.\n          if (elem.parentNode && elem.disabled === false) {\n            // Option elements defer to a parent optgroup if present\n            if (\"label\" in elem) {\n              if (\"label\" in elem.parentNode) {\n                return elem.parentNode.disabled === disabled;\n              } else {\n                return elem.disabled === disabled;\n              }\n            } // Support: IE 6 - 11\n            // Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\n\n            return elem.isDisabled === disabled || // Where there is no isDisabled, check manually\n\n            /* jshint -W018 */\n            elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;\n          }\n\n          return elem.disabled === disabled; // Try to winnow out elements that can't be disabled before trusting the disabled property.\n          // Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n          // even exist on them, let alone have a boolean value.\n        } else if (\"label\" in elem) {\n          return elem.disabled === disabled;\n        } // Remaining elements are neither :enabled nor :disabled\n\n\n        return false;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for positionals\n     * @param {Function} fn\n     */\n\n\n    function createPositionalPseudo(fn) {\n      return markFunction(function (argument) {\n        argument = +argument;\n        return markFunction(function (seed, matches) {\n          var j,\n              matchIndexes = fn([], seed.length, argument),\n              i = matchIndexes.length; // Match elements found at the specified indexes\n\n          while (i--) {\n            if (seed[j = matchIndexes[i]]) {\n              seed[j] = !(matches[j] = seed[j]);\n            }\n          }\n        });\n      });\n    }\n    /**\n     * Checks a node for validity as a Sizzle context\n     * @param {Element|Object=} context\n     * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n     */\n\n\n    function testContext(context) {\n      return context && typeof context.getElementsByTagName !== \"undefined\" && context;\n    } // Expose support vars for convenience\n\n\n    support = Sizzle.support = {};\n    /**\n     * Detects XML nodes\n     * @param {Element|Object} elem An element or a document\n     * @returns {Boolean} True iff elem is a non-HTML XML node\n     */\n\n    isXML = Sizzle.isXML = function (elem) {\n      var namespace = elem.namespaceURI,\n          docElem = (elem.ownerDocument || elem).documentElement; // Support: IE <=8\n      // Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\n      // https://bugs.jquery.com/ticket/4833\n\n      return !rhtml.test(namespace || docElem && docElem.nodeName || \"HTML\");\n    };\n    /**\n     * Sets document-related variables once based on the current document\n     * @param {Element|Object} [doc] An element or document object to use to set the document\n     * @returns {Object} Returns the current document\n     */\n\n\n    setDocument = Sizzle.setDocument = function (node) {\n      var hasCompare,\n          subWindow,\n          doc = node ? node.ownerDocument || node : preferredDoc; // Return early if doc is invalid or already selected\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n\n      if (doc == document || doc.nodeType !== 9 || !doc.documentElement) {\n        return document;\n      } // Update global variables\n\n\n      document = doc;\n      docElem = document.documentElement;\n      documentIsHTML = !isXML(document); // Support: IE 9 - 11+, Edge 12 - 18+\n      // Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n\n      if (preferredDoc != document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {\n        // Support: IE 11, Edge\n        if (subWindow.addEventListener) {\n          subWindow.addEventListener(\"unload\", unloadHandler, false); // Support: IE 9 - 10 only\n        } else if (subWindow.attachEvent) {\n          subWindow.attachEvent(\"onunload\", unloadHandler);\n        }\n      } // Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,\n      // Safari 4 - 5 only, Opera <=11.6 - 12.x only\n      // IE/Edge & older browsers don't support the :scope pseudo-class.\n      // Support: Safari 6.0 only\n      // Safari 6.0 supports :scope but it's an alias of :root there.\n\n\n      support.scope = assert(function (el) {\n        docElem.appendChild(el).appendChild(document.createElement(\"div\"));\n        return typeof el.querySelectorAll !== \"undefined\" && !el.querySelectorAll(\":scope fieldset div\").length;\n      });\n      /* Attributes\n      ---------------------------------------------------------------------- */\n      // Support: IE<8\n      // Verify that getAttribute really returns attributes and not properties\n      // (excepting IE8 booleans)\n\n      support.attributes = assert(function (el) {\n        el.className = \"i\";\n        return !el.getAttribute(\"className\");\n      });\n      /* getElement(s)By*\n      ---------------------------------------------------------------------- */\n      // Check if getElementsByTagName(\"*\") returns only elements\n\n      support.getElementsByTagName = assert(function (el) {\n        el.appendChild(document.createComment(\"\"));\n        return !el.getElementsByTagName(\"*\").length;\n      }); // Support: IE<9\n\n      support.getElementsByClassName = rnative.test(document.getElementsByClassName); // Support: IE<10\n      // Check if getElementById returns elements by name\n      // The broken getElementById methods don't pick up programmatically-set names,\n      // so use a roundabout getElementsByName test\n\n      support.getById = assert(function (el) {\n        docElem.appendChild(el).id = expando;\n        return !document.getElementsByName || !document.getElementsByName(expando).length;\n      }); // ID filter and find\n\n      if (support.getById) {\n        Expr.filter[\"ID\"] = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            return elem.getAttribute(\"id\") === attrId;\n          };\n        };\n\n        Expr.find[\"ID\"] = function (id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var elem = context.getElementById(id);\n            return elem ? [elem] : [];\n          }\n        };\n      } else {\n        Expr.filter[\"ID\"] = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            var node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n            return node && node.value === attrId;\n          };\n        }; // Support: IE 6 - 7 only\n        // getElementById is not reliable as a find shortcut\n\n\n        Expr.find[\"ID\"] = function (id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var node,\n                i,\n                elems,\n                elem = context.getElementById(id);\n\n            if (elem) {\n              // Verify the id attribute\n              node = elem.getAttributeNode(\"id\");\n\n              if (node && node.value === id) {\n                return [elem];\n              } // Fall back on getElementsByName\n\n\n              elems = context.getElementsByName(id);\n              i = 0;\n\n              while (elem = elems[i++]) {\n                node = elem.getAttributeNode(\"id\");\n\n                if (node && node.value === id) {\n                  return [elem];\n                }\n              }\n            }\n\n            return [];\n          }\n        };\n      } // Tag\n\n\n      Expr.find[\"TAG\"] = support.getElementsByTagName ? function (tag, context) {\n        if (typeof context.getElementsByTagName !== \"undefined\") {\n          return context.getElementsByTagName(tag); // DocumentFragment nodes don't have gEBTN\n        } else if (support.qsa) {\n          return context.querySelectorAll(tag);\n        }\n      } : function (tag, context) {\n        var elem,\n            tmp = [],\n            i = 0,\n            // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n        results = context.getElementsByTagName(tag); // Filter out possible comments\n\n        if (tag === \"*\") {\n          while (elem = results[i++]) {\n            if (elem.nodeType === 1) {\n              tmp.push(elem);\n            }\n          }\n\n          return tmp;\n        }\n\n        return results;\n      }; // Class\n\n      Expr.find[\"CLASS\"] = support.getElementsByClassName && function (className, context) {\n        if (typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML) {\n          return context.getElementsByClassName(className);\n        }\n      };\n      /* QSA/matchesSelector\n      ---------------------------------------------------------------------- */\n      // QSA and matchesSelector support\n      // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\n\n      rbuggyMatches = []; // qSa(:focus) reports false when true (Chrome 21)\n      // We allow this because of a bug in IE8/9 that throws an error\n      // whenever `document.activeElement` is accessed on an iframe\n      // So, we allow :focus to pass through QSA all the time to avoid the IE error\n      // See https://bugs.jquery.com/ticket/13378\n\n      rbuggyQSA = [];\n\n      if (support.qsa = rnative.test(document.querySelectorAll)) {\n        // Build QSA regex\n        // Regex strategy adopted from Diego Perini\n        assert(function (el) {\n          var input; // Select is set to empty string on purpose\n          // This is to test IE's treatment of not explicitly\n          // setting a boolean content attribute,\n          // since its presence should be enough\n          // https://bugs.jquery.com/ticket/12359\n\n          docElem.appendChild(el).innerHTML = \"<a id='\" + expando + \"'></a>\" + \"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" + \"<option selected=''></option></select>\"; // Support: IE8, Opera 11-12.16\n          // Nothing should be selected when empty strings follow ^= or $= or *=\n          // The test attribute must be unknown in Opera but \"safe\" for WinRT\n          // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\n          if (el.querySelectorAll(\"[msallowcapture^='']\").length) {\n            rbuggyQSA.push(\"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\");\n          } // Support: IE8\n          // Boolean attributes and \"value\" are not treated correctly\n\n\n          if (!el.querySelectorAll(\"[selected]\").length) {\n            rbuggyQSA.push(\"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\");\n          } // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\n\n          if (!el.querySelectorAll(\"[id~=\" + expando + \"-]\").length) {\n            rbuggyQSA.push(\"~=\");\n          } // Support: IE 11+, Edge 15 - 18+\n          // IE 11/Edge don't find elements on a `[name='']` query in some cases.\n          // Adding a temporary attribute to the document before the selection works\n          // around the issue.\n          // Interestingly, IE 10 & older don't seem to have the issue.\n\n\n          input = document.createElement(\"input\");\n          input.setAttribute(\"name\", \"\");\n          el.appendChild(input);\n\n          if (!el.querySelectorAll(\"[name='']\").length) {\n            rbuggyQSA.push(\"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" + whitespace + \"*(?:''|\\\"\\\")\");\n          } // Webkit/Opera - :checked should return selected option elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          // IE8 throws error here and will not see later tests\n\n\n          if (!el.querySelectorAll(\":checked\").length) {\n            rbuggyQSA.push(\":checked\");\n          } // Support: Safari 8+, iOS 8+\n          // https://bugs.webkit.org/show_bug.cgi?id=136851\n          // In-page `selector#id sibling-combinator selector` fails\n\n\n          if (!el.querySelectorAll(\"a#\" + expando + \"+*\").length) {\n            rbuggyQSA.push(\".#.+[+~]\");\n          } // Support: Firefox <=3.6 - 5 only\n          // Old Firefox doesn't throw on a badly-escaped identifier.\n\n\n          el.querySelectorAll(\"\\\\\\f\");\n          rbuggyQSA.push(\"[\\\\r\\\\n\\\\f]\");\n        });\n        assert(function (el) {\n          el.innerHTML = \"<a href='' disabled='disabled'></a>\" + \"<select disabled='disabled'><option/></select>\"; // Support: Windows 8 Native Apps\n          // The type and name attributes are restricted during .innerHTML assignment\n\n          var input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"hidden\");\n          el.appendChild(input).setAttribute(\"name\", \"D\"); // Support: IE8\n          // Enforce case-sensitivity of name attribute\n\n          if (el.querySelectorAll(\"[name=d]\").length) {\n            rbuggyQSA.push(\"name\" + whitespace + \"*[*^$|!~]?=\");\n          } // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n          // IE8 throws error here and will not see later tests\n\n\n          if (el.querySelectorAll(\":enabled\").length !== 2) {\n            rbuggyQSA.push(\":enabled\", \":disabled\");\n          } // Support: IE9-11+\n          // IE's :disabled selector does not pick up the children of disabled fieldsets\n\n\n          docElem.appendChild(el).disabled = true;\n\n          if (el.querySelectorAll(\":disabled\").length !== 2) {\n            rbuggyQSA.push(\":enabled\", \":disabled\");\n          } // Support: Opera 10 - 11 only\n          // Opera 10-11 does not throw on post-comma invalid pseudos\n\n\n          el.querySelectorAll(\"*,:x\");\n          rbuggyQSA.push(\",.*:\");\n        });\n      }\n\n      if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {\n        assert(function (el) {\n          // Check to see if it's possible to do matchesSelector\n          // on a disconnected node (IE 9)\n          support.disconnectedMatch = matches.call(el, \"*\"); // This should fail with an exception\n          // Gecko does not error, returns false instead\n\n          matches.call(el, \"[s!='']:x\");\n          rbuggyMatches.push(\"!=\", pseudos);\n        });\n      }\n\n      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join(\"|\"));\n      rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join(\"|\"));\n      /* Contains\n      ---------------------------------------------------------------------- */\n\n      hasCompare = rnative.test(docElem.compareDocumentPosition); // Element contains another\n      // Purposefully self-exclusive\n      // As in, an element does not contain itself\n\n      contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {\n        var adown = a.nodeType === 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n        return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n      } : function (a, b) {\n        if (b) {\n          while (b = b.parentNode) {\n            if (b === a) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      };\n      /* Sorting\n      ---------------------------------------------------------------------- */\n      // Document order sorting\n\n      sortOrder = hasCompare ? function (a, b) {\n        // Flag for duplicate removal\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        } // Sort on method existence if only one input has compareDocumentPosition\n\n\n        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\n        if (compare) {\n          return compare;\n        } // Calculate position if both inputs belong to the same document\n        // Support: IE 11+, Edge 17 - 18+\n        // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n        // two documents; shallow comparisons work.\n        // eslint-disable-next-line eqeqeq\n\n\n        compare = (a.ownerDocument || a) == (b.ownerDocument || b) ? a.compareDocumentPosition(b) : // Otherwise we know they are disconnected\n        1; // Disconnected nodes\n\n        if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {\n          // Choose the first element that is related to our preferred document\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n          if (a == document || a.ownerDocument == preferredDoc && contains(preferredDoc, a)) {\n            return -1;\n          } // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n\n\n          if (b == document || b.ownerDocument == preferredDoc && contains(preferredDoc, b)) {\n            return 1;\n          } // Maintain original order\n\n\n          return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;\n        }\n\n        return compare & 4 ? -1 : 1;\n      } : function (a, b) {\n        // Exit early if the nodes are identical\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        }\n\n        var cur,\n            i = 0,\n            aup = a.parentNode,\n            bup = b.parentNode,\n            ap = [a],\n            bp = [b]; // Parentless nodes are either documents or disconnected\n\n        if (!aup || !bup) {\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n\n          /* eslint-disable eqeqeq */\n          return a == document ? -1 : b == document ? 1 :\n          /* eslint-enable eqeqeq */\n          aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0; // If the nodes are siblings, we can do a quick check\n        } else if (aup === bup) {\n          return siblingCheck(a, b);\n        } // Otherwise we need full lists of their ancestors for comparison\n\n\n        cur = a;\n\n        while (cur = cur.parentNode) {\n          ap.unshift(cur);\n        }\n\n        cur = b;\n\n        while (cur = cur.parentNode) {\n          bp.unshift(cur);\n        } // Walk down the tree looking for a discrepancy\n\n\n        while (ap[i] === bp[i]) {\n          i++;\n        }\n\n        return i ? // Do a sibling check if the nodes have a common ancestor\n        siblingCheck(ap[i], bp[i]) : // Otherwise nodes in our document sort first\n        // Support: IE 11+, Edge 17 - 18+\n        // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n        // two documents; shallow comparisons work.\n\n        /* eslint-disable eqeqeq */\n        ap[i] == preferredDoc ? -1 : bp[i] == preferredDoc ? 1 :\n        /* eslint-enable eqeqeq */\n        0;\n      };\n      return document;\n    };\n\n    Sizzle.matches = function (expr, elements) {\n      return Sizzle(expr, null, null, elements);\n    };\n\n    Sizzle.matchesSelector = function (elem, expr) {\n      setDocument(elem);\n\n      if (support.matchesSelector && documentIsHTML && !nonnativeSelectorCache[expr + \" \"] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n        try {\n          var ret = matches.call(elem, expr); // IE 9's matchesSelector returns false on disconnected nodes\n\n          if (ret || support.disconnectedMatch || // As well, disconnected nodes are said to be in a document\n          // fragment in IE 9\n          elem.document && elem.document.nodeType !== 11) {\n            return ret;\n          }\n        } catch (e) {\n          nonnativeSelectorCache(expr, true);\n        }\n      }\n\n      return Sizzle(expr, document, null, [elem]).length > 0;\n    };\n\n    Sizzle.contains = function (context, elem) {\n      // Set document vars if needed\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if ((context.ownerDocument || context) != document) {\n        setDocument(context);\n      }\n\n      return contains(context, elem);\n    };\n\n    Sizzle.attr = function (elem, name) {\n      // Set document vars if needed\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if ((elem.ownerDocument || elem) != document) {\n        setDocument(elem);\n      }\n\n      var fn = Expr.attrHandle[name.toLowerCase()],\n          // Don't get fooled by Object.prototype properties (jQuery #13807)\n      val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n      return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n    };\n\n    Sizzle.escape = function (sel) {\n      return (sel + \"\").replace(rcssescape, fcssescape);\n    };\n\n    Sizzle.error = function (msg) {\n      throw new Error(\"Syntax error, unrecognized expression: \" + msg);\n    };\n    /**\n     * Document sorting and removing duplicates\n     * @param {ArrayLike} results\n     */\n\n\n    Sizzle.uniqueSort = function (results) {\n      var elem,\n          duplicates = [],\n          j = 0,\n          i = 0; // Unless we *know* we can detect duplicates, assume their presence\n\n      hasDuplicate = !support.detectDuplicates;\n      sortInput = !support.sortStable && results.slice(0);\n      results.sort(sortOrder);\n\n      if (hasDuplicate) {\n        while (elem = results[i++]) {\n          if (elem === results[i]) {\n            j = duplicates.push(i);\n          }\n        }\n\n        while (j--) {\n          results.splice(duplicates[j], 1);\n        }\n      } // Clear input after sorting to release objects\n      // See https://github.com/jquery/sizzle/pull/225\n\n\n      sortInput = null;\n      return results;\n    };\n    /**\n     * Utility function for retrieving the text value of an array of DOM nodes\n     * @param {Array|Element} elem\n     */\n\n\n    getText = Sizzle.getText = function (elem) {\n      var node,\n          ret = \"\",\n          i = 0,\n          nodeType = elem.nodeType;\n\n      if (!nodeType) {\n        // If no nodeType, this is expected to be an array\n        while (node = elem[i++]) {\n          // Do not traverse comment nodes\n          ret += getText(node);\n        }\n      } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n        // Use textContent for elements\n        // innerText usage removed for consistency of new lines (jQuery #11153)\n        if (typeof elem.textContent === \"string\") {\n          return elem.textContent;\n        } else {\n          // Traverse its children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            ret += getText(elem);\n          }\n        }\n      } else if (nodeType === 3 || nodeType === 4) {\n        return elem.nodeValue;\n      } // Do not include comment or processing instruction nodes\n\n\n      return ret;\n    };\n\n    Expr = Sizzle.selectors = {\n      // Can be adjusted by the user\n      cacheLength: 50,\n      createPseudo: markFunction,\n      match: matchExpr,\n      attrHandle: {},\n      find: {},\n      relative: {\n        \">\": {\n          dir: \"parentNode\",\n          first: true\n        },\n        \" \": {\n          dir: \"parentNode\"\n        },\n        \"+\": {\n          dir: \"previousSibling\",\n          first: true\n        },\n        \"~\": {\n          dir: \"previousSibling\"\n        }\n      },\n      preFilter: {\n        \"ATTR\": function (match) {\n          match[1] = match[1].replace(runescape, funescape); // Move the given value to match[3] whether quoted or unquoted\n\n          match[3] = (match[3] || match[4] || match[5] || \"\").replace(runescape, funescape);\n\n          if (match[2] === \"~=\") {\n            match[3] = \" \" + match[3] + \" \";\n          }\n\n          return match.slice(0, 4);\n        },\n        \"CHILD\": function (match) {\n          /* matches from matchExpr[\"CHILD\"]\n          \t1 type (only|nth|...)\n          \t2 what (child|of-type)\n          \t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n          \t4 xn-component of xn+y argument ([+-]?\\d*n|)\n          \t5 sign of xn-component\n          \t6 x of xn-component\n          \t7 sign of y-component\n          \t8 y of y-component\n          */\n          match[1] = match[1].toLowerCase();\n\n          if (match[1].slice(0, 3) === \"nth\") {\n            // nth-* requires argument\n            if (!match[3]) {\n              Sizzle.error(match[0]);\n            } // numeric x and y parameters for Expr.filter.CHILD\n            // remember that false/true cast respectively to 0/1\n\n\n            match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === \"even\" || match[3] === \"odd\"));\n            match[5] = +(match[7] + match[8] || match[3] === \"odd\"); // other types prohibit arguments\n          } else if (match[3]) {\n            Sizzle.error(match[0]);\n          }\n\n          return match;\n        },\n        \"PSEUDO\": function (match) {\n          var excess,\n              unquoted = !match[6] && match[2];\n\n          if (matchExpr[\"CHILD\"].test(match[0])) {\n            return null;\n          } // Accept quoted arguments as-is\n\n\n          if (match[3]) {\n            match[2] = match[4] || match[5] || \"\"; // Strip excess characters from unquoted arguments\n          } else if (unquoted && rpseudo.test(unquoted) && ( // Get excess from tokenize (recursively)\n          excess = tokenize(unquoted, true)) && ( // advance to the next closing parenthesis\n          excess = unquoted.indexOf(\")\", unquoted.length - excess) - unquoted.length)) {\n            // excess is a negative index\n            match[0] = match[0].slice(0, excess);\n            match[2] = unquoted.slice(0, excess);\n          } // Return only captures needed by the pseudo filter method (type and argument)\n\n\n          return match.slice(0, 3);\n        }\n      },\n      filter: {\n        \"TAG\": function (nodeNameSelector) {\n          var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n          return nodeNameSelector === \"*\" ? function () {\n            return true;\n          } : function (elem) {\n            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n          };\n        },\n        \"CLASS\": function (className) {\n          var pattern = classCache[className + \" \"];\n          return pattern || (pattern = new RegExp(\"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\")) && classCache(className, function (elem) {\n            return pattern.test(typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\");\n          });\n        },\n        \"ATTR\": function (name, operator, check) {\n          return function (elem) {\n            var result = Sizzle.attr(elem, name);\n\n            if (result == null) {\n              return operator === \"!=\";\n            }\n\n            if (!operator) {\n              return true;\n            }\n\n            result += \"\";\n            /* eslint-disable max-len */\n\n            return operator === \"=\" ? result === check : operator === \"!=\" ? result !== check : operator === \"^=\" ? check && result.indexOf(check) === 0 : operator === \"*=\" ? check && result.indexOf(check) > -1 : operator === \"$=\" ? check && result.slice(-check.length) === check : operator === \"~=\" ? (\" \" + result.replace(rwhitespace, \" \") + \" \").indexOf(check) > -1 : operator === \"|=\" ? result === check || result.slice(0, check.length + 1) === check + \"-\" : false;\n            /* eslint-enable max-len */\n          };\n        },\n        \"CHILD\": function (type, what, _argument, first, last) {\n          var simple = type.slice(0, 3) !== \"nth\",\n              forward = type.slice(-4) !== \"last\",\n              ofType = what === \"of-type\";\n          return first === 1 && last === 0 ? // Shortcut for :nth-*(n)\n          function (elem) {\n            return !!elem.parentNode;\n          } : function (elem, _context, xml) {\n            var cache,\n                uniqueCache,\n                outerCache,\n                node,\n                nodeIndex,\n                start,\n                dir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n                parent = elem.parentNode,\n                name = ofType && elem.nodeName.toLowerCase(),\n                useCache = !xml && !ofType,\n                diff = false;\n\n            if (parent) {\n              // :(first|last|only)-(child|of-type)\n              if (simple) {\n                while (dir) {\n                  node = elem;\n\n                  while (node = node[dir]) {\n                    if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n                      return false;\n                    }\n                  } // Reverse direction for :only-* (if we haven't yet done so)\n\n\n                  start = dir = type === \"only\" && !start && \"nextSibling\";\n                }\n\n                return true;\n              }\n\n              start = [forward ? parent.firstChild : parent.lastChild]; // non-xml :nth-child(...) stores cache data on `parent`\n\n              if (forward && useCache) {\n                // Seek `elem` from a previously-cached index\n                // ...in a gzip-friendly way\n                node = parent;\n                outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                // Defend against cloned attroperties (jQuery gh-1709)\n\n                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                cache = uniqueCache[type] || [];\n                nodeIndex = cache[0] === dirruns && cache[1];\n                diff = nodeIndex && cache[2];\n                node = nodeIndex && parent.childNodes[nodeIndex];\n\n                while (node = ++nodeIndex && node && node[dir] || ( // Fallback to seeking `elem` from the start\n                diff = nodeIndex = 0) || start.pop()) {\n                  // When found, cache indexes on `parent` and break\n                  if (node.nodeType === 1 && ++diff && node === elem) {\n                    uniqueCache[type] = [dirruns, nodeIndex, diff];\n                    break;\n                  }\n                }\n              } else {\n                // Use previously-cached element index if available\n                if (useCache) {\n                  // ...in a gzip-friendly way\n                  node = elem;\n                  outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                  // Defend against cloned attroperties (jQuery gh-1709)\n\n                  uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                  cache = uniqueCache[type] || [];\n                  nodeIndex = cache[0] === dirruns && cache[1];\n                  diff = nodeIndex;\n                } // xml :nth-child(...)\n                // or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\n\n                if (diff === false) {\n                  // Use the same loop as above to seek `elem` from the start\n                  while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                    if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n                      // Cache the index of each encountered element\n                      if (useCache) {\n                        outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                        // Defend against cloned attroperties (jQuery gh-1709)\n\n                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                        uniqueCache[type] = [dirruns, diff];\n                      }\n\n                      if (node === elem) {\n                        break;\n                      }\n                    }\n                  }\n                }\n              } // Incorporate the offset, then check against cycle size\n\n\n              diff -= last;\n              return diff === first || diff % first === 0 && diff / first >= 0;\n            }\n          };\n        },\n        \"PSEUDO\": function (pseudo, argument) {\n          // pseudo-class names are case-insensitive\n          // http://www.w3.org/TR/selectors/#pseudo-classes\n          // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n          // Remember that setFilters inherits from pseudos\n          var args,\n              fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error(\"unsupported pseudo: \" + pseudo); // The user may use createPseudo to indicate that\n          // arguments are needed to create the filter function\n          // just as Sizzle does\n\n          if (fn[expando]) {\n            return fn(argument);\n          } // But maintain support for old signatures\n\n\n          if (fn.length > 1) {\n            args = [pseudo, pseudo, \"\", argument];\n            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {\n              var idx,\n                  matched = fn(seed, argument),\n                  i = matched.length;\n\n              while (i--) {\n                idx = indexOf(seed, matched[i]);\n                seed[idx] = !(matches[idx] = matched[i]);\n              }\n            }) : function (elem) {\n              return fn(elem, 0, args);\n            };\n          }\n\n          return fn;\n        }\n      },\n      pseudos: {\n        // Potentially complex pseudos\n        \"not\": markFunction(function (selector) {\n          // Trim the selector passed to compile\n          // to avoid treating leading and trailing\n          // spaces as combinators\n          var input = [],\n              results = [],\n              matcher = compile(selector.replace(rtrim, \"$1\"));\n          return matcher[expando] ? markFunction(function (seed, matches, _context, xml) {\n            var elem,\n                unmatched = matcher(seed, null, xml, []),\n                i = seed.length; // Match elements unmatched by `matcher`\n\n            while (i--) {\n              if (elem = unmatched[i]) {\n                seed[i] = !(matches[i] = elem);\n              }\n            }\n          }) : function (elem, _context, xml) {\n            input[0] = elem;\n            matcher(input, null, xml, results); // Don't keep the element (issue #299)\n\n            input[0] = null;\n            return !results.pop();\n          };\n        }),\n        \"has\": markFunction(function (selector) {\n          return function (elem) {\n            return Sizzle(selector, elem).length > 0;\n          };\n        }),\n        \"contains\": markFunction(function (text) {\n          text = text.replace(runescape, funescape);\n          return function (elem) {\n            return (elem.textContent || getText(elem)).indexOf(text) > -1;\n          };\n        }),\n        // \"Whether an element is represented by a :lang() selector\n        // is based solely on the element's language value\n        // being equal to the identifier C,\n        // or beginning with the identifier C immediately followed by \"-\".\n        // The matching of C against the element's language value is performed case-insensitively.\n        // The identifier C does not have to be a valid language name.\"\n        // http://www.w3.org/TR/selectors/#lang-pseudo\n        \"lang\": markFunction(function (lang) {\n          // lang value must be a valid identifier\n          if (!ridentifier.test(lang || \"\")) {\n            Sizzle.error(\"unsupported lang: \" + lang);\n          }\n\n          lang = lang.replace(runescape, funescape).toLowerCase();\n          return function (elem) {\n            var elemLang;\n\n            do {\n              if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) {\n                elemLang = elemLang.toLowerCase();\n                return elemLang === lang || elemLang.indexOf(lang + \"-\") === 0;\n              }\n            } while ((elem = elem.parentNode) && elem.nodeType === 1);\n\n            return false;\n          };\n        }),\n        // Miscellaneous\n        \"target\": function (elem) {\n          var hash = window.location && window.location.hash;\n          return hash && hash.slice(1) === elem.id;\n        },\n        \"root\": function (elem) {\n          return elem === docElem;\n        },\n        \"focus\": function (elem) {\n          return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n        },\n        // Boolean properties\n        \"enabled\": createDisabledPseudo(false),\n        \"disabled\": createDisabledPseudo(true),\n        \"checked\": function (elem) {\n          // In CSS3, :checked should return both checked and selected elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          var nodeName = elem.nodeName.toLowerCase();\n          return nodeName === \"input\" && !!elem.checked || nodeName === \"option\" && !!elem.selected;\n        },\n        \"selected\": function (elem) {\n          // Accessing this property makes selected-by-default\n          // options in Safari work properly\n          if (elem.parentNode) {\n            // eslint-disable-next-line no-unused-expressions\n            elem.parentNode.selectedIndex;\n          }\n\n          return elem.selected === true;\n        },\n        // Contents\n        \"empty\": function (elem) {\n          // http://www.w3.org/TR/selectors/#empty-pseudo\n          // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n          //   but not by others (comment: 8; processing instruction: 7; etc.)\n          // nodeType < 6 works because attributes (2) do not appear as children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            if (elem.nodeType < 6) {\n              return false;\n            }\n          }\n\n          return true;\n        },\n        \"parent\": function (elem) {\n          return !Expr.pseudos[\"empty\"](elem);\n        },\n        // Element/input types\n        \"header\": function (elem) {\n          return rheader.test(elem.nodeName);\n        },\n        \"input\": function (elem) {\n          return rinputs.test(elem.nodeName);\n        },\n        \"button\": function (elem) {\n          var name = elem.nodeName.toLowerCase();\n          return name === \"input\" && elem.type === \"button\" || name === \"button\";\n        },\n        \"text\": function (elem) {\n          var attr;\n          return elem.nodeName.toLowerCase() === \"input\" && elem.type === \"text\" && ( // Support: IE<8\n          // New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n          (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\");\n        },\n        // Position-in-collection\n        \"first\": createPositionalPseudo(function () {\n          return [0];\n        }),\n        \"last\": createPositionalPseudo(function (_matchIndexes, length) {\n          return [length - 1];\n        }),\n        \"eq\": createPositionalPseudo(function (_matchIndexes, length, argument) {\n          return [argument < 0 ? argument + length : argument];\n        }),\n        \"even\": createPositionalPseudo(function (matchIndexes, length) {\n          var i = 0;\n\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"odd\": createPositionalPseudo(function (matchIndexes, length) {\n          var i = 1;\n\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"lt\": createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument > length ? length : argument;\n\n          for (; --i >= 0;) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"gt\": createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument;\n\n          for (; ++i < length;) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        })\n      }\n    };\n    Expr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"]; // Add button/input type pseudos\n\n    for (i in {\n      radio: true,\n      checkbox: true,\n      file: true,\n      password: true,\n      image: true\n    }) {\n      Expr.pseudos[i] = createInputPseudo(i);\n    }\n\n    for (i in {\n      submit: true,\n      reset: true\n    }) {\n      Expr.pseudos[i] = createButtonPseudo(i);\n    } // Easy API for creating new setFilters\n\n\n    function setFilters() {}\n\n    setFilters.prototype = Expr.filters = Expr.pseudos;\n    Expr.setFilters = new setFilters();\n\n    tokenize = Sizzle.tokenize = function (selector, parseOnly) {\n      var matched,\n          match,\n          tokens,\n          type,\n          soFar,\n          groups,\n          preFilters,\n          cached = tokenCache[selector + \" \"];\n\n      if (cached) {\n        return parseOnly ? 0 : cached.slice(0);\n      }\n\n      soFar = selector;\n      groups = [];\n      preFilters = Expr.preFilter;\n\n      while (soFar) {\n        // Comma and first run\n        if (!matched || (match = rcomma.exec(soFar))) {\n          if (match) {\n            // Don't consume trailing commas as valid\n            soFar = soFar.slice(match[0].length) || soFar;\n          }\n\n          groups.push(tokens = []);\n        }\n\n        matched = false; // Combinators\n\n        if (match = rcombinators.exec(soFar)) {\n          matched = match.shift();\n          tokens.push({\n            value: matched,\n            // Cast descendant combinators to space\n            type: match[0].replace(rtrim, \" \")\n          });\n          soFar = soFar.slice(matched.length);\n        } // Filters\n\n\n        for (type in Expr.filter) {\n          if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n            matched = match.shift();\n            tokens.push({\n              value: matched,\n              type: type,\n              matches: match\n            });\n            soFar = soFar.slice(matched.length);\n          }\n        }\n\n        if (!matched) {\n          break;\n        }\n      } // Return the length of the invalid excess\n      // if we're just parsing\n      // Otherwise, throw an error or return tokens\n\n\n      return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : // Cache the tokens\n      tokenCache(selector, groups).slice(0);\n    };\n\n    function toSelector(tokens) {\n      var i = 0,\n          len = tokens.length,\n          selector = \"\";\n\n      for (; i < len; i++) {\n        selector += tokens[i].value;\n      }\n\n      return selector;\n    }\n\n    function addCombinator(matcher, combinator, base) {\n      var dir = combinator.dir,\n          skip = combinator.next,\n          key = skip || dir,\n          checkNonElements = base && key === \"parentNode\",\n          doneName = done++;\n      return combinator.first ? // Check against closest ancestor/preceding element\n      function (elem, context, xml) {\n        while (elem = elem[dir]) {\n          if (elem.nodeType === 1 || checkNonElements) {\n            return matcher(elem, context, xml);\n          }\n        }\n\n        return false;\n      } : // Check against all ancestor/preceding elements\n      function (elem, context, xml) {\n        var oldCache,\n            uniqueCache,\n            outerCache,\n            newCache = [dirruns, doneName]; // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\n        if (xml) {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              if (matcher(elem, context, xml)) {\n                return true;\n              }\n            }\n          }\n        } else {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              outerCache = elem[expando] || (elem[expando] = {}); // Support: IE <9 only\n              // Defend against cloned attroperties (jQuery gh-1709)\n\n              uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});\n\n              if (skip && skip === elem.nodeName.toLowerCase()) {\n                elem = elem[dir] || elem;\n              } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n                // Assign to newCache so results back-propagate to previous elements\n                return newCache[2] = oldCache[2];\n              } else {\n                // Reuse newcache so results back-propagate to previous elements\n                uniqueCache[key] = newCache; // A match means we're done; a fail means we have to keep checking\n\n                if (newCache[2] = matcher(elem, context, xml)) {\n                  return true;\n                }\n              }\n            }\n          }\n        }\n\n        return false;\n      };\n    }\n\n    function elementMatcher(matchers) {\n      return matchers.length > 1 ? function (elem, context, xml) {\n        var i = matchers.length;\n\n        while (i--) {\n          if (!matchers[i](elem, context, xml)) {\n            return false;\n          }\n        }\n\n        return true;\n      } : matchers[0];\n    }\n\n    function multipleContexts(selector, contexts, results) {\n      var i = 0,\n          len = contexts.length;\n\n      for (; i < len; i++) {\n        Sizzle(selector, contexts[i], results);\n      }\n\n      return results;\n    }\n\n    function condense(unmatched, map, filter, context, xml) {\n      var elem,\n          newUnmatched = [],\n          i = 0,\n          len = unmatched.length,\n          mapped = map != null;\n\n      for (; i < len; i++) {\n        if (elem = unmatched[i]) {\n          if (!filter || filter(elem, context, xml)) {\n            newUnmatched.push(elem);\n\n            if (mapped) {\n              map.push(i);\n            }\n          }\n        }\n      }\n\n      return newUnmatched;\n    }\n\n    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n      if (postFilter && !postFilter[expando]) {\n        postFilter = setMatcher(postFilter);\n      }\n\n      if (postFinder && !postFinder[expando]) {\n        postFinder = setMatcher(postFinder, postSelector);\n      }\n\n      return markFunction(function (seed, results, context, xml) {\n        var temp,\n            i,\n            elem,\n            preMap = [],\n            postMap = [],\n            preexisting = results.length,\n            // Get initial elements from seed or context\n        elems = seed || multipleContexts(selector || \"*\", context.nodeType ? [context] : context, []),\n            // Prefilter to get matcher input, preserving a map for seed-results synchronization\n        matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,\n            matcherOut = matcher ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n        postFinder || (seed ? preFilter : preexisting || postFilter) ? // ...intermediate processing is necessary\n        [] : // ...otherwise use results directly\n        results : matcherIn; // Find primary matches\n\n        if (matcher) {\n          matcher(matcherIn, matcherOut, context, xml);\n        } // Apply postFilter\n\n\n        if (postFilter) {\n          temp = condense(matcherOut, postMap);\n          postFilter(temp, [], context, xml); // Un-match failing elements by moving them back to matcherIn\n\n          i = temp.length;\n\n          while (i--) {\n            if (elem = temp[i]) {\n              matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n            }\n          }\n        }\n\n        if (seed) {\n          if (postFinder || preFilter) {\n            if (postFinder) {\n              // Get the final matcherOut by condensing this intermediate into postFinder contexts\n              temp = [];\n              i = matcherOut.length;\n\n              while (i--) {\n                if (elem = matcherOut[i]) {\n                  // Restore matcherIn since elem is not yet a final match\n                  temp.push(matcherIn[i] = elem);\n                }\n              }\n\n              postFinder(null, matcherOut = [], temp, xml);\n            } // Move matched elements from seed to results to keep them synchronized\n\n\n            i = matcherOut.length;\n\n            while (i--) {\n              if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {\n                seed[temp] = !(results[temp] = elem);\n              }\n            }\n          } // Add elements to results, through postFinder if defined\n\n        } else {\n          matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n\n          if (postFinder) {\n            postFinder(null, results, matcherOut, xml);\n          } else {\n            push.apply(results, matcherOut);\n          }\n        }\n      });\n    }\n\n    function matcherFromTokens(tokens) {\n      var checkContext,\n          matcher,\n          j,\n          len = tokens.length,\n          leadingRelative = Expr.relative[tokens[0].type],\n          implicitRelative = leadingRelative || Expr.relative[\" \"],\n          i = leadingRelative ? 1 : 0,\n          // The foundational matcher ensures that elements are reachable from top-level context(s)\n      matchContext = addCombinator(function (elem) {\n        return elem === checkContext;\n      }, implicitRelative, true),\n          matchAnyContext = addCombinator(function (elem) {\n        return indexOf(checkContext, elem) > -1;\n      }, implicitRelative, true),\n          matchers = [function (elem, context, xml) {\n        var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml)); // Avoid hanging onto element (issue #299)\n\n        checkContext = null;\n        return ret;\n      }];\n\n      for (; i < len; i++) {\n        if (matcher = Expr.relative[tokens[i].type]) {\n          matchers = [addCombinator(elementMatcher(matchers), matcher)];\n        } else {\n          matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches); // Return special upon seeing a positional matcher\n\n          if (matcher[expando]) {\n            // Find the next relative operator (if any) for proper handling\n            j = ++i;\n\n            for (; j < len; j++) {\n              if (Expr.relative[tokens[j].type]) {\n                break;\n              }\n            }\n\n            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector( // If the preceding token was a descendant combinator, insert an implicit any-element `*`\n            tokens.slice(0, i - 1).concat({\n              value: tokens[i - 2].type === \" \" ? \"*\" : \"\"\n            })).replace(rtrim, \"$1\"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));\n          }\n\n          matchers.push(matcher);\n        }\n      }\n\n      return elementMatcher(matchers);\n    }\n\n    function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n      var bySet = setMatchers.length > 0,\n          byElement = elementMatchers.length > 0,\n          superMatcher = function (seed, context, xml, results, outermost) {\n        var elem,\n            j,\n            matcher,\n            matchedCount = 0,\n            i = \"0\",\n            unmatched = seed && [],\n            setMatched = [],\n            contextBackup = outermostContext,\n            // We must always have either seed elements or outermost context\n        elems = seed || byElement && Expr.find[\"TAG\"](\"*\", outermost),\n            // Use integer dirruns iff this is the outermost matcher\n        dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1,\n            len = elems.length;\n\n        if (outermost) {\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n          outermostContext = context == document || context || outermost;\n        } // Add elements passing elementMatchers directly to results\n        // Support: IE<9, Safari\n        // Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\n\n        for (; i !== len && (elem = elems[i]) != null; i++) {\n          if (byElement && elem) {\n            j = 0; // Support: IE 11+, Edge 17 - 18+\n            // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n            // two documents; shallow comparisons work.\n            // eslint-disable-next-line eqeqeq\n\n            if (!context && elem.ownerDocument != document) {\n              setDocument(elem);\n              xml = !documentIsHTML;\n            }\n\n            while (matcher = elementMatchers[j++]) {\n              if (matcher(elem, context || document, xml)) {\n                results.push(elem);\n                break;\n              }\n            }\n\n            if (outermost) {\n              dirruns = dirrunsUnique;\n            }\n          } // Track unmatched elements for set filters\n\n\n          if (bySet) {\n            // They will have gone through all possible matchers\n            if (elem = !matcher && elem) {\n              matchedCount--;\n            } // Lengthen the array for every element, matched or not\n\n\n            if (seed) {\n              unmatched.push(elem);\n            }\n          }\n        } // `i` is now the count of elements visited above, and adding it to `matchedCount`\n        // makes the latter nonnegative.\n\n\n        matchedCount += i; // Apply set filters to unmatched elements\n        // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n        // equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n        // no element matchers and no seed.\n        // Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n        // case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n        // numerically zero.\n\n        if (bySet && i !== matchedCount) {\n          j = 0;\n\n          while (matcher = setMatchers[j++]) {\n            matcher(unmatched, setMatched, context, xml);\n          }\n\n          if (seed) {\n            // Reintegrate element matches to eliminate the need for sorting\n            if (matchedCount > 0) {\n              while (i--) {\n                if (!(unmatched[i] || setMatched[i])) {\n                  setMatched[i] = pop.call(results);\n                }\n              }\n            } // Discard index placeholder values to get only actual matches\n\n\n            setMatched = condense(setMatched);\n          } // Add matches to results\n\n\n          push.apply(results, setMatched); // Seedless set matches succeeding multiple successful matchers stipulate sorting\n\n          if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n            Sizzle.uniqueSort(results);\n          }\n        } // Override manipulation of globals by nested matchers\n\n\n        if (outermost) {\n          dirruns = dirrunsUnique;\n          outermostContext = contextBackup;\n        }\n\n        return unmatched;\n      };\n\n      return bySet ? markFunction(superMatcher) : superMatcher;\n    }\n\n    compile = Sizzle.compile = function (selector, match\n    /* Internal Use Only */\n    ) {\n      var i,\n          setMatchers = [],\n          elementMatchers = [],\n          cached = compilerCache[selector + \" \"];\n\n      if (!cached) {\n        // Generate a function of recursive functions that can be used to check each element\n        if (!match) {\n          match = tokenize(selector);\n        }\n\n        i = match.length;\n\n        while (i--) {\n          cached = matcherFromTokens(match[i]);\n\n          if (cached[expando]) {\n            setMatchers.push(cached);\n          } else {\n            elementMatchers.push(cached);\n          }\n        } // Cache the compiled function\n\n\n        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers)); // Save selector and tokenization\n\n        cached.selector = selector;\n      }\n\n      return cached;\n    };\n    /**\n     * A low-level selection function that works with Sizzle's compiled\n     *  selector functions\n     * @param {String|Function} selector A selector or a pre-compiled\n     *  selector function built with Sizzle.compile\n     * @param {Element} context\n     * @param {Array} [results]\n     * @param {Array} [seed] A set of elements to match against\n     */\n\n\n    select = Sizzle.select = function (selector, context, results, seed) {\n      var i,\n          tokens,\n          token,\n          type,\n          find,\n          compiled = typeof selector === \"function\" && selector,\n          match = !seed && tokenize(selector = compiled.selector || selector);\n      results = results || []; // Try to minimize operations if there is only one selector in the list and no seed\n      // (the latter of which guarantees us context)\n\n      if (match.length === 1) {\n        // Reduce context if the leading compound selector is an ID\n        tokens = match[0] = match[0].slice(0);\n\n        if (tokens.length > 2 && (token = tokens[0]).type === \"ID\" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n          context = (Expr.find[\"ID\"](token.matches[0].replace(runescape, funescape), context) || [])[0];\n\n          if (!context) {\n            return results; // Precompiled matchers will still verify ancestry, so step up a level\n          } else if (compiled) {\n            context = context.parentNode;\n          }\n\n          selector = selector.slice(tokens.shift().value.length);\n        } // Fetch a seed set for right-to-left matching\n\n\n        i = matchExpr[\"needsContext\"].test(selector) ? 0 : tokens.length;\n\n        while (i--) {\n          token = tokens[i]; // Abort if we hit a combinator\n\n          if (Expr.relative[type = token.type]) {\n            break;\n          }\n\n          if (find = Expr.find[type]) {\n            // Search, expanding context for leading sibling combinators\n            if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {\n              // If seed is empty or no tokens remain, we can return early\n              tokens.splice(i, 1);\n              selector = seed.length && toSelector(tokens);\n\n              if (!selector) {\n                push.apply(results, seed);\n                return results;\n              }\n\n              break;\n            }\n          }\n        }\n      } // Compile and execute a filtering function if one is not provided\n      // Provide `match` to avoid retokenization if we modified the selector above\n\n\n      (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);\n      return results;\n    }; // One-time assignments\n    // Sort stability\n\n\n    support.sortStable = expando.split(\"\").sort(sortOrder).join(\"\") === expando; // Support: Chrome 14-35+\n    // Always assume duplicates if they aren't passed to the comparison function\n\n    support.detectDuplicates = !!hasDuplicate; // Initialize against the default document\n\n    setDocument(); // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n    // Detached nodes confoundingly follow *each other*\n\n    support.sortDetached = assert(function (el) {\n      // Should return 1, but returns 4 (following)\n      return el.compareDocumentPosition(document.createElement(\"fieldset\")) & 1;\n    }); // Support: IE<8\n    // Prevent attribute/property \"interpolation\"\n    // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n\n    if (!assert(function (el) {\n      el.innerHTML = \"<a href='#'></a>\";\n      return el.firstChild.getAttribute(\"href\") === \"#\";\n    })) {\n      addHandle(\"type|href|height|width\", function (elem, name, isXML) {\n        if (!isXML) {\n          return elem.getAttribute(name, name.toLowerCase() === \"type\" ? 1 : 2);\n        }\n      });\n    } // Support: IE<9\n    // Use defaultValue in place of getAttribute(\"value\")\n\n\n    if (!support.attributes || !assert(function (el) {\n      el.innerHTML = \"<input/>\";\n      el.firstChild.setAttribute(\"value\", \"\");\n      return el.firstChild.getAttribute(\"value\") === \"\";\n    })) {\n      addHandle(\"value\", function (elem, _name, isXML) {\n        if (!isXML && elem.nodeName.toLowerCase() === \"input\") {\n          return elem.defaultValue;\n        }\n      });\n    } // Support: IE<9\n    // Use getAttributeNode to fetch booleans when getAttribute lies\n\n\n    if (!assert(function (el) {\n      return el.getAttribute(\"disabled\") == null;\n    })) {\n      addHandle(booleans, function (elem, name, isXML) {\n        var val;\n\n        if (!isXML) {\n          return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n        }\n      });\n    }\n\n    return Sizzle;\n  }(window);\n\n  jQuery.find = Sizzle;\n  jQuery.expr = Sizzle.selectors; // Deprecated\n\n  jQuery.expr[\":\"] = jQuery.expr.pseudos;\n  jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\n  jQuery.text = Sizzle.getText;\n  jQuery.isXMLDoc = Sizzle.isXML;\n  jQuery.contains = Sizzle.contains;\n  jQuery.escapeSelector = Sizzle.escape;\n\n  var dir = function (elem, dir, until) {\n    var matched = [],\n        truncate = until !== undefined;\n\n    while ((elem = elem[dir]) && elem.nodeType !== 9) {\n      if (elem.nodeType === 1) {\n        if (truncate && jQuery(elem).is(until)) {\n          break;\n        }\n\n        matched.push(elem);\n      }\n    }\n\n    return matched;\n  };\n\n  var siblings = function (n, elem) {\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== elem) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  };\n\n  var rneedsContext = jQuery.expr.match.needsContext;\n\n  function nodeName(elem, name) {\n    return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n  }\n\n  ;\n  var rsingleTag = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i; // Implement the identical functionality for filter and not\n\n  function winnow(elements, qualifier, not) {\n    if (isFunction(qualifier)) {\n      return jQuery.grep(elements, function (elem, i) {\n        return !!qualifier.call(elem, i, elem) !== not;\n      });\n    } // Single element\n\n\n    if (qualifier.nodeType) {\n      return jQuery.grep(elements, function (elem) {\n        return elem === qualifier !== not;\n      });\n    } // Arraylike of elements (jQuery, arguments, Array)\n\n\n    if (typeof qualifier !== \"string\") {\n      return jQuery.grep(elements, function (elem) {\n        return indexOf.call(qualifier, elem) > -1 !== not;\n      });\n    } // Filtered directly for both simple and complex selectors\n\n\n    return jQuery.filter(qualifier, elements, not);\n  }\n\n  jQuery.filter = function (expr, elems, not) {\n    var elem = elems[0];\n\n    if (not) {\n      expr = \":not(\" + expr + \")\";\n    }\n\n    if (elems.length === 1 && elem.nodeType === 1) {\n      return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];\n    }\n\n    return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {\n      return elem.nodeType === 1;\n    }));\n  };\n\n  jQuery.fn.extend({\n    find: function (selector) {\n      var i,\n          ret,\n          len = this.length,\n          self = this;\n\n      if (typeof selector !== \"string\") {\n        return this.pushStack(jQuery(selector).filter(function () {\n          for (i = 0; i < len; i++) {\n            if (jQuery.contains(self[i], this)) {\n              return true;\n            }\n          }\n        }));\n      }\n\n      ret = this.pushStack([]);\n\n      for (i = 0; i < len; i++) {\n        jQuery.find(selector, self[i], ret);\n      }\n\n      return len > 1 ? jQuery.uniqueSort(ret) : ret;\n    },\n    filter: function (selector) {\n      return this.pushStack(winnow(this, selector || [], false));\n    },\n    not: function (selector) {\n      return this.pushStack(winnow(this, selector || [], true));\n    },\n    is: function (selector) {\n      return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set\n      // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n      typeof selector === \"string\" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n    }\n  }); // Initialize a jQuery object\n  // A central reference to the root jQuery(document)\n\n  var rootjQuery,\n      // A simple way to check for HTML strings\n  // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n  // Strict HTML recognition (#11290: must start with <)\n  // Shortcut simple #id case for speed\n  rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n      init = jQuery.fn.init = function (selector, context, root) {\n    var match, elem; // HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\n    if (!selector) {\n      return this;\n    } // Method init() accepts an alternate rootjQuery\n    // so migrate can support jQuery.sub (gh-2101)\n\n\n    root = root || rootjQuery; // Handle HTML strings\n\n    if (typeof selector === \"string\") {\n      if (selector[0] === \"<\" && selector[selector.length - 1] === \">\" && selector.length >= 3) {\n        // Assume that strings that start and end with <> are HTML and skip the regex check\n        match = [null, selector, null];\n      } else {\n        match = rquickExpr.exec(selector);\n      } // Match html or make sure no context is specified for #id\n\n\n      if (match && (match[1] || !context)) {\n        // HANDLE: $(html) -> $(array)\n        if (match[1]) {\n          context = context instanceof jQuery ? context[0] : context; // Option to run scripts is true for back-compat\n          // Intentionally let the error be thrown if parseHTML is not present\n\n          jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true)); // HANDLE: $(html, props)\n\n          if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n            for (match in context) {\n              // Properties of context are called as methods if possible\n              if (isFunction(this[match])) {\n                this[match](context[match]); // ...and otherwise set as attributes\n              } else {\n                this.attr(match, context[match]);\n              }\n            }\n          }\n\n          return this; // HANDLE: $(#id)\n        } else {\n          elem = document.getElementById(match[2]);\n\n          if (elem) {\n            // Inject the element directly into the jQuery object\n            this[0] = elem;\n            this.length = 1;\n          }\n\n          return this;\n        } // HANDLE: $(expr, $(...))\n\n      } else if (!context || context.jquery) {\n        return (context || root).find(selector); // HANDLE: $(expr, context)\n        // (which is just equivalent to: $(context).find(expr)\n      } else {\n        return this.constructor(context).find(selector);\n      } // HANDLE: $(DOMElement)\n\n    } else if (selector.nodeType) {\n      this[0] = selector;\n      this.length = 1;\n      return this; // HANDLE: $(function)\n      // Shortcut for document ready\n    } else if (isFunction(selector)) {\n      return root.ready !== undefined ? root.ready(selector) : // Execute immediately if ready is not present\n      selector(jQuery);\n    }\n\n    return jQuery.makeArray(selector, this);\n  }; // Give the init function the jQuery prototype for later instantiation\n\n\n  init.prototype = jQuery.fn; // Initialize central reference\n\n  rootjQuery = jQuery(document);\n  var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n      // Methods guaranteed to produce a unique set when starting from a unique set\n  guaranteedUnique = {\n    children: true,\n    contents: true,\n    next: true,\n    prev: true\n  };\n  jQuery.fn.extend({\n    has: function (target) {\n      var targets = jQuery(target, this),\n          l = targets.length;\n      return this.filter(function () {\n        var i = 0;\n\n        for (; i < l; i++) {\n          if (jQuery.contains(this, targets[i])) {\n            return true;\n          }\n        }\n      });\n    },\n    closest: function (selectors, context) {\n      var cur,\n          i = 0,\n          l = this.length,\n          matched = [],\n          targets = typeof selectors !== \"string\" && jQuery(selectors); // Positional selectors never match, since there's no _selection_ context\n\n      if (!rneedsContext.test(selectors)) {\n        for (; i < l; i++) {\n          for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n            // Always skip document fragments\n            if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : // Don't pass non-elements to Sizzle\n            cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n              matched.push(cur);\n              break;\n            }\n          }\n        }\n      }\n\n      return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);\n    },\n    // Determine the position of an element within the set\n    index: function (elem) {\n      // No argument, return index in parent\n      if (!elem) {\n        return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n      } // Index in selector\n\n\n      if (typeof elem === \"string\") {\n        return indexOf.call(jQuery(elem), this[0]);\n      } // Locate the position of the desired element\n\n\n      return indexOf.call(this, // If it receives a jQuery object, the first element is used\n      elem.jquery ? elem[0] : elem);\n    },\n    add: function (selector, context) {\n      return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));\n    },\n    addBack: function (selector) {\n      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n    }\n  });\n\n  function sibling(cur, dir) {\n    while ((cur = cur[dir]) && cur.nodeType !== 1) {}\n\n    return cur;\n  }\n\n  jQuery.each({\n    parent: function (elem) {\n      var parent = elem.parentNode;\n      return parent && parent.nodeType !== 11 ? parent : null;\n    },\n    parents: function (elem) {\n      return dir(elem, \"parentNode\");\n    },\n    parentsUntil: function (elem, _i, until) {\n      return dir(elem, \"parentNode\", until);\n    },\n    next: function (elem) {\n      return sibling(elem, \"nextSibling\");\n    },\n    prev: function (elem) {\n      return sibling(elem, \"previousSibling\");\n    },\n    nextAll: function (elem) {\n      return dir(elem, \"nextSibling\");\n    },\n    prevAll: function (elem) {\n      return dir(elem, \"previousSibling\");\n    },\n    nextUntil: function (elem, _i, until) {\n      return dir(elem, \"nextSibling\", until);\n    },\n    prevUntil: function (elem, _i, until) {\n      return dir(elem, \"previousSibling\", until);\n    },\n    siblings: function (elem) {\n      return siblings((elem.parentNode || {}).firstChild, elem);\n    },\n    children: function (elem) {\n      return siblings(elem.firstChild);\n    },\n    contents: function (elem) {\n      if (elem.contentDocument != null && // Support: IE 11+\n      // <object> elements with no `data` attribute has an object\n      // `contentDocument` with a `null` prototype.\n      getProto(elem.contentDocument)) {\n        return elem.contentDocument;\n      } // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n      // Treat the template element as a regular one in browsers that\n      // don't support it.\n\n\n      if (nodeName(elem, \"template\")) {\n        elem = elem.content || elem;\n      }\n\n      return jQuery.merge([], elem.childNodes);\n    }\n  }, function (name, fn) {\n    jQuery.fn[name] = function (until, selector) {\n      var matched = jQuery.map(this, fn, until);\n\n      if (name.slice(-5) !== \"Until\") {\n        selector = until;\n      }\n\n      if (selector && typeof selector === \"string\") {\n        matched = jQuery.filter(selector, matched);\n      }\n\n      if (this.length > 1) {\n        // Remove duplicates\n        if (!guaranteedUnique[name]) {\n          jQuery.uniqueSort(matched);\n        } // Reverse order for parents* and prev-derivatives\n\n\n        if (rparentsprev.test(name)) {\n          matched.reverse();\n        }\n      }\n\n      return this.pushStack(matched);\n    };\n  });\n  var rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g; // Convert String-formatted options into Object-formatted ones\n\n  function createOptions(options) {\n    var object = {};\n    jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {\n      object[flag] = true;\n    });\n    return object;\n  }\n  /*\n   * Create a callback list using the following parameters:\n   *\n   *\toptions: an optional list of space-separated options that will change how\n   *\t\t\tthe callback list behaves or a more traditional option object\n   *\n   * By default a callback list will act like an event callback list and can be\n   * \"fired\" multiple times.\n   *\n   * Possible options:\n   *\n   *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n   *\n   *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n   *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n   *\t\t\t\t\tvalues (like a Deferred)\n   *\n   *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n   *\n   *\tstopOnFalse:\tinterrupt callings when a callback returns false\n   *\n   */\n\n\n  jQuery.Callbacks = function (options) {\n    // Convert options from String-formatted to Object-formatted if needed\n    // (we check in cache first)\n    options = typeof options === \"string\" ? createOptions(options) : jQuery.extend({}, options);\n\n    var // Flag to know if list is currently firing\n    firing,\n        // Last fire value for non-forgettable lists\n    memory,\n        // Flag to know if list was already fired\n    fired,\n        // Flag to prevent firing\n    locked,\n        // Actual callback list\n    list = [],\n        // Queue of execution data for repeatable lists\n    queue = [],\n        // Index of currently firing callback (modified by add/remove as needed)\n    firingIndex = -1,\n        // Fire callbacks\n    fire = function () {\n      // Enforce single-firing\n      locked = locked || options.once; // Execute callbacks for all pending executions,\n      // respecting firingIndex overrides and runtime changes\n\n      fired = firing = true;\n\n      for (; queue.length; firingIndex = -1) {\n        memory = queue.shift();\n\n        while (++firingIndex < list.length) {\n          // Run callback and check for early termination\n          if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {\n            // Jump to end and forget the data so .add doesn't re-fire\n            firingIndex = list.length;\n            memory = false;\n          }\n        }\n      } // Forget the data if we're done with it\n\n\n      if (!options.memory) {\n        memory = false;\n      }\n\n      firing = false; // Clean up if we're done firing for good\n\n      if (locked) {\n        // Keep an empty list if we have data for future add calls\n        if (memory) {\n          list = []; // Otherwise, this object is spent\n        } else {\n          list = \"\";\n        }\n      }\n    },\n        // Actual Callbacks object\n    self = {\n      // Add a callback or a collection of callbacks to the list\n      add: function () {\n        if (list) {\n          // If we have memory from a past run, we should fire after adding\n          if (memory && !firing) {\n            firingIndex = list.length - 1;\n            queue.push(memory);\n          }\n\n          (function add(args) {\n            jQuery.each(args, function (_, arg) {\n              if (isFunction(arg)) {\n                if (!options.unique || !self.has(arg)) {\n                  list.push(arg);\n                }\n              } else if (arg && arg.length && toType(arg) !== \"string\") {\n                // Inspect recursively\n                add(arg);\n              }\n            });\n          })(arguments);\n\n          if (memory && !firing) {\n            fire();\n          }\n        }\n\n        return this;\n      },\n      // Remove a callback from the list\n      remove: function () {\n        jQuery.each(arguments, function (_, arg) {\n          var index;\n\n          while ((index = jQuery.inArray(arg, list, index)) > -1) {\n            list.splice(index, 1); // Handle firing indexes\n\n            if (index <= firingIndex) {\n              firingIndex--;\n            }\n          }\n        });\n        return this;\n      },\n      // Check if a given callback is in the list.\n      // If no argument is given, return whether or not list has callbacks attached.\n      has: function (fn) {\n        return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;\n      },\n      // Remove all callbacks from the list\n      empty: function () {\n        if (list) {\n          list = [];\n        }\n\n        return this;\n      },\n      // Disable .fire and .add\n      // Abort any current/pending executions\n      // Clear all callbacks and values\n      disable: function () {\n        locked = queue = [];\n        list = memory = \"\";\n        return this;\n      },\n      disabled: function () {\n        return !list;\n      },\n      // Disable .fire\n      // Also disable .add unless we have memory (since it would have no effect)\n      // Abort any pending executions\n      lock: function () {\n        locked = queue = [];\n\n        if (!memory && !firing) {\n          list = memory = \"\";\n        }\n\n        return this;\n      },\n      locked: function () {\n        return !!locked;\n      },\n      // Call all callbacks with the given context and arguments\n      fireWith: function (context, args) {\n        if (!locked) {\n          args = args || [];\n          args = [context, args.slice ? args.slice() : args];\n          queue.push(args);\n\n          if (!firing) {\n            fire();\n          }\n        }\n\n        return this;\n      },\n      // Call all the callbacks with the given arguments\n      fire: function () {\n        self.fireWith(this, arguments);\n        return this;\n      },\n      // To know if the callbacks have already been called at least once\n      fired: function () {\n        return !!fired;\n      }\n    };\n\n    return self;\n  };\n\n  function Identity(v) {\n    return v;\n  }\n\n  function Thrower(ex) {\n    throw ex;\n  }\n\n  function adoptValue(value, resolve, reject, noValue) {\n    var method;\n\n    try {\n      // Check for promise aspect first to privilege synchronous behavior\n      if (value && isFunction(method = value.promise)) {\n        method.call(value).done(resolve).fail(reject); // Other thenables\n      } else if (value && isFunction(method = value.then)) {\n        method.call(value, resolve, reject); // Other non-thenables\n      } else {\n        // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n        // * false: [ value ].slice( 0 ) => resolve( value )\n        // * true: [ value ].slice( 1 ) => resolve()\n        resolve.apply(undefined, [value].slice(noValue));\n      } // For Promises/A+, convert exceptions into rejections\n      // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n      // Deferred#then to conditionally suppress rejection.\n\n    } catch (value) {\n      // Support: Android 4.0 only\n      // Strict mode functions invoked without .call/.apply get global-object context\n      reject.apply(undefined, [value]);\n    }\n  }\n\n  jQuery.extend({\n    Deferred: function (func) {\n      var tuples = [// action, add listener, callbacks,\n      // ... .then handlers, argument index, [final state]\n      [\"notify\", \"progress\", jQuery.Callbacks(\"memory\"), jQuery.Callbacks(\"memory\"), 2], [\"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 0, \"resolved\"], [\"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 1, \"rejected\"]],\n          state = \"pending\",\n          promise = {\n        state: function () {\n          return state;\n        },\n        always: function () {\n          deferred.done(arguments).fail(arguments);\n          return this;\n        },\n        \"catch\": function (fn) {\n          return promise.then(null, fn);\n        },\n        // Keep pipe for back-compat\n        pipe: function ()\n        /* fnDone, fnFail, fnProgress */\n        {\n          var fns = arguments;\n          return jQuery.Deferred(function (newDefer) {\n            jQuery.each(tuples, function (_i, tuple) {\n              // Map tuples (progress, done, fail) to arguments (done, fail, progress)\n              var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]]; // deferred.progress(function() { bind to newDefer or newDefer.notify })\n              // deferred.done(function() { bind to newDefer or newDefer.resolve })\n              // deferred.fail(function() { bind to newDefer or newDefer.reject })\n\n              deferred[tuple[1]](function () {\n                var returned = fn && fn.apply(this, arguments);\n\n                if (returned && isFunction(returned.promise)) {\n                  returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);\n                } else {\n                  newDefer[tuple[0] + \"With\"](this, fn ? [returned] : arguments);\n                }\n              });\n            });\n            fns = null;\n          }).promise();\n        },\n        then: function (onFulfilled, onRejected, onProgress) {\n          var maxDepth = 0;\n\n          function resolve(depth, deferred, handler, special) {\n            return function () {\n              var that = this,\n                  args = arguments,\n                  mightThrow = function () {\n                var returned, then; // Support: Promises/A+ section 2.3.3.3.3\n                // https://promisesaplus.com/#point-59\n                // Ignore double-resolution attempts\n\n                if (depth < maxDepth) {\n                  return;\n                }\n\n                returned = handler.apply(that, args); // Support: Promises/A+ section 2.3.1\n                // https://promisesaplus.com/#point-48\n\n                if (returned === deferred.promise()) {\n                  throw new TypeError(\"Thenable self-resolution\");\n                } // Support: Promises/A+ sections 2.3.3.1, 3.5\n                // https://promisesaplus.com/#point-54\n                // https://promisesaplus.com/#point-75\n                // Retrieve `then` only once\n\n\n                then = returned && ( // Support: Promises/A+ section 2.3.4\n                // https://promisesaplus.com/#point-64\n                // Only check objects and functions for thenability\n                typeof returned === \"object\" || typeof returned === \"function\") && returned.then; // Handle a returned thenable\n\n                if (isFunction(then)) {\n                  // Special processors (notify) just wait for resolution\n                  if (special) {\n                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special)); // Normal processors (resolve) also hook into progress\n                  } else {\n                    // ...and disregard older resolution values\n                    maxDepth++;\n                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));\n                  } // Handle all other returned values\n\n                } else {\n                  // Only substitute handlers pass on context\n                  // and multiple values (non-spec behavior)\n                  if (handler !== Identity) {\n                    that = undefined;\n                    args = [returned];\n                  } // Process the value(s)\n                  // Default process is resolve\n\n\n                  (special || deferred.resolveWith)(that, args);\n                }\n              },\n                  // Only normal processors (resolve) catch and reject exceptions\n              process = special ? mightThrow : function () {\n                try {\n                  mightThrow();\n                } catch (e) {\n                  if (jQuery.Deferred.exceptionHook) {\n                    jQuery.Deferred.exceptionHook(e, process.stackTrace);\n                  } // Support: Promises/A+ section 2.3.3.3.4.1\n                  // https://promisesaplus.com/#point-61\n                  // Ignore post-resolution exceptions\n\n\n                  if (depth + 1 >= maxDepth) {\n                    // Only substitute handlers pass on context\n                    // and multiple values (non-spec behavior)\n                    if (handler !== Thrower) {\n                      that = undefined;\n                      args = [e];\n                    }\n\n                    deferred.rejectWith(that, args);\n                  }\n                }\n              }; // Support: Promises/A+ section 2.3.3.3.1\n              // https://promisesaplus.com/#point-57\n              // Re-resolve promises immediately to dodge false rejection from\n              // subsequent errors\n\n\n              if (depth) {\n                process();\n              } else {\n                // Call an optional hook to record the stack, in case of exception\n                // since it's otherwise lost when execution goes async\n                if (jQuery.Deferred.getStackHook) {\n                  process.stackTrace = jQuery.Deferred.getStackHook();\n                }\n\n                window.setTimeout(process);\n              }\n            };\n          }\n\n          return jQuery.Deferred(function (newDefer) {\n            // progress_handlers.add( ... )\n            tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith)); // fulfilled_handlers.add( ... )\n\n            tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity)); // rejected_handlers.add( ... )\n\n            tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));\n          }).promise();\n        },\n        // Get a promise for this deferred\n        // If obj is provided, the promise aspect is added to the object\n        promise: function (obj) {\n          return obj != null ? jQuery.extend(obj, promise) : promise;\n        }\n      },\n          deferred = {}; // Add list-specific methods\n\n      jQuery.each(tuples, function (i, tuple) {\n        var list = tuple[2],\n            stateString = tuple[5]; // promise.progress = list.add\n        // promise.done = list.add\n        // promise.fail = list.add\n\n        promise[tuple[1]] = list.add; // Handle state\n\n        if (stateString) {\n          list.add(function () {\n            // state = \"resolved\" (i.e., fulfilled)\n            // state = \"rejected\"\n            state = stateString;\n          }, // rejected_callbacks.disable\n          // fulfilled_callbacks.disable\n          tuples[3 - i][2].disable, // rejected_handlers.disable\n          // fulfilled_handlers.disable\n          tuples[3 - i][3].disable, // progress_callbacks.lock\n          tuples[0][2].lock, // progress_handlers.lock\n          tuples[0][3].lock);\n        } // progress_handlers.fire\n        // fulfilled_handlers.fire\n        // rejected_handlers.fire\n\n\n        list.add(tuple[3].fire); // deferred.notify = function() { deferred.notifyWith(...) }\n        // deferred.resolve = function() { deferred.resolveWith(...) }\n        // deferred.reject = function() { deferred.rejectWith(...) }\n\n        deferred[tuple[0]] = function () {\n          deferred[tuple[0] + \"With\"](this === deferred ? undefined : this, arguments);\n          return this;\n        }; // deferred.notifyWith = list.fireWith\n        // deferred.resolveWith = list.fireWith\n        // deferred.rejectWith = list.fireWith\n\n\n        deferred[tuple[0] + \"With\"] = list.fireWith;\n      }); // Make the deferred a promise\n\n      promise.promise(deferred); // Call given func if any\n\n      if (func) {\n        func.call(deferred, deferred);\n      } // All done!\n\n\n      return deferred;\n    },\n    // Deferred helper\n    when: function (singleValue) {\n      var // count of uncompleted subordinates\n      remaining = arguments.length,\n          // count of unprocessed arguments\n      i = remaining,\n          // subordinate fulfillment data\n      resolveContexts = Array(i),\n          resolveValues = slice.call(arguments),\n          // the master Deferred\n      master = jQuery.Deferred(),\n          // subordinate callback factory\n      updateFunc = function (i) {\n        return function (value) {\n          resolveContexts[i] = this;\n          resolveValues[i] = arguments.length > 1 ? slice.call(arguments) : value;\n\n          if (! --remaining) {\n            master.resolveWith(resolveContexts, resolveValues);\n          }\n        };\n      }; // Single- and empty arguments are adopted like Promise.resolve\n\n\n      if (remaining <= 1) {\n        adoptValue(singleValue, master.done(updateFunc(i)).resolve, master.reject, !remaining); // Use .then() to unwrap secondary thenables (cf. gh-3000)\n\n        if (master.state() === \"pending\" || isFunction(resolveValues[i] && resolveValues[i].then)) {\n          return master.then();\n        }\n      } // Multiple arguments are aggregated like Promise.all array elements\n\n\n      while (i--) {\n        adoptValue(resolveValues[i], updateFunc(i), master.reject);\n      }\n\n      return master.promise();\n    }\n  }); // These usually indicate a programmer mistake during development,\n  // warn about them ASAP rather than swallowing them by default.\n\n  var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\n  jQuery.Deferred.exceptionHook = function (error, stack) {\n    // Support: IE 8 - 9 only\n    // Console exists when dev tools are open, which can happen at any time\n    if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {\n      window.console.warn(\"jQuery.Deferred exception: \" + error.message, error.stack, stack);\n    }\n  };\n\n  jQuery.readyException = function (error) {\n    window.setTimeout(function () {\n      throw error;\n    });\n  }; // The deferred used on DOM ready\n\n\n  var readyList = jQuery.Deferred();\n\n  jQuery.fn.ready = function (fn) {\n    readyList.then(fn) // Wrap jQuery.readyException in a function so that the lookup\n    // happens at the time of error handling instead of callback\n    // registration.\n    .catch(function (error) {\n      jQuery.readyException(error);\n    });\n    return this;\n  };\n\n  jQuery.extend({\n    // Is the DOM ready to be used? Set to true once it occurs.\n    isReady: false,\n    // A counter to track how many items to wait for before\n    // the ready event fires. See #6781\n    readyWait: 1,\n    // Handle when the DOM is ready\n    ready: function (wait) {\n      // Abort if there are pending holds or we're already ready\n      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n        return;\n      } // Remember that the DOM is ready\n\n\n      jQuery.isReady = true; // If a normal DOM Ready event fired, decrement, and wait if need be\n\n      if (wait !== true && --jQuery.readyWait > 0) {\n        return;\n      } // If there are functions bound, to execute\n\n\n      readyList.resolveWith(document, [jQuery]);\n    }\n  });\n  jQuery.ready.then = readyList.then; // The ready event handler and self cleanup method\n\n  function completed() {\n    document.removeEventListener(\"DOMContentLoaded\", completed);\n    window.removeEventListener(\"load\", completed);\n    jQuery.ready();\n  } // Catch cases where $(document).ready() is called\n  // after the browser event has already occurred.\n  // Support: IE <=9 - 10 only\n  // Older IE sometimes signals \"interactive\" too soon\n\n\n  if (document.readyState === \"complete\" || document.readyState !== \"loading\" && !document.documentElement.doScroll) {\n    // Handle it asynchronously to allow scripts the opportunity to delay ready\n    window.setTimeout(jQuery.ready);\n  } else {\n    // Use the handy event callback\n    document.addEventListener(\"DOMContentLoaded\", completed); // A fallback to window.onload, that will always work\n\n    window.addEventListener(\"load\", completed);\n  } // Multifunctional method to get and set values of a collection\n  // The value/s can optionally be executed if it's a function\n\n\n  var access = function (elems, fn, key, value, chainable, emptyGet, raw) {\n    var i = 0,\n        len = elems.length,\n        bulk = key == null; // Sets many values\n\n    if (toType(key) === \"object\") {\n      chainable = true;\n\n      for (i in key) {\n        access(elems, fn, i, key[i], true, emptyGet, raw);\n      } // Sets one value\n\n    } else if (value !== undefined) {\n      chainable = true;\n\n      if (!isFunction(value)) {\n        raw = true;\n      }\n\n      if (bulk) {\n        // Bulk operations run against the entire set\n        if (raw) {\n          fn.call(elems, value);\n          fn = null; // ...except when executing function values\n        } else {\n          bulk = fn;\n\n          fn = function (elem, _key, value) {\n            return bulk.call(jQuery(elem), value);\n          };\n        }\n      }\n\n      if (fn) {\n        for (; i < len; i++) {\n          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n        }\n      }\n    }\n\n    if (chainable) {\n      return elems;\n    } // Gets\n\n\n    if (bulk) {\n      return fn.call(elems);\n    }\n\n    return len ? fn(elems[0], key) : emptyGet;\n  }; // Matches dashed string for camelizing\n\n\n  var rmsPrefix = /^-ms-/,\n      rdashAlpha = /-([a-z])/g; // Used by camelCase as callback to replace()\n\n  function fcamelCase(_all, letter) {\n    return letter.toUpperCase();\n  } // Convert dashed to camelCase; used by the css and data modules\n  // Support: IE <=9 - 11, Edge 12 - 15\n  // Microsoft forgot to hump their vendor prefix (#9572)\n\n\n  function camelCase(string) {\n    return string.replace(rmsPrefix, \"ms-\").replace(rdashAlpha, fcamelCase);\n  }\n\n  var acceptData = function (owner) {\n    // Accepts only:\n    //  - Node\n    //    - Node.ELEMENT_NODE\n    //    - Node.DOCUMENT_NODE\n    //  - Object\n    //    - Any\n    return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;\n  };\n\n  function Data() {\n    this.expando = jQuery.expando + Data.uid++;\n  }\n\n  Data.uid = 1;\n  Data.prototype = {\n    cache: function (owner) {\n      // Check if the owner object already has a cache\n      var value = owner[this.expando]; // If not, create one\n\n      if (!value) {\n        value = {}; // We can accept data for non-element nodes in modern browsers,\n        // but we should not, see #8335.\n        // Always return an empty object.\n\n        if (acceptData(owner)) {\n          // If it is a node unlikely to be stringify-ed or looped over\n          // use plain assignment\n          if (owner.nodeType) {\n            owner[this.expando] = value; // Otherwise secure it in a non-enumerable property\n            // configurable must be true to allow the property to be\n            // deleted when data is removed\n          } else {\n            Object.defineProperty(owner, this.expando, {\n              value: value,\n              configurable: true\n            });\n          }\n        }\n      }\n\n      return value;\n    },\n    set: function (owner, data, value) {\n      var prop,\n          cache = this.cache(owner); // Handle: [ owner, key, value ] args\n      // Always use camelCase key (gh-2257)\n\n      if (typeof data === \"string\") {\n        cache[camelCase(data)] = value; // Handle: [ owner, { properties } ] args\n      } else {\n        // Copy the properties one-by-one to the cache object\n        for (prop in data) {\n          cache[camelCase(prop)] = data[prop];\n        }\n      }\n\n      return cache;\n    },\n    get: function (owner, key) {\n      return key === undefined ? this.cache(owner) : // Always use camelCase key (gh-2257)\n      owner[this.expando] && owner[this.expando][camelCase(key)];\n    },\n    access: function (owner, key, value) {\n      // In cases where either:\n      //\n      //   1. No key was specified\n      //   2. A string key was specified, but no value provided\n      //\n      // Take the \"read\" path and allow the get method to determine\n      // which value to return, respectively either:\n      //\n      //   1. The entire cache object\n      //   2. The data stored at the key\n      //\n      if (key === undefined || key && typeof key === \"string\" && value === undefined) {\n        return this.get(owner, key);\n      } // When the key is not a string, or both a key and value\n      // are specified, set or extend (existing objects) with either:\n      //\n      //   1. An object of properties\n      //   2. A key and value\n      //\n\n\n      this.set(owner, key, value); // Since the \"set\" path can have two possible entry points\n      // return the expected data based on which path was taken[*]\n\n      return value !== undefined ? value : key;\n    },\n    remove: function (owner, key) {\n      var i,\n          cache = owner[this.expando];\n\n      if (cache === undefined) {\n        return;\n      }\n\n      if (key !== undefined) {\n        // Support array or space separated string of keys\n        if (Array.isArray(key)) {\n          // If key is an array of keys...\n          // We always set camelCase keys, so remove that.\n          key = key.map(camelCase);\n        } else {\n          key = camelCase(key); // If a key with the spaces exists, use it.\n          // Otherwise, create an array by matching non-whitespace\n\n          key = key in cache ? [key] : key.match(rnothtmlwhite) || [];\n        }\n\n        i = key.length;\n\n        while (i--) {\n          delete cache[key[i]];\n        }\n      } // Remove the expando if there's no more data\n\n\n      if (key === undefined || jQuery.isEmptyObject(cache)) {\n        // Support: Chrome <=35 - 45\n        // Webkit & Blink performance suffers when deleting properties\n        // from DOM nodes, so set to undefined instead\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n        if (owner.nodeType) {\n          owner[this.expando] = undefined;\n        } else {\n          delete owner[this.expando];\n        }\n      }\n    },\n    hasData: function (owner) {\n      var cache = owner[this.expando];\n      return cache !== undefined && !jQuery.isEmptyObject(cache);\n    }\n  };\n  var dataPriv = new Data();\n  var dataUser = new Data(); //\tImplementation Summary\n  //\n  //\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n  //\t2. Improve the module's maintainability by reducing the storage\n  //\t\tpaths to a single mechanism.\n  //\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n  //\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n  //\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n  //\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\n  var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n      rmultiDash = /[A-Z]/g;\n\n  function getData(data) {\n    if (data === \"true\") {\n      return true;\n    }\n\n    if (data === \"false\") {\n      return false;\n    }\n\n    if (data === \"null\") {\n      return null;\n    } // Only convert to a number if it doesn't change the string\n\n\n    if (data === +data + \"\") {\n      return +data;\n    }\n\n    if (rbrace.test(data)) {\n      return JSON.parse(data);\n    }\n\n    return data;\n  }\n\n  function dataAttr(elem, key, data) {\n    var name; // If nothing was found internally, try to fetch any\n    // data from the HTML5 data-* attribute\n\n    if (data === undefined && elem.nodeType === 1) {\n      name = \"data-\" + key.replace(rmultiDash, \"-$&\").toLowerCase();\n      data = elem.getAttribute(name);\n\n      if (typeof data === \"string\") {\n        try {\n          data = getData(data);\n        } catch (e) {} // Make sure we set the data so it isn't changed later\n\n\n        dataUser.set(elem, key, data);\n      } else {\n        data = undefined;\n      }\n    }\n\n    return data;\n  }\n\n  jQuery.extend({\n    hasData: function (elem) {\n      return dataUser.hasData(elem) || dataPriv.hasData(elem);\n    },\n    data: function (elem, name, data) {\n      return dataUser.access(elem, name, data);\n    },\n    removeData: function (elem, name) {\n      dataUser.remove(elem, name);\n    },\n    // TODO: Now that all calls to _data and _removeData have been replaced\n    // with direct calls to dataPriv methods, these can be deprecated.\n    _data: function (elem, name, data) {\n      return dataPriv.access(elem, name, data);\n    },\n    _removeData: function (elem, name) {\n      dataPriv.remove(elem, name);\n    }\n  });\n  jQuery.fn.extend({\n    data: function (key, value) {\n      var i,\n          name,\n          data,\n          elem = this[0],\n          attrs = elem && elem.attributes; // Gets all values\n\n      if (key === undefined) {\n        if (this.length) {\n          data = dataUser.get(elem);\n\n          if (elem.nodeType === 1 && !dataPriv.get(elem, \"hasDataAttrs\")) {\n            i = attrs.length;\n\n            while (i--) {\n              // Support: IE 11 only\n              // The attrs elements can be null (#14894)\n              if (attrs[i]) {\n                name = attrs[i].name;\n\n                if (name.indexOf(\"data-\") === 0) {\n                  name = camelCase(name.slice(5));\n                  dataAttr(elem, name, data[name]);\n                }\n              }\n            }\n\n            dataPriv.set(elem, \"hasDataAttrs\", true);\n          }\n        }\n\n        return data;\n      } // Sets multiple values\n\n\n      if (typeof key === \"object\") {\n        return this.each(function () {\n          dataUser.set(this, key);\n        });\n      }\n\n      return access(this, function (value) {\n        var data; // The calling jQuery object (element matches) is not empty\n        // (and therefore has an element appears at this[ 0 ]) and the\n        // `value` parameter was not undefined. An empty jQuery object\n        // will result in `undefined` for elem = this[ 0 ] which will\n        // throw an exception if an attempt to read a data cache is made.\n\n        if (elem && value === undefined) {\n          // Attempt to get data from the cache\n          // The key will always be camelCased in Data\n          data = dataUser.get(elem, key);\n\n          if (data !== undefined) {\n            return data;\n          } // Attempt to \"discover\" the data in\n          // HTML5 custom data-* attrs\n\n\n          data = dataAttr(elem, key);\n\n          if (data !== undefined) {\n            return data;\n          } // We tried really hard, but the data doesn't exist.\n\n\n          return;\n        } // Set the data...\n\n\n        this.each(function () {\n          // We always store the camelCased key\n          dataUser.set(this, key, value);\n        });\n      }, null, value, arguments.length > 1, null, true);\n    },\n    removeData: function (key) {\n      return this.each(function () {\n        dataUser.remove(this, key);\n      });\n    }\n  });\n  jQuery.extend({\n    queue: function (elem, type, data) {\n      var queue;\n\n      if (elem) {\n        type = (type || \"fx\") + \"queue\";\n        queue = dataPriv.get(elem, type); // Speed up dequeue by getting out quickly if this is just a lookup\n\n        if (data) {\n          if (!queue || Array.isArray(data)) {\n            queue = dataPriv.access(elem, type, jQuery.makeArray(data));\n          } else {\n            queue.push(data);\n          }\n        }\n\n        return queue || [];\n      }\n    },\n    dequeue: function (elem, type) {\n      type = type || \"fx\";\n\n      var queue = jQuery.queue(elem, type),\n          startLength = queue.length,\n          fn = queue.shift(),\n          hooks = jQuery._queueHooks(elem, type),\n          next = function () {\n        jQuery.dequeue(elem, type);\n      }; // If the fx queue is dequeued, always remove the progress sentinel\n\n\n      if (fn === \"inprogress\") {\n        fn = queue.shift();\n        startLength--;\n      }\n\n      if (fn) {\n        // Add a progress sentinel to prevent the fx queue from being\n        // automatically dequeued\n        if (type === \"fx\") {\n          queue.unshift(\"inprogress\");\n        } // Clear up the last queue stop function\n\n\n        delete hooks.stop;\n        fn.call(elem, next, hooks);\n      }\n\n      if (!startLength && hooks) {\n        hooks.empty.fire();\n      }\n    },\n    // Not public - generate a queueHooks object, or return the current one\n    _queueHooks: function (elem, type) {\n      var key = type + \"queueHooks\";\n      return dataPriv.get(elem, key) || dataPriv.access(elem, key, {\n        empty: jQuery.Callbacks(\"once memory\").add(function () {\n          dataPriv.remove(elem, [type + \"queue\", key]);\n        })\n      });\n    }\n  });\n  jQuery.fn.extend({\n    queue: function (type, data) {\n      var setter = 2;\n\n      if (typeof type !== \"string\") {\n        data = type;\n        type = \"fx\";\n        setter--;\n      }\n\n      if (arguments.length < setter) {\n        return jQuery.queue(this[0], type);\n      }\n\n      return data === undefined ? this : this.each(function () {\n        var queue = jQuery.queue(this, type, data); // Ensure a hooks for this queue\n\n        jQuery._queueHooks(this, type);\n\n        if (type === \"fx\" && queue[0] !== \"inprogress\") {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    dequeue: function (type) {\n      return this.each(function () {\n        jQuery.dequeue(this, type);\n      });\n    },\n    clearQueue: function (type) {\n      return this.queue(type || \"fx\", []);\n    },\n    // Get a promise resolved when queues of a certain type\n    // are emptied (fx is the type by default)\n    promise: function (type, obj) {\n      var tmp,\n          count = 1,\n          defer = jQuery.Deferred(),\n          elements = this,\n          i = this.length,\n          resolve = function () {\n        if (! --count) {\n          defer.resolveWith(elements, [elements]);\n        }\n      };\n\n      if (typeof type !== \"string\") {\n        obj = type;\n        type = undefined;\n      }\n\n      type = type || \"fx\";\n\n      while (i--) {\n        tmp = dataPriv.get(elements[i], type + \"queueHooks\");\n\n        if (tmp && tmp.empty) {\n          count++;\n          tmp.empty.add(resolve);\n        }\n      }\n\n      resolve();\n      return defer.promise(obj);\n    }\n  });\n  var pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\n  var rcssNum = new RegExp(\"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\");\n  var cssExpand = [\"Top\", \"Right\", \"Bottom\", \"Left\"];\n  var documentElement = document.documentElement;\n\n  var isAttached = function (elem) {\n    return jQuery.contains(elem.ownerDocument, elem);\n  },\n      composed = {\n    composed: true\n  }; // Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n  // Check attachment across shadow DOM boundaries when possible (gh-3504)\n  // Support: iOS 10.0-10.2 only\n  // Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n  // leading to errors. We need to check for `getRootNode`.\n\n\n  if (documentElement.getRootNode) {\n    isAttached = function (elem) {\n      return jQuery.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;\n    };\n  }\n\n  var isHiddenWithinTree = function (elem, el) {\n    // isHiddenWithinTree might be called from jQuery#filter function;\n    // in that case, element will be second argument\n    elem = el || elem; // Inline style trumps all\n\n    return elem.style.display === \"none\" || elem.style.display === \"\" && // Otherwise, check computed style\n    // Support: Firefox <=43 - 45\n    // Disconnected elements can have computed display: none, so first confirm that elem is\n    // in the document.\n    isAttached(elem) && jQuery.css(elem, \"display\") === \"none\";\n  };\n\n  function adjustCSS(elem, prop, valueParts, tween) {\n    var adjusted,\n        scale,\n        maxIterations = 20,\n        currentValue = tween ? function () {\n      return tween.cur();\n    } : function () {\n      return jQuery.css(elem, prop, \"\");\n    },\n        initial = currentValue(),\n        unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? \"\" : \"px\"),\n        // Starting value computation is required for potential unit mismatches\n    initialInUnit = elem.nodeType && (jQuery.cssNumber[prop] || unit !== \"px\" && +initial) && rcssNum.exec(jQuery.css(elem, prop));\n\n    if (initialInUnit && initialInUnit[3] !== unit) {\n      // Support: Firefox <=54\n      // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n      initial = initial / 2; // Trust units reported by jQuery.css\n\n      unit = unit || initialInUnit[3]; // Iteratively approximate from a nonzero starting point\n\n      initialInUnit = +initial || 1;\n\n      while (maxIterations--) {\n        // Evaluate and update our best guess (doubling guesses that zero out).\n        // Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n        jQuery.style(elem, prop, initialInUnit + unit);\n\n        if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {\n          maxIterations = 0;\n        }\n\n        initialInUnit = initialInUnit / scale;\n      }\n\n      initialInUnit = initialInUnit * 2;\n      jQuery.style(elem, prop, initialInUnit + unit); // Make sure we update the tween properties later on\n\n      valueParts = valueParts || [];\n    }\n\n    if (valueParts) {\n      initialInUnit = +initialInUnit || +initial || 0; // Apply relative offset (+=/-=) if specified\n\n      adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];\n\n      if (tween) {\n        tween.unit = unit;\n        tween.start = initialInUnit;\n        tween.end = adjusted;\n      }\n    }\n\n    return adjusted;\n  }\n\n  var defaultDisplayMap = {};\n\n  function getDefaultDisplay(elem) {\n    var temp,\n        doc = elem.ownerDocument,\n        nodeName = elem.nodeName,\n        display = defaultDisplayMap[nodeName];\n\n    if (display) {\n      return display;\n    }\n\n    temp = doc.body.appendChild(doc.createElement(nodeName));\n    display = jQuery.css(temp, \"display\");\n    temp.parentNode.removeChild(temp);\n\n    if (display === \"none\") {\n      display = \"block\";\n    }\n\n    defaultDisplayMap[nodeName] = display;\n    return display;\n  }\n\n  function showHide(elements, show) {\n    var display,\n        elem,\n        values = [],\n        index = 0,\n        length = elements.length; // Determine new display value for elements that need to change\n\n    for (; index < length; index++) {\n      elem = elements[index];\n\n      if (!elem.style) {\n        continue;\n      }\n\n      display = elem.style.display;\n\n      if (show) {\n        // Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n        // check is required in this first loop unless we have a nonempty display value (either\n        // inline or about-to-be-restored)\n        if (display === \"none\") {\n          values[index] = dataPriv.get(elem, \"display\") || null;\n\n          if (!values[index]) {\n            elem.style.display = \"\";\n          }\n        }\n\n        if (elem.style.display === \"\" && isHiddenWithinTree(elem)) {\n          values[index] = getDefaultDisplay(elem);\n        }\n      } else {\n        if (display !== \"none\") {\n          values[index] = \"none\"; // Remember what we're overwriting\n\n          dataPriv.set(elem, \"display\", display);\n        }\n      }\n    } // Set the display of the elements in a second loop to avoid constant reflow\n\n\n    for (index = 0; index < length; index++) {\n      if (values[index] != null) {\n        elements[index].style.display = values[index];\n      }\n    }\n\n    return elements;\n  }\n\n  jQuery.fn.extend({\n    show: function () {\n      return showHide(this, true);\n    },\n    hide: function () {\n      return showHide(this);\n    },\n    toggle: function (state) {\n      if (typeof state === \"boolean\") {\n        return state ? this.show() : this.hide();\n      }\n\n      return this.each(function () {\n        if (isHiddenWithinTree(this)) {\n          jQuery(this).show();\n        } else {\n          jQuery(this).hide();\n        }\n      });\n    }\n  });\n  var rcheckableType = /^(?:checkbox|radio)$/i;\n  var rtagName = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i;\n  var rscriptType = /^$|^module$|\\/(?:java|ecma)script/i;\n\n  (function () {\n    var fragment = document.createDocumentFragment(),\n        div = fragment.appendChild(document.createElement(\"div\")),\n        input = document.createElement(\"input\"); // Support: Android 4.0 - 4.3 only\n    // Check state lost if the name is set (#11217)\n    // Support: Windows Web Apps (WWA)\n    // `name` and `type` must use .setAttribute for WWA (#14901)\n\n    input.setAttribute(\"type\", \"radio\");\n    input.setAttribute(\"checked\", \"checked\");\n    input.setAttribute(\"name\", \"t\");\n    div.appendChild(input); // Support: Android <=4.1 only\n    // Older WebKit doesn't clone checked state correctly in fragments\n\n    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked; // Support: IE <=11 only\n    // Make sure textarea (and checkbox) defaultValue is properly cloned\n\n    div.innerHTML = \"<textarea>x</textarea>\";\n    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue; // Support: IE <=9 only\n    // IE <=9 replaces <option> tags with their contents when inserted outside of\n    // the select element.\n\n    div.innerHTML = \"<option></option>\";\n    support.option = !!div.lastChild;\n  })(); // We have to close these tags to support XHTML (#13200)\n\n\n  var wrapMap = {\n    // XHTML parsers do not magically insert elements in the\n    // same way that tag soup parsers do. So we cannot shorten\n    // this by omitting <tbody> or other required elements.\n    thead: [1, \"<table>\", \"</table>\"],\n    col: [2, \"<table><colgroup>\", \"</colgroup></table>\"],\n    tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n    td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n    _default: [0, \"\", \"\"]\n  };\n  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n  wrapMap.th = wrapMap.td; // Support: IE <=9 only\n\n  if (!support.option) {\n    wrapMap.optgroup = wrapMap.option = [1, \"<select multiple='multiple'>\", \"</select>\"];\n  }\n\n  function getAll(context, tag) {\n    // Support: IE <=9 - 11 only\n    // Use typeof to avoid zero-argument method invocation on host objects (#15151)\n    var ret;\n\n    if (typeof context.getElementsByTagName !== \"undefined\") {\n      ret = context.getElementsByTagName(tag || \"*\");\n    } else if (typeof context.querySelectorAll !== \"undefined\") {\n      ret = context.querySelectorAll(tag || \"*\");\n    } else {\n      ret = [];\n    }\n\n    if (tag === undefined || tag && nodeName(context, tag)) {\n      return jQuery.merge([context], ret);\n    }\n\n    return ret;\n  } // Mark scripts as having already been evaluated\n\n\n  function setGlobalEval(elems, refElements) {\n    var i = 0,\n        l = elems.length;\n\n    for (; i < l; i++) {\n      dataPriv.set(elems[i], \"globalEval\", !refElements || dataPriv.get(refElements[i], \"globalEval\"));\n    }\n  }\n\n  var rhtml = /<|&#?\\w+;/;\n\n  function buildFragment(elems, context, scripts, selection, ignored) {\n    var elem,\n        tmp,\n        tag,\n        wrap,\n        attached,\n        j,\n        fragment = context.createDocumentFragment(),\n        nodes = [],\n        i = 0,\n        l = elems.length;\n\n    for (; i < l; i++) {\n      elem = elems[i];\n\n      if (elem || elem === 0) {\n        // Add nodes directly\n        if (toType(elem) === \"object\") {\n          // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n          jQuery.merge(nodes, elem.nodeType ? [elem] : elem); // Convert non-html into a text node\n        } else if (!rhtml.test(elem)) {\n          nodes.push(context.createTextNode(elem)); // Convert html into DOM nodes\n        } else {\n          tmp = tmp || fragment.appendChild(context.createElement(\"div\")); // Deserialize a standard representation\n\n          tag = (rtagName.exec(elem) || [\"\", \"\"])[1].toLowerCase();\n          wrap = wrapMap[tag] || wrapMap._default;\n          tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2]; // Descend through wrappers to the right content\n\n          j = wrap[0];\n\n          while (j--) {\n            tmp = tmp.lastChild;\n          } // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n\n\n          jQuery.merge(nodes, tmp.childNodes); // Remember the top-level container\n\n          tmp = fragment.firstChild; // Ensure the created nodes are orphaned (#12392)\n\n          tmp.textContent = \"\";\n        }\n      }\n    } // Remove wrapper from fragment\n\n\n    fragment.textContent = \"\";\n    i = 0;\n\n    while (elem = nodes[i++]) {\n      // Skip elements already in the context collection (trac-4087)\n      if (selection && jQuery.inArray(elem, selection) > -1) {\n        if (ignored) {\n          ignored.push(elem);\n        }\n\n        continue;\n      }\n\n      attached = isAttached(elem); // Append to fragment\n\n      tmp = getAll(fragment.appendChild(elem), \"script\"); // Preserve script evaluation history\n\n      if (attached) {\n        setGlobalEval(tmp);\n      } // Capture executables\n\n\n      if (scripts) {\n        j = 0;\n\n        while (elem = tmp[j++]) {\n          if (rscriptType.test(elem.type || \"\")) {\n            scripts.push(elem);\n          }\n        }\n      }\n    }\n\n    return fragment;\n  }\n\n  var rkeyEvent = /^key/,\n      rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n      rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Support: IE <=9 - 11+\n  // focus() and blur() are asynchronous, except when they are no-op.\n  // So expect focus to be synchronous when the element is already active,\n  // and blur to be synchronous when the element is not already active.\n  // (focus and blur are always synchronous in other supported browsers,\n  // this just defines when we can count on it).\n\n\n  function expectSync(elem, type) {\n    return elem === safeActiveElement() === (type === \"focus\");\n  } // Support: IE <=9 only\n  // Accessing document.activeElement can throw unexpectedly\n  // https://bugs.jquery.com/ticket/13393\n\n\n  function safeActiveElement() {\n    try {\n      return document.activeElement;\n    } catch (err) {}\n  }\n\n  function on(elem, types, selector, data, fn, one) {\n    var origFn, type; // Types can be a map of types/handlers\n\n    if (typeof types === \"object\") {\n      // ( types-Object, selector, data )\n      if (typeof selector !== \"string\") {\n        // ( types-Object, data )\n        data = data || selector;\n        selector = undefined;\n      }\n\n      for (type in types) {\n        on(elem, type, selector, data, types[type], one);\n      }\n\n      return elem;\n    }\n\n    if (data == null && fn == null) {\n      // ( types, fn )\n      fn = selector;\n      data = selector = undefined;\n    } else if (fn == null) {\n      if (typeof selector === \"string\") {\n        // ( types, selector, fn )\n        fn = data;\n        data = undefined;\n      } else {\n        // ( types, data, fn )\n        fn = data;\n        data = selector;\n        selector = undefined;\n      }\n    }\n\n    if (fn === false) {\n      fn = returnFalse;\n    } else if (!fn) {\n      return elem;\n    }\n\n    if (one === 1) {\n      origFn = fn;\n\n      fn = function (event) {\n        // Can use an empty set, since event contains the info\n        jQuery().off(event);\n        return origFn.apply(this, arguments);\n      }; // Use same guid so caller can remove using origFn\n\n\n      fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n    }\n\n    return elem.each(function () {\n      jQuery.event.add(this, types, fn, data, selector);\n    });\n  }\n  /*\n   * Helper functions for managing events -- not part of the public interface.\n   * Props to Dean Edwards' addEvent library for many of the ideas.\n   */\n\n\n  jQuery.event = {\n    global: {},\n    add: function (elem, types, handler, data, selector) {\n      var handleObjIn,\n          eventHandle,\n          tmp,\n          events,\n          t,\n          handleObj,\n          special,\n          handlers,\n          type,\n          namespaces,\n          origType,\n          elemData = dataPriv.get(elem); // Only attach events to objects that accept data\n\n      if (!acceptData(elem)) {\n        return;\n      } // Caller can pass in an object of custom data in lieu of the handler\n\n\n      if (handler.handler) {\n        handleObjIn = handler;\n        handler = handleObjIn.handler;\n        selector = handleObjIn.selector;\n      } // Ensure that invalid selectors throw exceptions at attach time\n      // Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\n\n      if (selector) {\n        jQuery.find.matchesSelector(documentElement, selector);\n      } // Make sure that the handler has a unique ID, used to find/remove it later\n\n\n      if (!handler.guid) {\n        handler.guid = jQuery.guid++;\n      } // Init the element's event structure and main handler, if this is the first\n\n\n      if (!(events = elemData.events)) {\n        events = elemData.events = Object.create(null);\n      }\n\n      if (!(eventHandle = elemData.handle)) {\n        eventHandle = elemData.handle = function (e) {\n          // Discard the second event of a jQuery.event.trigger() and\n          // when an event is called after a page has unloaded\n          return typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;\n        };\n      } // Handle multiple events separated by a space\n\n\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort(); // There *must* be a type, no attaching namespace-only handlers\n\n        if (!type) {\n          continue;\n        } // If event changes its type, use the special event handlers for the changed type\n\n\n        special = jQuery.event.special[type] || {}; // If selector defined, determine special event api type, otherwise given type\n\n        type = (selector ? special.delegateType : special.bindType) || type; // Update special based on newly reset type\n\n        special = jQuery.event.special[type] || {}; // handleObj is passed to all event handlers\n\n        handleObj = jQuery.extend({\n          type: type,\n          origType: origType,\n          data: data,\n          handler: handler,\n          guid: handler.guid,\n          selector: selector,\n          needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n          namespace: namespaces.join(\".\")\n        }, handleObjIn); // Init the event handler queue if we're the first\n\n        if (!(handlers = events[type])) {\n          handlers = events[type] = [];\n          handlers.delegateCount = 0; // Only use addEventListener if the special events handler returns false\n\n          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n            if (elem.addEventListener) {\n              elem.addEventListener(type, eventHandle);\n            }\n          }\n        }\n\n        if (special.add) {\n          special.add.call(elem, handleObj);\n\n          if (!handleObj.handler.guid) {\n            handleObj.handler.guid = handler.guid;\n          }\n        } // Add to the element's handler list, delegates in front\n\n\n        if (selector) {\n          handlers.splice(handlers.delegateCount++, 0, handleObj);\n        } else {\n          handlers.push(handleObj);\n        } // Keep track of which events have ever been used, for event optimization\n\n\n        jQuery.event.global[type] = true;\n      }\n    },\n    // Detach an event or set of events from an element\n    remove: function (elem, types, handler, selector, mappedTypes) {\n      var j,\n          origCount,\n          tmp,\n          events,\n          t,\n          handleObj,\n          special,\n          handlers,\n          type,\n          namespaces,\n          origType,\n          elemData = dataPriv.hasData(elem) && dataPriv.get(elem);\n\n      if (!elemData || !(events = elemData.events)) {\n        return;\n      } // Once for each type.namespace in types; type may be omitted\n\n\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort(); // Unbind all events (on this namespace, if provided) for the element\n\n        if (!type) {\n          for (type in events) {\n            jQuery.event.remove(elem, type + types[t], handler, selector, true);\n          }\n\n          continue;\n        }\n\n        special = jQuery.event.special[type] || {};\n        type = (selector ? special.delegateType : special.bindType) || type;\n        handlers = events[type] || [];\n        tmp = tmp[2] && new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\"); // Remove matching events\n\n        origCount = j = handlers.length;\n\n        while (j--) {\n          handleObj = handlers[j];\n\n          if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector)) {\n            handlers.splice(j, 1);\n\n            if (handleObj.selector) {\n              handlers.delegateCount--;\n            }\n\n            if (special.remove) {\n              special.remove.call(elem, handleObj);\n            }\n          }\n        } // Remove generic event handler if we removed something and no more handlers exist\n        // (avoids potential for endless recursion during removal of special event handlers)\n\n\n        if (origCount && !handlers.length) {\n          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n            jQuery.removeEvent(elem, type, elemData.handle);\n          }\n\n          delete events[type];\n        }\n      } // Remove data and the expando if it's no longer used\n\n\n      if (jQuery.isEmptyObject(events)) {\n        dataPriv.remove(elem, \"handle events\");\n      }\n    },\n    dispatch: function (nativeEvent) {\n      var i,\n          j,\n          ret,\n          matched,\n          handleObj,\n          handlerQueue,\n          args = new Array(arguments.length),\n          // Make a writable jQuery.Event from the native event object\n      event = jQuery.event.fix(nativeEvent),\n          handlers = (dataPriv.get(this, \"events\") || Object.create(null))[event.type] || [],\n          special = jQuery.event.special[event.type] || {}; // Use the fix-ed jQuery.Event rather than the (read-only) native event\n\n      args[0] = event;\n\n      for (i = 1; i < arguments.length; i++) {\n        args[i] = arguments[i];\n      }\n\n      event.delegateTarget = this; // Call the preDispatch hook for the mapped type, and let it bail if desired\n\n      if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n        return;\n      } // Determine handlers\n\n\n      handlerQueue = jQuery.event.handlers.call(this, event, handlers); // Run delegates first; they may want to stop propagation beneath us\n\n      i = 0;\n\n      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n        event.currentTarget = matched.elem;\n        j = 0;\n\n        while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n          // If the event is namespaced, then each handler is only invoked if it is\n          // specially universal or its namespaces are a superset of the event's.\n          if (!event.rnamespace || handleObj.namespace === false || event.rnamespace.test(handleObj.namespace)) {\n            event.handleObj = handleObj;\n            event.data = handleObj.data;\n            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n\n            if (ret !== undefined) {\n              if ((event.result = ret) === false) {\n                event.preventDefault();\n                event.stopPropagation();\n              }\n            }\n          }\n        }\n      } // Call the postDispatch hook for the mapped type\n\n\n      if (special.postDispatch) {\n        special.postDispatch.call(this, event);\n      }\n\n      return event.result;\n    },\n    handlers: function (event, handlers) {\n      var i,\n          handleObj,\n          sel,\n          matchedHandlers,\n          matchedSelectors,\n          handlerQueue = [],\n          delegateCount = handlers.delegateCount,\n          cur = event.target; // Find delegate handlers\n\n      if (delegateCount && // Support: IE <=9\n      // Black-hole SVG <use> instance trees (trac-13180)\n      cur.nodeType && // Support: Firefox <=42\n      // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n      // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n      // Support: IE 11 only\n      // ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n      !(event.type === \"click\" && event.button >= 1)) {\n        for (; cur !== this; cur = cur.parentNode || this) {\n          // Don't check non-elements (#13208)\n          // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n          if (cur.nodeType === 1 && !(event.type === \"click\" && cur.disabled === true)) {\n            matchedHandlers = [];\n            matchedSelectors = {};\n\n            for (i = 0; i < delegateCount; i++) {\n              handleObj = handlers[i]; // Don't conflict with Object.prototype properties (#13203)\n\n              sel = handleObj.selector + \" \";\n\n              if (matchedSelectors[sel] === undefined) {\n                matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;\n              }\n\n              if (matchedSelectors[sel]) {\n                matchedHandlers.push(handleObj);\n              }\n            }\n\n            if (matchedHandlers.length) {\n              handlerQueue.push({\n                elem: cur,\n                handlers: matchedHandlers\n              });\n            }\n          }\n        }\n      } // Add the remaining (directly-bound) handlers\n\n\n      cur = this;\n\n      if (delegateCount < handlers.length) {\n        handlerQueue.push({\n          elem: cur,\n          handlers: handlers.slice(delegateCount)\n        });\n      }\n\n      return handlerQueue;\n    },\n    addProp: function (name, hook) {\n      Object.defineProperty(jQuery.Event.prototype, name, {\n        enumerable: true,\n        configurable: true,\n        get: isFunction(hook) ? function () {\n          if (this.originalEvent) {\n            return hook(this.originalEvent);\n          }\n        } : function () {\n          if (this.originalEvent) {\n            return this.originalEvent[name];\n          }\n        },\n        set: function (value) {\n          Object.defineProperty(this, name, {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: value\n          });\n        }\n      });\n    },\n    fix: function (originalEvent) {\n      return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);\n    },\n    special: {\n      load: {\n        // Prevent triggered image.load events from bubbling to window.load\n        noBubble: true\n      },\n      click: {\n        // Utilize native event to ensure correct state for checkable inputs\n        setup: function (data) {\n          // For mutual compressibility with _default, replace `this` access with a local var.\n          // `|| data` is dead code meant only to preserve the variable through minification.\n          var el = this || data; // Claim the first handler\n\n          if (rcheckableType.test(el.type) && el.click && nodeName(el, \"input\")) {\n            // dataPriv.set( el, \"click\", ... )\n            leverageNative(el, \"click\", returnTrue);\n          } // Return false to allow normal processing in the caller\n\n\n          return false;\n        },\n        trigger: function (data) {\n          // For mutual compressibility with _default, replace `this` access with a local var.\n          // `|| data` is dead code meant only to preserve the variable through minification.\n          var el = this || data; // Force setup before triggering a click\n\n          if (rcheckableType.test(el.type) && el.click && nodeName(el, \"input\")) {\n            leverageNative(el, \"click\");\n          } // Return non-false to allow normal event-path propagation\n\n\n          return true;\n        },\n        // For cross-browser consistency, suppress native .click() on links\n        // Also prevent it if we're currently inside a leveraged native-event stack\n        _default: function (event) {\n          var target = event.target;\n          return rcheckableType.test(target.type) && target.click && nodeName(target, \"input\") && dataPriv.get(target, \"click\") || nodeName(target, \"a\");\n        }\n      },\n      beforeunload: {\n        postDispatch: function (event) {\n          // Support: Firefox 20+\n          // Firefox doesn't alert if the returnValue field is not set.\n          if (event.result !== undefined && event.originalEvent) {\n            event.originalEvent.returnValue = event.result;\n          }\n        }\n      }\n    }\n  }; // Ensure the presence of an event listener that handles manually-triggered\n  // synthetic events by interrupting progress until reinvoked in response to\n  // *native* events that it fires directly, ensuring that state changes have\n  // already occurred before other listeners are invoked.\n\n  function leverageNative(el, type, expectSync) {\n    // Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n    if (!expectSync) {\n      if (dataPriv.get(el, type) === undefined) {\n        jQuery.event.add(el, type, returnTrue);\n      }\n\n      return;\n    } // Register the controller as a special universal handler for all event namespaces\n\n\n    dataPriv.set(el, type, false);\n    jQuery.event.add(el, type, {\n      namespace: false,\n      handler: function (event) {\n        var notAsync,\n            result,\n            saved = dataPriv.get(this, type);\n\n        if (event.isTrigger & 1 && this[type]) {\n          // Interrupt processing of the outer synthetic .trigger()ed event\n          // Saved data should be false in such cases, but might be a leftover capture object\n          // from an async native handler (gh-4350)\n          if (!saved.length) {\n            // Store arguments for use when handling the inner native event\n            // There will always be at least one argument (an event object), so this array\n            // will not be confused with a leftover capture object.\n            saved = slice.call(arguments);\n            dataPriv.set(this, type, saved); // Trigger the native event and capture its result\n            // Support: IE <=9 - 11+\n            // focus() and blur() are asynchronous\n\n            notAsync = expectSync(this, type);\n            this[type]();\n            result = dataPriv.get(this, type);\n\n            if (saved !== result || notAsync) {\n              dataPriv.set(this, type, false);\n            } else {\n              result = {};\n            }\n\n            if (saved !== result) {\n              // Cancel the outer synthetic event\n              event.stopImmediatePropagation();\n              event.preventDefault();\n              return result.value;\n            } // If this is an inner synthetic event for an event with a bubbling surrogate\n            // (focus or blur), assume that the surrogate already propagated from triggering the\n            // native event and prevent that from happening again here.\n            // This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n            // bubbling surrogate propagates *after* the non-bubbling base), but that seems\n            // less bad than duplication.\n\n          } else if ((jQuery.event.special[type] || {}).delegateType) {\n            event.stopPropagation();\n          } // If this is a native event triggered above, everything is now in order\n          // Fire an inner synthetic event with the original arguments\n\n        } else if (saved.length) {\n          // ...and capture the result\n          dataPriv.set(this, type, {\n            value: jQuery.event.trigger( // Support: IE <=9 - 11+\n            // Extend with the prototype to reset the above stopImmediatePropagation()\n            jQuery.extend(saved[0], jQuery.Event.prototype), saved.slice(1), this)\n          }); // Abort handling of the native event\n\n          event.stopImmediatePropagation();\n        }\n      }\n    });\n  }\n\n  jQuery.removeEvent = function (elem, type, handle) {\n    // This \"if\" is needed for plain objects\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, handle);\n    }\n  };\n\n  jQuery.Event = function (src, props) {\n    // Allow instantiation without the 'new' keyword\n    if (!(this instanceof jQuery.Event)) {\n      return new jQuery.Event(src, props);\n    } // Event object\n\n\n    if (src && src.type) {\n      this.originalEvent = src;\n      this.type = src.type; // Events bubbling up the document may have been marked as prevented\n      // by a handler lower down the tree; reflect the correct value.\n\n      this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && // Support: Android <=2.3 only\n      src.returnValue === false ? returnTrue : returnFalse; // Create target properties\n      // Support: Safari <=6 - 7 only\n      // Target should not be a text node (#504, #13143)\n\n      this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;\n      this.currentTarget = src.currentTarget;\n      this.relatedTarget = src.relatedTarget; // Event type\n    } else {\n      this.type = src;\n    } // Put explicitly provided properties onto the event object\n\n\n    if (props) {\n      jQuery.extend(this, props);\n    } // Create a timestamp if incoming event doesn't have one\n\n\n    this.timeStamp = src && src.timeStamp || Date.now(); // Mark it as fixed\n\n    this[jQuery.expando] = true;\n  }; // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n  // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n\n\n  jQuery.Event.prototype = {\n    constructor: jQuery.Event,\n    isDefaultPrevented: returnFalse,\n    isPropagationStopped: returnFalse,\n    isImmediatePropagationStopped: returnFalse,\n    isSimulated: false,\n    preventDefault: function () {\n      var e = this.originalEvent;\n      this.isDefaultPrevented = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.preventDefault();\n      }\n    },\n    stopPropagation: function () {\n      var e = this.originalEvent;\n      this.isPropagationStopped = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.stopPropagation();\n      }\n    },\n    stopImmediatePropagation: function () {\n      var e = this.originalEvent;\n      this.isImmediatePropagationStopped = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.stopImmediatePropagation();\n      }\n\n      this.stopPropagation();\n    }\n  }; // Includes all common event props including KeyEvent and MouseEvent specific props\n\n  jQuery.each({\n    altKey: true,\n    bubbles: true,\n    cancelable: true,\n    changedTouches: true,\n    ctrlKey: true,\n    detail: true,\n    eventPhase: true,\n    metaKey: true,\n    pageX: true,\n    pageY: true,\n    shiftKey: true,\n    view: true,\n    \"char\": true,\n    code: true,\n    charCode: true,\n    key: true,\n    keyCode: true,\n    button: true,\n    buttons: true,\n    clientX: true,\n    clientY: true,\n    offsetX: true,\n    offsetY: true,\n    pointerId: true,\n    pointerType: true,\n    screenX: true,\n    screenY: true,\n    targetTouches: true,\n    toElement: true,\n    touches: true,\n    which: function (event) {\n      var button = event.button; // Add which for key events\n\n      if (event.which == null && rkeyEvent.test(event.type)) {\n        return event.charCode != null ? event.charCode : event.keyCode;\n      } // Add which for click: 1 === left; 2 === middle; 3 === right\n\n\n      if (!event.which && button !== undefined && rmouseEvent.test(event.type)) {\n        if (button & 1) {\n          return 1;\n        }\n\n        if (button & 2) {\n          return 3;\n        }\n\n        if (button & 4) {\n          return 2;\n        }\n\n        return 0;\n      }\n\n      return event.which;\n    }\n  }, jQuery.event.addProp);\n  jQuery.each({\n    focus: \"focusin\",\n    blur: \"focusout\"\n  }, function (type, delegateType) {\n    jQuery.event.special[type] = {\n      // Utilize native event if possible so blur/focus sequence is correct\n      setup: function () {\n        // Claim the first handler\n        // dataPriv.set( this, \"focus\", ... )\n        // dataPriv.set( this, \"blur\", ... )\n        leverageNative(this, type, expectSync); // Return false to allow normal processing in the caller\n\n        return false;\n      },\n      trigger: function () {\n        // Force setup before trigger\n        leverageNative(this, type); // Return non-false to allow normal event-path propagation\n\n        return true;\n      },\n      delegateType: delegateType\n    };\n  }); // Create mouseenter/leave events using mouseover/out and event-time checks\n  // so that event delegation works in jQuery.\n  // Do the same for pointerenter/pointerleave and pointerover/pointerout\n  //\n  // Support: Safari 7 only\n  // Safari sends mouseenter too often; see:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n  // for the description of the bug (it existed in older Chrome versions as well).\n\n  jQuery.each({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\",\n    pointerenter: \"pointerover\",\n    pointerleave: \"pointerout\"\n  }, function (orig, fix) {\n    jQuery.event.special[orig] = {\n      delegateType: fix,\n      bindType: fix,\n      handle: function (event) {\n        var ret,\n            target = this,\n            related = event.relatedTarget,\n            handleObj = event.handleObj; // For mouseenter/leave call the handler if related is outside the target.\n        // NB: No relatedTarget if the mouse left/entered the browser window\n\n        if (!related || related !== target && !jQuery.contains(target, related)) {\n          event.type = handleObj.origType;\n          ret = handleObj.handler.apply(this, arguments);\n          event.type = fix;\n        }\n\n        return ret;\n      }\n    };\n  });\n  jQuery.fn.extend({\n    on: function (types, selector, data, fn) {\n      return on(this, types, selector, data, fn);\n    },\n    one: function (types, selector, data, fn) {\n      return on(this, types, selector, data, fn, 1);\n    },\n    off: function (types, selector, fn) {\n      var handleObj, type;\n\n      if (types && types.preventDefault && types.handleObj) {\n        // ( event )  dispatched jQuery.Event\n        handleObj = types.handleObj;\n        jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n        return this;\n      }\n\n      if (typeof types === \"object\") {\n        // ( types-object [, selector] )\n        for (type in types) {\n          this.off(type, selector, types[type]);\n        }\n\n        return this;\n      }\n\n      if (selector === false || typeof selector === \"function\") {\n        // ( types [, fn] )\n        fn = selector;\n        selector = undefined;\n      }\n\n      if (fn === false) {\n        fn = returnFalse;\n      }\n\n      return this.each(function () {\n        jQuery.event.remove(this, types, fn, selector);\n      });\n    }\n  });\n  var // Support: IE <=10 - 11, Edge 12 - 13 only\n  // In IE/Edge using regex groups here causes severe slowdowns.\n  // See https://connect.microsoft.com/IE/feedback/details/1736512/\n  rnoInnerhtml = /<script|<style|<link/i,\n      // checked=\"checked\" or checked\n  rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n      rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g; // Prefer a tbody over its parent table for containing new rows\n\n  function manipulationTarget(elem, content) {\n    if (nodeName(elem, \"table\") && nodeName(content.nodeType !== 11 ? content : content.firstChild, \"tr\")) {\n      return jQuery(elem).children(\"tbody\")[0] || elem;\n    }\n\n    return elem;\n  } // Replace/restore the type attribute of script elements for safe DOM manipulation\n\n\n  function disableScript(elem) {\n    elem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n    return elem;\n  }\n\n  function restoreScript(elem) {\n    if ((elem.type || \"\").slice(0, 5) === \"true/\") {\n      elem.type = elem.type.slice(5);\n    } else {\n      elem.removeAttribute(\"type\");\n    }\n\n    return elem;\n  }\n\n  function cloneCopyEvent(src, dest) {\n    var i, l, type, pdataOld, udataOld, udataCur, events;\n\n    if (dest.nodeType !== 1) {\n      return;\n    } // 1. Copy private data: events, handlers, etc.\n\n\n    if (dataPriv.hasData(src)) {\n      pdataOld = dataPriv.get(src);\n      events = pdataOld.events;\n\n      if (events) {\n        dataPriv.remove(dest, \"handle events\");\n\n        for (type in events) {\n          for (i = 0, l = events[type].length; i < l; i++) {\n            jQuery.event.add(dest, type, events[type][i]);\n          }\n        }\n      }\n    } // 2. Copy user data\n\n\n    if (dataUser.hasData(src)) {\n      udataOld = dataUser.access(src);\n      udataCur = jQuery.extend({}, udataOld);\n      dataUser.set(dest, udataCur);\n    }\n  } // Fix IE bugs, see support tests\n\n\n  function fixInput(src, dest) {\n    var nodeName = dest.nodeName.toLowerCase(); // Fails to persist the checked state of a cloned checkbox or radio button.\n\n    if (nodeName === \"input\" && rcheckableType.test(src.type)) {\n      dest.checked = src.checked; // Fails to return the selected option to the default selected state when cloning options\n    } else if (nodeName === \"input\" || nodeName === \"textarea\") {\n      dest.defaultValue = src.defaultValue;\n    }\n  }\n\n  function domManip(collection, args, callback, ignored) {\n    // Flatten any nested arrays\n    args = flat(args);\n    var fragment,\n        first,\n        scripts,\n        hasScripts,\n        node,\n        doc,\n        i = 0,\n        l = collection.length,\n        iNoClone = l - 1,\n        value = args[0],\n        valueIsFunction = isFunction(value); // We can't cloneNode fragments that contain checked, in WebKit\n\n    if (valueIsFunction || l > 1 && typeof value === \"string\" && !support.checkClone && rchecked.test(value)) {\n      return collection.each(function (index) {\n        var self = collection.eq(index);\n\n        if (valueIsFunction) {\n          args[0] = value.call(this, index, self.html());\n        }\n\n        domManip(self, args, callback, ignored);\n      });\n    }\n\n    if (l) {\n      fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);\n      first = fragment.firstChild;\n\n      if (fragment.childNodes.length === 1) {\n        fragment = first;\n      } // Require either new content or an interest in ignored elements to invoke the callback\n\n\n      if (first || ignored) {\n        scripts = jQuery.map(getAll(fragment, \"script\"), disableScript);\n        hasScripts = scripts.length; // Use the original fragment for the last item\n        // instead of the first because it can end up\n        // being emptied incorrectly in certain situations (#8070).\n\n        for (; i < l; i++) {\n          node = fragment;\n\n          if (i !== iNoClone) {\n            node = jQuery.clone(node, true, true); // Keep references to cloned scripts for later restoration\n\n            if (hasScripts) {\n              // Support: Android <=4.0 only, PhantomJS 1 only\n              // push.apply(_, arraylike) throws on ancient WebKit\n              jQuery.merge(scripts, getAll(node, \"script\"));\n            }\n          }\n\n          callback.call(collection[i], node, i);\n        }\n\n        if (hasScripts) {\n          doc = scripts[scripts.length - 1].ownerDocument; // Reenable scripts\n\n          jQuery.map(scripts, restoreScript); // Evaluate executable scripts on first document insertion\n\n          for (i = 0; i < hasScripts; i++) {\n            node = scripts[i];\n\n            if (rscriptType.test(node.type || \"\") && !dataPriv.access(node, \"globalEval\") && jQuery.contains(doc, node)) {\n              if (node.src && (node.type || \"\").toLowerCase() !== \"module\") {\n                // Optional AJAX dependency, but won't run scripts if not present\n                if (jQuery._evalUrl && !node.noModule) {\n                  jQuery._evalUrl(node.src, {\n                    nonce: node.nonce || node.getAttribute(\"nonce\")\n                  }, doc);\n                }\n              } else {\n                DOMEval(node.textContent.replace(rcleanScript, \"\"), node, doc);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return collection;\n  }\n\n  function remove(elem, selector, keepData) {\n    var node,\n        nodes = selector ? jQuery.filter(selector, elem) : elem,\n        i = 0;\n\n    for (; (node = nodes[i]) != null; i++) {\n      if (!keepData && node.nodeType === 1) {\n        jQuery.cleanData(getAll(node));\n      }\n\n      if (node.parentNode) {\n        if (keepData && isAttached(node)) {\n          setGlobalEval(getAll(node, \"script\"));\n        }\n\n        node.parentNode.removeChild(node);\n      }\n    }\n\n    return elem;\n  }\n\n  jQuery.extend({\n    htmlPrefilter: function (html) {\n      return html;\n    },\n    clone: function (elem, dataAndEvents, deepDataAndEvents) {\n      var i,\n          l,\n          srcElements,\n          destElements,\n          clone = elem.cloneNode(true),\n          inPage = isAttached(elem); // Fix IE cloning issues\n\n      if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n        // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n        destElements = getAll(clone);\n        srcElements = getAll(elem);\n\n        for (i = 0, l = srcElements.length; i < l; i++) {\n          fixInput(srcElements[i], destElements[i]);\n        }\n      } // Copy the events from the original to the clone\n\n\n      if (dataAndEvents) {\n        if (deepDataAndEvents) {\n          srcElements = srcElements || getAll(elem);\n          destElements = destElements || getAll(clone);\n\n          for (i = 0, l = srcElements.length; i < l; i++) {\n            cloneCopyEvent(srcElements[i], destElements[i]);\n          }\n        } else {\n          cloneCopyEvent(elem, clone);\n        }\n      } // Preserve script evaluation history\n\n\n      destElements = getAll(clone, \"script\");\n\n      if (destElements.length > 0) {\n        setGlobalEval(destElements, !inPage && getAll(elem, \"script\"));\n      } // Return the cloned set\n\n\n      return clone;\n    },\n    cleanData: function (elems) {\n      var data,\n          elem,\n          type,\n          special = jQuery.event.special,\n          i = 0;\n\n      for (; (elem = elems[i]) !== undefined; i++) {\n        if (acceptData(elem)) {\n          if (data = elem[dataPriv.expando]) {\n            if (data.events) {\n              for (type in data.events) {\n                if (special[type]) {\n                  jQuery.event.remove(elem, type); // This is a shortcut to avoid jQuery.event.remove's overhead\n                } else {\n                  jQuery.removeEvent(elem, type, data.handle);\n                }\n              }\n            } // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n\n\n            elem[dataPriv.expando] = undefined;\n          }\n\n          if (elem[dataUser.expando]) {\n            // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n            elem[dataUser.expando] = undefined;\n          }\n        }\n      }\n    }\n  });\n  jQuery.fn.extend({\n    detach: function (selector) {\n      return remove(this, selector, true);\n    },\n    remove: function (selector) {\n      return remove(this, selector);\n    },\n    text: function (value) {\n      return access(this, function (value) {\n        return value === undefined ? jQuery.text(this) : this.empty().each(function () {\n          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n            this.textContent = value;\n          }\n        });\n      }, null, value, arguments.length);\n    },\n    append: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.appendChild(elem);\n        }\n      });\n    },\n    prepend: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.insertBefore(elem, target.firstChild);\n        }\n      });\n    },\n    before: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this);\n        }\n      });\n    },\n    after: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this.nextSibling);\n        }\n      });\n    },\n    empty: function () {\n      var elem,\n          i = 0;\n\n      for (; (elem = this[i]) != null; i++) {\n        if (elem.nodeType === 1) {\n          // Prevent memory leaks\n          jQuery.cleanData(getAll(elem, false)); // Remove any remaining nodes\n\n          elem.textContent = \"\";\n        }\n      }\n\n      return this;\n    },\n    clone: function (dataAndEvents, deepDataAndEvents) {\n      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n      return this.map(function () {\n        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n      });\n    },\n    html: function (value) {\n      return access(this, function (value) {\n        var elem = this[0] || {},\n            i = 0,\n            l = this.length;\n\n        if (value === undefined && elem.nodeType === 1) {\n          return elem.innerHTML;\n        } // See if we can take a shortcut and just use innerHTML\n\n\n        if (typeof value === \"string\" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [\"\", \"\"])[1].toLowerCase()]) {\n          value = jQuery.htmlPrefilter(value);\n\n          try {\n            for (; i < l; i++) {\n              elem = this[i] || {}; // Remove element nodes and prevent memory leaks\n\n              if (elem.nodeType === 1) {\n                jQuery.cleanData(getAll(elem, false));\n                elem.innerHTML = value;\n              }\n            }\n\n            elem = 0; // If using innerHTML throws an exception, use the fallback method\n          } catch (e) {}\n        }\n\n        if (elem) {\n          this.empty().append(value);\n        }\n      }, null, value, arguments.length);\n    },\n    replaceWith: function () {\n      var ignored = []; // Make the changes, replacing each non-ignored context element with the new content\n\n      return domManip(this, arguments, function (elem) {\n        var parent = this.parentNode;\n\n        if (jQuery.inArray(this, ignored) < 0) {\n          jQuery.cleanData(getAll(this));\n\n          if (parent) {\n            parent.replaceChild(elem, this);\n          }\n        } // Force callback invocation\n\n      }, ignored);\n    }\n  });\n  jQuery.each({\n    appendTo: \"append\",\n    prependTo: \"prepend\",\n    insertBefore: \"before\",\n    insertAfter: \"after\",\n    replaceAll: \"replaceWith\"\n  }, function (name, original) {\n    jQuery.fn[name] = function (selector) {\n      var elems,\n          ret = [],\n          insert = jQuery(selector),\n          last = insert.length - 1,\n          i = 0;\n\n      for (; i <= last; i++) {\n        elems = i === last ? this : this.clone(true);\n        jQuery(insert[i])[original](elems); // Support: Android <=4.0 only, PhantomJS 1 only\n        // .get() because push.apply(_, arraylike) throws on ancient WebKit\n\n        push.apply(ret, elems.get());\n      }\n\n      return this.pushStack(ret);\n    };\n  });\n  var rnumnonpx = new RegExp(\"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\");\n\n  var getStyles = function (elem) {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    var view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  };\n\n  var swap = function (elem, options, callback) {\n    var ret,\n        name,\n        old = {}; // Remember the old values, and insert the new ones\n\n    for (name in options) {\n      old[name] = elem.style[name];\n      elem.style[name] = options[name];\n    }\n\n    ret = callback.call(elem); // Revert the old values\n\n    for (name in options) {\n      elem.style[name] = old[name];\n    }\n\n    return ret;\n  };\n\n  var rboxStyle = new RegExp(cssExpand.join(\"|\"), \"i\");\n\n  (function () {\n    // Executing both pixelPosition & boxSizingReliable tests require only one layout\n    // so they're executed at the same time to save the second computation.\n    function computeStyleTests() {\n      // This is a singleton, we need to execute it only once\n      if (!div) {\n        return;\n      }\n\n      container.style.cssText = \"position:absolute;left:-11111px;width:60px;\" + \"margin-top:1px;padding:0;border:0\";\n      div.style.cssText = \"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" + \"margin:auto;border:1px;padding:1px;\" + \"width:60%;top:1%\";\n      documentElement.appendChild(container).appendChild(div);\n      var divStyle = window.getComputedStyle(div);\n      pixelPositionVal = divStyle.top !== \"1%\"; // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\n      reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12; // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n      // Some styles come back with percentage values, even though they shouldn't\n\n      div.style.right = \"60%\";\n      pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36; // Support: IE 9 - 11 only\n      // Detect misreporting of content dimensions for box-sizing:border-box elements\n\n      boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36; // Support: IE 9 only\n      // Detect overflow:scroll screwiness (gh-3699)\n      // Support: Chrome <=64\n      // Don't get tricked when zoom affects offsetWidth (gh-4029)\n\n      div.style.position = \"absolute\";\n      scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;\n      documentElement.removeChild(container); // Nullify the div so it wouldn't be stored in the memory and\n      // it will also be a sign that checks already performed\n\n      div = null;\n    }\n\n    function roundPixelMeasures(measure) {\n      return Math.round(parseFloat(measure));\n    }\n\n    var pixelPositionVal,\n        boxSizingReliableVal,\n        scrollboxSizeVal,\n        pixelBoxStylesVal,\n        reliableTrDimensionsVal,\n        reliableMarginLeftVal,\n        container = document.createElement(\"div\"),\n        div = document.createElement(\"div\"); // Finish early in limited (non-browser) environments\n\n    if (!div.style) {\n      return;\n    } // Support: IE <=9 - 11 only\n    // Style of cloned element affects source element cloned (#8908)\n\n\n    div.style.backgroundClip = \"content-box\";\n    div.cloneNode(true).style.backgroundClip = \"\";\n    support.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n    jQuery.extend(support, {\n      boxSizingReliable: function () {\n        computeStyleTests();\n        return boxSizingReliableVal;\n      },\n      pixelBoxStyles: function () {\n        computeStyleTests();\n        return pixelBoxStylesVal;\n      },\n      pixelPosition: function () {\n        computeStyleTests();\n        return pixelPositionVal;\n      },\n      reliableMarginLeft: function () {\n        computeStyleTests();\n        return reliableMarginLeftVal;\n      },\n      scrollboxSize: function () {\n        computeStyleTests();\n        return scrollboxSizeVal;\n      },\n      // Support: IE 9 - 11+, Edge 15 - 18+\n      // IE/Edge misreport `getComputedStyle` of table rows with width/height\n      // set in CSS while `offset*` properties report correct values.\n      // Behavior in IE 9 is more subtle than in newer versions & it passes\n      // some versions of this test; make sure not to make it pass there!\n      reliableTrDimensions: function () {\n        var table, tr, trChild, trStyle;\n\n        if (reliableTrDimensionsVal == null) {\n          table = document.createElement(\"table\");\n          tr = document.createElement(\"tr\");\n          trChild = document.createElement(\"div\");\n          table.style.cssText = \"position:absolute;left:-11111px\";\n          tr.style.height = \"1px\";\n          trChild.style.height = \"9px\";\n          documentElement.appendChild(table).appendChild(tr).appendChild(trChild);\n          trStyle = window.getComputedStyle(tr);\n          reliableTrDimensionsVal = parseInt(trStyle.height) > 3;\n          documentElement.removeChild(table);\n        }\n\n        return reliableTrDimensionsVal;\n      }\n    });\n  })();\n\n  function curCSS(elem, name, computed) {\n    var width,\n        minWidth,\n        maxWidth,\n        ret,\n        // Support: Firefox 51+\n    // Retrieving style before computed somehow\n    // fixes an issue with getting wrong values\n    // on detached elements\n    style = elem.style;\n    computed = computed || getStyles(elem); // getPropertyValue is needed for:\n    //   .css('filter') (IE 9 only, #12537)\n    //   .css('--customProperty) (#3144)\n\n    if (computed) {\n      ret = computed.getPropertyValue(name) || computed[name];\n\n      if (ret === \"\" && !isAttached(elem)) {\n        ret = jQuery.style(elem, name);\n      } // A tribute to the \"awesome hack by Dean Edwards\"\n      // Android Browser returns percentage for some values,\n      // but width seems to be reliably pixels.\n      // This is against the CSSOM draft spec:\n      // https://drafts.csswg.org/cssom/#resolved-values\n\n\n      if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {\n        // Remember the original values\n        width = style.width;\n        minWidth = style.minWidth;\n        maxWidth = style.maxWidth; // Put in the new values to get a computed value out\n\n        style.minWidth = style.maxWidth = style.width = ret;\n        ret = computed.width; // Revert the changed values\n\n        style.width = width;\n        style.minWidth = minWidth;\n        style.maxWidth = maxWidth;\n      }\n    }\n\n    return ret !== undefined ? // Support: IE <=9 - 11 only\n    // IE returns zIndex value as an integer.\n    ret + \"\" : ret;\n  }\n\n  function addGetHookIf(conditionFn, hookFn) {\n    // Define the hook, we'll check on the first run if it's really needed.\n    return {\n      get: function () {\n        if (conditionFn()) {\n          // Hook not needed (or it's not possible to use it due\n          // to missing dependency), remove it.\n          delete this.get;\n          return;\n        } // Hook needed; redefine it so that the support test is not executed again.\n\n\n        return (this.get = hookFn).apply(this, arguments);\n      }\n    };\n  }\n\n  var cssPrefixes = [\"Webkit\", \"Moz\", \"ms\"],\n      emptyStyle = document.createElement(\"div\").style,\n      vendorProps = {}; // Return a vendor-prefixed property or undefined\n\n  function vendorPropName(name) {\n    // Check for vendor prefixed names\n    var capName = name[0].toUpperCase() + name.slice(1),\n        i = cssPrefixes.length;\n\n    while (i--) {\n      name = cssPrefixes[i] + capName;\n\n      if (name in emptyStyle) {\n        return name;\n      }\n    }\n  } // Return a potentially-mapped jQuery.cssProps or vendor prefixed property\n\n\n  function finalPropName(name) {\n    var final = jQuery.cssProps[name] || vendorProps[name];\n\n    if (final) {\n      return final;\n    }\n\n    if (name in emptyStyle) {\n      return name;\n    }\n\n    return vendorProps[name] = vendorPropName(name) || name;\n  }\n\n  var // Swappable if display is none or starts with table\n  // except \"table\", \"table-cell\", or \"table-caption\"\n  // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n  rdisplayswap = /^(none|table(?!-c[ea]).+)/,\n      rcustomProp = /^--/,\n      cssShow = {\n    position: \"absolute\",\n    visibility: \"hidden\",\n    display: \"block\"\n  },\n      cssNormalTransform = {\n    letterSpacing: \"0\",\n    fontWeight: \"400\"\n  };\n\n  function setPositiveNumber(_elem, value, subtract) {\n    // Any relative (+/-) values have already been\n    // normalized at this point\n    var matches = rcssNum.exec(value);\n    return matches ? // Guard against undefined \"subtract\", e.g., when used as in cssHooks\n    Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || \"px\") : value;\n  }\n\n  function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {\n    var i = dimension === \"width\" ? 1 : 0,\n        extra = 0,\n        delta = 0; // Adjustment may not be necessary\n\n    if (box === (isBorderBox ? \"border\" : \"content\")) {\n      return 0;\n    }\n\n    for (; i < 4; i += 2) {\n      // Both box models exclude margin\n      if (box === \"margin\") {\n        delta += jQuery.css(elem, box + cssExpand[i], true, styles);\n      } // If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\n\n      if (!isBorderBox) {\n        // Add padding\n        delta += jQuery.css(elem, \"padding\" + cssExpand[i], true, styles); // For \"border\" or \"margin\", add border\n\n        if (box !== \"padding\") {\n          delta += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles); // But still keep track of it otherwise\n        } else {\n          extra += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        } // If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n        // \"padding\" or \"margin\"\n\n      } else {\n        // For \"content\", subtract padding\n        if (box === \"content\") {\n          delta -= jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n        } // For \"content\" or \"padding\", subtract border\n\n\n        if (box !== \"margin\") {\n          delta -= jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        }\n      }\n    } // Account for positive content-box scroll gutter when requested by providing computedVal\n\n\n    if (!isBorderBox && computedVal >= 0) {\n      // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n      // Assuming integer scroll gutter, subtract the rest and round down\n      delta += Math.max(0, Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5 // If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n      // Use an explicit zero to avoid NaN (gh-3964)\n      )) || 0;\n    }\n\n    return delta;\n  }\n\n  function getWidthOrHeight(elem, dimension, extra) {\n    // Start with computed style\n    var styles = getStyles(elem),\n        // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n    // Fake content-box until we know it's needed to know the true value.\n    boxSizingNeeded = !support.boxSizingReliable() || extra,\n        isBorderBox = boxSizingNeeded && jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n        valueIsBorderBox = isBorderBox,\n        val = curCSS(elem, dimension, styles),\n        offsetProp = \"offset\" + dimension[0].toUpperCase() + dimension.slice(1); // Support: Firefox <=54\n    // Return a confounding non-pixel value or feign ignorance, as appropriate.\n\n    if (rnumnonpx.test(val)) {\n      if (!extra) {\n        return val;\n      }\n\n      val = \"auto\";\n    } // Support: IE 9 - 11 only\n    // Use offsetWidth/offsetHeight for when box sizing is unreliable.\n    // In those cases, the computed value can be trusted to be border-box.\n\n\n    if ((!support.boxSizingReliable() && isBorderBox || // Support: IE 10 - 11+, Edge 15 - 18+\n    // IE/Edge misreport `getComputedStyle` of table rows with width/height\n    // set in CSS while `offset*` properties report correct values.\n    // Interestingly, in some cases IE 9 doesn't suffer from this issue.\n    !support.reliableTrDimensions() && nodeName(elem, \"tr\") || // Fall back to offsetWidth/offsetHeight when value is \"auto\"\n    // This happens for inline elements with no explicit setting (gh-3571)\n    val === \"auto\" || // Support: Android <=4.1 - 4.3 only\n    // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n    !parseFloat(val) && jQuery.css(elem, \"display\", false, styles) === \"inline\") && // Make sure the element is visible & connected\n    elem.getClientRects().length) {\n      isBorderBox = jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\"; // Where available, offsetWidth/offsetHeight approximate border box dimensions.\n      // Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n      // retrieved value as a content box dimension.\n\n      valueIsBorderBox = offsetProp in elem;\n\n      if (valueIsBorderBox) {\n        val = elem[offsetProp];\n      }\n    } // Normalize \"\" and auto\n\n\n    val = parseFloat(val) || 0; // Adjust for the element's box model\n\n    return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? \"border\" : \"content\"), valueIsBorderBox, styles, // Provide the current computed size to request scroll gutter calculation (gh-3589)\n    val) + \"px\";\n  }\n\n  jQuery.extend({\n    // Add in style property hooks for overriding the default\n    // behavior of getting and setting a style property\n    cssHooks: {\n      opacity: {\n        get: function (elem, computed) {\n          if (computed) {\n            // We should always get a number back from opacity\n            var ret = curCSS(elem, \"opacity\");\n            return ret === \"\" ? \"1\" : ret;\n          }\n        }\n      }\n    },\n    // Don't automatically add \"px\" to these possibly-unitless properties\n    cssNumber: {\n      \"animationIterationCount\": true,\n      \"columnCount\": true,\n      \"fillOpacity\": true,\n      \"flexGrow\": true,\n      \"flexShrink\": true,\n      \"fontWeight\": true,\n      \"gridArea\": true,\n      \"gridColumn\": true,\n      \"gridColumnEnd\": true,\n      \"gridColumnStart\": true,\n      \"gridRow\": true,\n      \"gridRowEnd\": true,\n      \"gridRowStart\": true,\n      \"lineHeight\": true,\n      \"opacity\": true,\n      \"order\": true,\n      \"orphans\": true,\n      \"widows\": true,\n      \"zIndex\": true,\n      \"zoom\": true\n    },\n    // Add in properties whose names you wish to fix before\n    // setting or getting the value\n    cssProps: {},\n    // Get and set the style property on a DOM Node\n    style: function (elem, name, value, extra) {\n      // Don't set styles on text and comment nodes\n      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n        return;\n      } // Make sure that we're working with the right name\n\n\n      var ret,\n          type,\n          hooks,\n          origName = camelCase(name),\n          isCustomProp = rcustomProp.test(name),\n          style = elem.style; // Make sure that we're working with the right name. We don't\n      // want to query the value if it is a CSS custom property\n      // since they are user-defined.\n\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      } // Gets hook for the prefixed version, then unprefixed version\n\n\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // Check if we're setting a value\n\n      if (value !== undefined) {\n        type = typeof value; // Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\n        if (type === \"string\" && (ret = rcssNum.exec(value)) && ret[1]) {\n          value = adjustCSS(elem, name, ret); // Fixes bug #9237\n\n          type = \"number\";\n        } // Make sure that null and NaN values aren't set (#7116)\n\n\n        if (value == null || value !== value) {\n          return;\n        } // If a number was passed in, add the unit (except for certain CSS properties)\n        // The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n        // \"px\" to a few hardcoded values.\n\n\n        if (type === \"number\" && !isCustomProp) {\n          value += ret && ret[3] || (jQuery.cssNumber[origName] ? \"\" : \"px\");\n        } // background-* props affect original clone's values\n\n\n        if (!support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0) {\n          style[name] = \"inherit\";\n        } // If a hook was provided, use that value, otherwise just set the specified value\n\n\n        if (!hooks || !(\"set\" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n          if (isCustomProp) {\n            style.setProperty(name, value);\n          } else {\n            style[name] = value;\n          }\n        }\n      } else {\n        // If a hook was provided get the non-computed value from there\n        if (hooks && \"get\" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n          return ret;\n        } // Otherwise just get the value from the style object\n\n\n        return style[name];\n      }\n    },\n    css: function (elem, name, extra, styles) {\n      var val,\n          num,\n          hooks,\n          origName = camelCase(name),\n          isCustomProp = rcustomProp.test(name); // Make sure that we're working with the right name. We don't\n      // want to modify the value if it is a CSS custom property\n      // since they are user-defined.\n\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      } // Try prefixed name followed by the unprefixed name\n\n\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // If a hook was provided get the computed value from there\n\n      if (hooks && \"get\" in hooks) {\n        val = hooks.get(elem, true, extra);\n      } // Otherwise, if a way to get the computed value exists, use that\n\n\n      if (val === undefined) {\n        val = curCSS(elem, name, styles);\n      } // Convert \"normal\" to computed value\n\n\n      if (val === \"normal\" && name in cssNormalTransform) {\n        val = cssNormalTransform[name];\n      } // Make numeric if forced or a qualifier was provided and val looks numeric\n\n\n      if (extra === \"\" || extra) {\n        num = parseFloat(val);\n        return extra === true || isFinite(num) ? num || 0 : val;\n      }\n\n      return val;\n    }\n  });\n  jQuery.each([\"height\", \"width\"], function (_i, dimension) {\n    jQuery.cssHooks[dimension] = {\n      get: function (elem, computed, extra) {\n        if (computed) {\n          // Certain elements can have dimension info if we invisibly show them\n          // but it must have a current display style that would benefit\n          return rdisplayswap.test(jQuery.css(elem, \"display\")) && ( // Support: Safari 8+\n          // Table columns in Safari have non-zero offsetWidth & zero\n          // getBoundingClientRect().width unless display is changed.\n          // Support: IE <=11 only\n          // Running getBoundingClientRect on a disconnected node\n          // in IE throws an error.\n          !elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {\n            return getWidthOrHeight(elem, dimension, extra);\n          }) : getWidthOrHeight(elem, dimension, extra);\n        }\n      },\n      set: function (elem, value, extra) {\n        var matches,\n            styles = getStyles(elem),\n            // Only read styles.position if the test has a chance to fail\n        // to avoid forcing a reflow.\n        scrollboxSizeBuggy = !support.scrollboxSize() && styles.position === \"absolute\",\n            // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n        boxSizingNeeded = scrollboxSizeBuggy || extra,\n            isBorderBox = boxSizingNeeded && jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n            subtract = extra ? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles) : 0; // Account for unreliable border-box dimensions by comparing offset* to computed and\n        // faking a content-box to get border and padding (gh-3699)\n\n        if (isBorderBox && scrollboxSizeBuggy) {\n          subtract -= Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, \"border\", false, styles) - 0.5);\n        } // Convert to pixels if value adjustment is needed\n\n\n        if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || \"px\") !== \"px\") {\n          elem.style[dimension] = value;\n          value = jQuery.css(elem, dimension);\n        }\n\n        return setPositiveNumber(elem, value, subtract);\n      }\n    };\n  });\n  jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {\n    if (computed) {\n      return (parseFloat(curCSS(elem, \"marginLeft\")) || elem.getBoundingClientRect().left - swap(elem, {\n        marginLeft: 0\n      }, function () {\n        return elem.getBoundingClientRect().left;\n      })) + \"px\";\n    }\n  }); // These hooks are used by animate to expand properties\n\n  jQuery.each({\n    margin: \"\",\n    padding: \"\",\n    border: \"Width\"\n  }, function (prefix, suffix) {\n    jQuery.cssHooks[prefix + suffix] = {\n      expand: function (value) {\n        var i = 0,\n            expanded = {},\n            // Assumes a single number if not a string\n        parts = typeof value === \"string\" ? value.split(\" \") : [value];\n\n        for (; i < 4; i++) {\n          expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n        }\n\n        return expanded;\n      }\n    };\n\n    if (prefix !== \"margin\") {\n      jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n    }\n  });\n  jQuery.fn.extend({\n    css: function (name, value) {\n      return access(this, function (elem, name, value) {\n        var styles,\n            len,\n            map = {},\n            i = 0;\n\n        if (Array.isArray(name)) {\n          styles = getStyles(elem);\n          len = name.length;\n\n          for (; i < len; i++) {\n            map[name[i]] = jQuery.css(elem, name[i], false, styles);\n          }\n\n          return map;\n        }\n\n        return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n      }, name, value, arguments.length > 1);\n    }\n  });\n\n  function Tween(elem, options, prop, end, easing) {\n    return new Tween.prototype.init(elem, options, prop, end, easing);\n  }\n\n  jQuery.Tween = Tween;\n  Tween.prototype = {\n    constructor: Tween,\n    init: function (elem, options, prop, end, easing, unit) {\n      this.elem = elem;\n      this.prop = prop;\n      this.easing = easing || jQuery.easing._default;\n      this.options = options;\n      this.start = this.now = this.cur();\n      this.end = end;\n      this.unit = unit || (jQuery.cssNumber[prop] ? \"\" : \"px\");\n    },\n    cur: function () {\n      var hooks = Tween.propHooks[this.prop];\n      return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n    },\n    run: function (percent) {\n      var eased,\n          hooks = Tween.propHooks[this.prop];\n\n      if (this.options.duration) {\n        this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n      } else {\n        this.pos = eased = percent;\n      }\n\n      this.now = (this.end - this.start) * eased + this.start;\n\n      if (this.options.step) {\n        this.options.step.call(this.elem, this.now, this);\n      }\n\n      if (hooks && hooks.set) {\n        hooks.set(this);\n      } else {\n        Tween.propHooks._default.set(this);\n      }\n\n      return this;\n    }\n  };\n  Tween.prototype.init.prototype = Tween.prototype;\n  Tween.propHooks = {\n    _default: {\n      get: function (tween) {\n        var result; // Use a property on the element directly when it is not a DOM element,\n        // or when there is no matching style property that exists.\n\n        if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {\n          return tween.elem[tween.prop];\n        } // Passing an empty string as a 3rd parameter to .css will automatically\n        // attempt a parseFloat and fallback to a string if the parse fails.\n        // Simple values such as \"10px\" are parsed to Float;\n        // complex values such as \"rotate(1rad)\" are returned as-is.\n\n\n        result = jQuery.css(tween.elem, tween.prop, \"\"); // Empty strings, null, undefined and \"auto\" are converted to 0.\n\n        return !result || result === \"auto\" ? 0 : result;\n      },\n      set: function (tween) {\n        // Use step hook for back compat.\n        // Use cssHook if its there.\n        // Use .style if available and use plain properties where available.\n        if (jQuery.fx.step[tween.prop]) {\n          jQuery.fx.step[tween.prop](tween);\n        } else if (tween.elem.nodeType === 1 && (jQuery.cssHooks[tween.prop] || tween.elem.style[finalPropName(tween.prop)] != null)) {\n          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n        } else {\n          tween.elem[tween.prop] = tween.now;\n        }\n      }\n    }\n  }; // Support: IE <=9 only\n  // Panic based approach to setting things on disconnected nodes\n\n  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n    set: function (tween) {\n      if (tween.elem.nodeType && tween.elem.parentNode) {\n        tween.elem[tween.prop] = tween.now;\n      }\n    }\n  };\n  jQuery.easing = {\n    linear: function (p) {\n      return p;\n    },\n    swing: function (p) {\n      return 0.5 - Math.cos(p * Math.PI) / 2;\n    },\n    _default: \"swing\"\n  };\n  jQuery.fx = Tween.prototype.init; // Back compat <1.8 extension point\n\n  jQuery.fx.step = {};\n  var fxNow,\n      inProgress,\n      rfxtypes = /^(?:toggle|show|hide)$/,\n      rrun = /queueHooks$/;\n\n  function schedule() {\n    if (inProgress) {\n      if (document.hidden === false && window.requestAnimationFrame) {\n        window.requestAnimationFrame(schedule);\n      } else {\n        window.setTimeout(schedule, jQuery.fx.interval);\n      }\n\n      jQuery.fx.tick();\n    }\n  } // Animations created synchronously will run synchronously\n\n\n  function createFxNow() {\n    window.setTimeout(function () {\n      fxNow = undefined;\n    });\n    return fxNow = Date.now();\n  } // Generate parameters to create a standard animation\n\n\n  function genFx(type, includeWidth) {\n    var which,\n        i = 0,\n        attrs = {\n      height: type\n    }; // If we include width, step value is 1 to do all cssExpand values,\n    // otherwise step value is 2 to skip over Left and Right\n\n    includeWidth = includeWidth ? 1 : 0;\n\n    for (; i < 4; i += 2 - includeWidth) {\n      which = cssExpand[i];\n      attrs[\"margin\" + which] = attrs[\"padding\" + which] = type;\n    }\n\n    if (includeWidth) {\n      attrs.opacity = attrs.width = type;\n    }\n\n    return attrs;\n  }\n\n  function createTween(value, prop, animation) {\n    var tween,\n        collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners[\"*\"]),\n        index = 0,\n        length = collection.length;\n\n    for (; index < length; index++) {\n      if (tween = collection[index].call(animation, prop, value)) {\n        // We're done with this property\n        return tween;\n      }\n    }\n  }\n\n  function defaultPrefilter(elem, props, opts) {\n    var prop,\n        value,\n        toggle,\n        hooks,\n        oldfire,\n        propTween,\n        restoreDisplay,\n        display,\n        isBox = \"width\" in props || \"height\" in props,\n        anim = this,\n        orig = {},\n        style = elem.style,\n        hidden = elem.nodeType && isHiddenWithinTree(elem),\n        dataShow = dataPriv.get(elem, \"fxshow\"); // Queue-skipping animations hijack the fx hooks\n\n    if (!opts.queue) {\n      hooks = jQuery._queueHooks(elem, \"fx\");\n\n      if (hooks.unqueued == null) {\n        hooks.unqueued = 0;\n        oldfire = hooks.empty.fire;\n\n        hooks.empty.fire = function () {\n          if (!hooks.unqueued) {\n            oldfire();\n          }\n        };\n      }\n\n      hooks.unqueued++;\n      anim.always(function () {\n        // Ensure the complete handler is called before this completes\n        anim.always(function () {\n          hooks.unqueued--;\n\n          if (!jQuery.queue(elem, \"fx\").length) {\n            hooks.empty.fire();\n          }\n        });\n      });\n    } // Detect show/hide animations\n\n\n    for (prop in props) {\n      value = props[prop];\n\n      if (rfxtypes.test(value)) {\n        delete props[prop];\n        toggle = toggle || value === \"toggle\";\n\n        if (value === (hidden ? \"hide\" : \"show\")) {\n          // Pretend to be hidden if this is a \"show\" and\n          // there is still data from a stopped show/hide\n          if (value === \"show\" && dataShow && dataShow[prop] !== undefined) {\n            hidden = true; // Ignore all other no-op show/hide data\n          } else {\n            continue;\n          }\n        }\n\n        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\n      }\n    } // Bail out if this is a no-op like .hide().hide()\n\n\n    propTween = !jQuery.isEmptyObject(props);\n\n    if (!propTween && jQuery.isEmptyObject(orig)) {\n      return;\n    } // Restrict \"overflow\" and \"display\" styles during box animations\n\n\n    if (isBox && elem.nodeType === 1) {\n      // Support: IE <=9 - 11, Edge 12 - 15\n      // Record all 3 overflow attributes because IE does not infer the shorthand\n      // from identically-valued overflowX and overflowY and Edge just mirrors\n      // the overflowX value there.\n      opts.overflow = [style.overflow, style.overflowX, style.overflowY]; // Identify a display type, preferring old show/hide data over the CSS cascade\n\n      restoreDisplay = dataShow && dataShow.display;\n\n      if (restoreDisplay == null) {\n        restoreDisplay = dataPriv.get(elem, \"display\");\n      }\n\n      display = jQuery.css(elem, \"display\");\n\n      if (display === \"none\") {\n        if (restoreDisplay) {\n          display = restoreDisplay;\n        } else {\n          // Get nonempty value(s) by temporarily forcing visibility\n          showHide([elem], true);\n          restoreDisplay = elem.style.display || restoreDisplay;\n          display = jQuery.css(elem, \"display\");\n          showHide([elem]);\n        }\n      } // Animate inline elements as inline-block\n\n\n      if (display === \"inline\" || display === \"inline-block\" && restoreDisplay != null) {\n        if (jQuery.css(elem, \"float\") === \"none\") {\n          // Restore the original display value at the end of pure show/hide animations\n          if (!propTween) {\n            anim.done(function () {\n              style.display = restoreDisplay;\n            });\n\n            if (restoreDisplay == null) {\n              display = style.display;\n              restoreDisplay = display === \"none\" ? \"\" : display;\n            }\n          }\n\n          style.display = \"inline-block\";\n        }\n      }\n    }\n\n    if (opts.overflow) {\n      style.overflow = \"hidden\";\n      anim.always(function () {\n        style.overflow = opts.overflow[0];\n        style.overflowX = opts.overflow[1];\n        style.overflowY = opts.overflow[2];\n      });\n    } // Implement show/hide animations\n\n\n    propTween = false;\n\n    for (prop in orig) {\n      // General show/hide setup for this element animation\n      if (!propTween) {\n        if (dataShow) {\n          if (\"hidden\" in dataShow) {\n            hidden = dataShow.hidden;\n          }\n        } else {\n          dataShow = dataPriv.access(elem, \"fxshow\", {\n            display: restoreDisplay\n          });\n        } // Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\n\n        if (toggle) {\n          dataShow.hidden = !hidden;\n        } // Show elements before animating them\n\n\n        if (hidden) {\n          showHide([elem], true);\n        }\n        /* eslint-disable no-loop-func */\n\n\n        anim.done(function () {\n          /* eslint-enable no-loop-func */\n          // The final step of a \"hide\" animation is actually hiding the element\n          if (!hidden) {\n            showHide([elem]);\n          }\n\n          dataPriv.remove(elem, \"fxshow\");\n\n          for (prop in orig) {\n            jQuery.style(elem, prop, orig[prop]);\n          }\n        });\n      } // Per-property setup\n\n\n      propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n\n      if (!(prop in dataShow)) {\n        dataShow[prop] = propTween.start;\n\n        if (hidden) {\n          propTween.end = propTween.start;\n          propTween.start = 0;\n        }\n      }\n    }\n  }\n\n  function propFilter(props, specialEasing) {\n    var index, name, easing, value, hooks; // camelCase, specialEasing and expand cssHook pass\n\n    for (index in props) {\n      name = camelCase(index);\n      easing = specialEasing[name];\n      value = props[index];\n\n      if (Array.isArray(value)) {\n        easing = value[1];\n        value = props[index] = value[0];\n      }\n\n      if (index !== name) {\n        props[name] = value;\n        delete props[index];\n      }\n\n      hooks = jQuery.cssHooks[name];\n\n      if (hooks && \"expand\" in hooks) {\n        value = hooks.expand(value);\n        delete props[name]; // Not quite $.extend, this won't overwrite existing keys.\n        // Reusing 'index' because we have the correct \"name\"\n\n        for (index in value) {\n          if (!(index in props)) {\n            props[index] = value[index];\n            specialEasing[index] = easing;\n          }\n        }\n      } else {\n        specialEasing[name] = easing;\n      }\n    }\n  }\n\n  function Animation(elem, properties, options) {\n    var result,\n        stopped,\n        index = 0,\n        length = Animation.prefilters.length,\n        deferred = jQuery.Deferred().always(function () {\n      // Don't match elem in the :animated selector\n      delete tick.elem;\n    }),\n        tick = function () {\n      if (stopped) {\n        return false;\n      }\n\n      var currentTime = fxNow || createFxNow(),\n          remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n          // Support: Android 2.3 only\n      // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n      temp = remaining / animation.duration || 0,\n          percent = 1 - temp,\n          index = 0,\n          length = animation.tweens.length;\n\n      for (; index < length; index++) {\n        animation.tweens[index].run(percent);\n      }\n\n      deferred.notifyWith(elem, [animation, percent, remaining]); // If there's more to do, yield\n\n      if (percent < 1 && length) {\n        return remaining;\n      } // If this was an empty animation, synthesize a final progress notification\n\n\n      if (!length) {\n        deferred.notifyWith(elem, [animation, 1, 0]);\n      } // Resolve the animation and report its conclusion\n\n\n      deferred.resolveWith(elem, [animation]);\n      return false;\n    },\n        animation = deferred.promise({\n      elem: elem,\n      props: jQuery.extend({}, properties),\n      opts: jQuery.extend(true, {\n        specialEasing: {},\n        easing: jQuery.easing._default\n      }, options),\n      originalProperties: properties,\n      originalOptions: options,\n      startTime: fxNow || createFxNow(),\n      duration: options.duration,\n      tweens: [],\n      createTween: function (prop, end) {\n        var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n        animation.tweens.push(tween);\n        return tween;\n      },\n      stop: function (gotoEnd) {\n        var index = 0,\n            // If we are going to the end, we want to run all the tweens\n        // otherwise we skip this part\n        length = gotoEnd ? animation.tweens.length : 0;\n\n        if (stopped) {\n          return this;\n        }\n\n        stopped = true;\n\n        for (; index < length; index++) {\n          animation.tweens[index].run(1);\n        } // Resolve when we played the last frame; otherwise, reject\n\n\n        if (gotoEnd) {\n          deferred.notifyWith(elem, [animation, 1, 0]);\n          deferred.resolveWith(elem, [animation, gotoEnd]);\n        } else {\n          deferred.rejectWith(elem, [animation, gotoEnd]);\n        }\n\n        return this;\n      }\n    }),\n        props = animation.props;\n\n    propFilter(props, animation.opts.specialEasing);\n\n    for (; index < length; index++) {\n      result = Animation.prefilters[index].call(animation, elem, props, animation.opts);\n\n      if (result) {\n        if (isFunction(result.stop)) {\n          jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);\n        }\n\n        return result;\n      }\n    }\n\n    jQuery.map(props, createTween, animation);\n\n    if (isFunction(animation.opts.start)) {\n      animation.opts.start.call(elem, animation);\n    } // Attach callbacks from options\n\n\n    animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n    jQuery.fx.timer(jQuery.extend(tick, {\n      elem: elem,\n      anim: animation,\n      queue: animation.opts.queue\n    }));\n    return animation;\n  }\n\n  jQuery.Animation = jQuery.extend(Animation, {\n    tweeners: {\n      \"*\": [function (prop, value) {\n        var tween = this.createTween(prop, value);\n        adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);\n        return tween;\n      }]\n    },\n    tweener: function (props, callback) {\n      if (isFunction(props)) {\n        callback = props;\n        props = [\"*\"];\n      } else {\n        props = props.match(rnothtmlwhite);\n      }\n\n      var prop,\n          index = 0,\n          length = props.length;\n\n      for (; index < length; index++) {\n        prop = props[index];\n        Animation.tweeners[prop] = Animation.tweeners[prop] || [];\n        Animation.tweeners[prop].unshift(callback);\n      }\n    },\n    prefilters: [defaultPrefilter],\n    prefilter: function (callback, prepend) {\n      if (prepend) {\n        Animation.prefilters.unshift(callback);\n      } else {\n        Animation.prefilters.push(callback);\n      }\n    }\n  });\n\n  jQuery.speed = function (speed, easing, fn) {\n    var opt = speed && typeof speed === \"object\" ? jQuery.extend({}, speed) : {\n      complete: fn || !fn && easing || isFunction(speed) && speed,\n      duration: speed,\n      easing: fn && easing || easing && !isFunction(easing) && easing\n    }; // Go to the end state if fx are off\n\n    if (jQuery.fx.off) {\n      opt.duration = 0;\n    } else {\n      if (typeof opt.duration !== \"number\") {\n        if (opt.duration in jQuery.fx.speeds) {\n          opt.duration = jQuery.fx.speeds[opt.duration];\n        } else {\n          opt.duration = jQuery.fx.speeds._default;\n        }\n      }\n    } // Normalize opt.queue - true/undefined/null -> \"fx\"\n\n\n    if (opt.queue == null || opt.queue === true) {\n      opt.queue = \"fx\";\n    } // Queueing\n\n\n    opt.old = opt.complete;\n\n    opt.complete = function () {\n      if (isFunction(opt.old)) {\n        opt.old.call(this);\n      }\n\n      if (opt.queue) {\n        jQuery.dequeue(this, opt.queue);\n      }\n    };\n\n    return opt;\n  };\n\n  jQuery.fn.extend({\n    fadeTo: function (speed, to, easing, callback) {\n      // Show any hidden elements after setting opacity to 0\n      return this.filter(isHiddenWithinTree).css(\"opacity\", 0).show() // Animate to the value specified\n      .end().animate({\n        opacity: to\n      }, speed, easing, callback);\n    },\n    animate: function (prop, speed, easing, callback) {\n      var empty = jQuery.isEmptyObject(prop),\n          optall = jQuery.speed(speed, easing, callback),\n          doAnimation = function () {\n        // Operate on a copy of prop so per-property easing won't be lost\n        var anim = Animation(this, jQuery.extend({}, prop), optall); // Empty animations, or finishing resolves immediately\n\n        if (empty || dataPriv.get(this, \"finish\")) {\n          anim.stop(true);\n        }\n      };\n\n      doAnimation.finish = doAnimation;\n      return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n    },\n    stop: function (type, clearQueue, gotoEnd) {\n      var stopQueue = function (hooks) {\n        var stop = hooks.stop;\n        delete hooks.stop;\n        stop(gotoEnd);\n      };\n\n      if (typeof type !== \"string\") {\n        gotoEnd = clearQueue;\n        clearQueue = type;\n        type = undefined;\n      }\n\n      if (clearQueue) {\n        this.queue(type || \"fx\", []);\n      }\n\n      return this.each(function () {\n        var dequeue = true,\n            index = type != null && type + \"queueHooks\",\n            timers = jQuery.timers,\n            data = dataPriv.get(this);\n\n        if (index) {\n          if (data[index] && data[index].stop) {\n            stopQueue(data[index]);\n          }\n        } else {\n          for (index in data) {\n            if (data[index] && data[index].stop && rrun.test(index)) {\n              stopQueue(data[index]);\n            }\n          }\n        }\n\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n            timers[index].anim.stop(gotoEnd);\n            dequeue = false;\n            timers.splice(index, 1);\n          }\n        } // Start the next in the queue if the last step wasn't forced.\n        // Timers currently will call their complete callbacks, which\n        // will dequeue but only if they were gotoEnd.\n\n\n        if (dequeue || !gotoEnd) {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    finish: function (type) {\n      if (type !== false) {\n        type = type || \"fx\";\n      }\n\n      return this.each(function () {\n        var index,\n            data = dataPriv.get(this),\n            queue = data[type + \"queue\"],\n            hooks = data[type + \"queueHooks\"],\n            timers = jQuery.timers,\n            length = queue ? queue.length : 0; // Enable finishing flag on private data\n\n        data.finish = true; // Empty the queue first\n\n        jQuery.queue(this, type, []);\n\n        if (hooks && hooks.stop) {\n          hooks.stop.call(this, true);\n        } // Look for any active animations, and finish them\n\n\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && timers[index].queue === type) {\n            timers[index].anim.stop(true);\n            timers.splice(index, 1);\n          }\n        } // Look for any animations in the old queue and finish them\n\n\n        for (index = 0; index < length; index++) {\n          if (queue[index] && queue[index].finish) {\n            queue[index].finish.call(this);\n          }\n        } // Turn off finishing flag\n\n\n        delete data.finish;\n      });\n    }\n  });\n  jQuery.each([\"toggle\", \"show\", \"hide\"], function (_i, name) {\n    var cssFn = jQuery.fn[name];\n\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return speed == null || typeof speed === \"boolean\" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n    };\n  }); // Generate shortcuts for custom animations\n\n  jQuery.each({\n    slideDown: genFx(\"show\"),\n    slideUp: genFx(\"hide\"),\n    slideToggle: genFx(\"toggle\"),\n    fadeIn: {\n      opacity: \"show\"\n    },\n    fadeOut: {\n      opacity: \"hide\"\n    },\n    fadeToggle: {\n      opacity: \"toggle\"\n    }\n  }, function (name, props) {\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return this.animate(props, speed, easing, callback);\n    };\n  });\n  jQuery.timers = [];\n\n  jQuery.fx.tick = function () {\n    var timer,\n        i = 0,\n        timers = jQuery.timers;\n    fxNow = Date.now();\n\n    for (; i < timers.length; i++) {\n      timer = timers[i]; // Run the timer and safely remove it when done (allowing for external removal)\n\n      if (!timer() && timers[i] === timer) {\n        timers.splice(i--, 1);\n      }\n    }\n\n    if (!timers.length) {\n      jQuery.fx.stop();\n    }\n\n    fxNow = undefined;\n  };\n\n  jQuery.fx.timer = function (timer) {\n    jQuery.timers.push(timer);\n    jQuery.fx.start();\n  };\n\n  jQuery.fx.interval = 13;\n\n  jQuery.fx.start = function () {\n    if (inProgress) {\n      return;\n    }\n\n    inProgress = true;\n    schedule();\n  };\n\n  jQuery.fx.stop = function () {\n    inProgress = null;\n  };\n\n  jQuery.fx.speeds = {\n    slow: 600,\n    fast: 200,\n    // Default speed\n    _default: 400\n  }; // Based off of the plugin by Clint Helfers, with permission.\n  // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\n\n  jQuery.fn.delay = function (time, type) {\n    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n    type = type || \"fx\";\n    return this.queue(type, function (next, hooks) {\n      var timeout = window.setTimeout(next, time);\n\n      hooks.stop = function () {\n        window.clearTimeout(timeout);\n      };\n    });\n  };\n\n  (function () {\n    var input = document.createElement(\"input\"),\n        select = document.createElement(\"select\"),\n        opt = select.appendChild(document.createElement(\"option\"));\n    input.type = \"checkbox\"; // Support: Android <=4.3 only\n    // Default value for a checkbox should be \"on\"\n\n    support.checkOn = input.value !== \"\"; // Support: IE <=11 only\n    // Must access selectedIndex to make default options select\n\n    support.optSelected = opt.selected; // Support: IE <=11 only\n    // An input loses its value after becoming a radio\n\n    input = document.createElement(\"input\");\n    input.value = \"t\";\n    input.type = \"radio\";\n    support.radioValue = input.value === \"t\";\n  })();\n\n  var boolHook,\n      attrHandle = jQuery.expr.attrHandle;\n  jQuery.fn.extend({\n    attr: function (name, value) {\n      return access(this, jQuery.attr, name, value, arguments.length > 1);\n    },\n    removeAttr: function (name) {\n      return this.each(function () {\n        jQuery.removeAttr(this, name);\n      });\n    }\n  });\n  jQuery.extend({\n    attr: function (elem, name, value) {\n      var ret,\n          hooks,\n          nType = elem.nodeType; // Don't get/set attributes on text, comment and attribute nodes\n\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      } // Fallback to prop when attributes are not supported\n\n\n      if (typeof elem.getAttribute === \"undefined\") {\n        return jQuery.prop(elem, name, value);\n      } // Attribute hooks are determined by the lowercase version\n      // Grab necessary hook if one is defined\n\n\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);\n      }\n\n      if (value !== undefined) {\n        if (value === null) {\n          jQuery.removeAttr(elem, name);\n          return;\n        }\n\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n\n        elem.setAttribute(name, value + \"\");\n        return value;\n      }\n\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n\n      ret = jQuery.find.attr(elem, name); // Non-existent attributes return null, we normalize to undefined\n\n      return ret == null ? undefined : ret;\n    },\n    attrHooks: {\n      type: {\n        set: function (elem, value) {\n          if (!support.radioValue && value === \"radio\" && nodeName(elem, \"input\")) {\n            var val = elem.value;\n            elem.setAttribute(\"type\", value);\n\n            if (val) {\n              elem.value = val;\n            }\n\n            return value;\n          }\n        }\n      }\n    },\n    removeAttr: function (elem, value) {\n      var name,\n          i = 0,\n          // Attribute names can contain non-HTML whitespace characters\n      // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n      attrNames = value && value.match(rnothtmlwhite);\n\n      if (attrNames && elem.nodeType === 1) {\n        while (name = attrNames[i++]) {\n          elem.removeAttribute(name);\n        }\n      }\n    }\n  }); // Hooks for boolean attributes\n\n  boolHook = {\n    set: function (elem, value, name) {\n      if (value === false) {\n        // Remove boolean attributes when set to false\n        jQuery.removeAttr(elem, name);\n      } else {\n        elem.setAttribute(name, name);\n      }\n\n      return name;\n    }\n  };\n  jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function (_i, name) {\n    var getter = attrHandle[name] || jQuery.find.attr;\n\n    attrHandle[name] = function (elem, name, isXML) {\n      var ret,\n          handle,\n          lowercaseName = name.toLowerCase();\n\n      if (!isXML) {\n        // Avoid an infinite loop by temporarily removing this function from the getter\n        handle = attrHandle[lowercaseName];\n        attrHandle[lowercaseName] = ret;\n        ret = getter(elem, name, isXML) != null ? lowercaseName : null;\n        attrHandle[lowercaseName] = handle;\n      }\n\n      return ret;\n    };\n  });\n  var rfocusable = /^(?:input|select|textarea|button)$/i,\n      rclickable = /^(?:a|area)$/i;\n  jQuery.fn.extend({\n    prop: function (name, value) {\n      return access(this, jQuery.prop, name, value, arguments.length > 1);\n    },\n    removeProp: function (name) {\n      return this.each(function () {\n        delete this[jQuery.propFix[name] || name];\n      });\n    }\n  });\n  jQuery.extend({\n    prop: function (elem, name, value) {\n      var ret,\n          hooks,\n          nType = elem.nodeType; // Don't get/set properties on text, comment and attribute nodes\n\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      }\n\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        // Fix name and attach hooks\n        name = jQuery.propFix[name] || name;\n        hooks = jQuery.propHooks[name];\n      }\n\n      if (value !== undefined) {\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n\n        return elem[name] = value;\n      }\n\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n\n      return elem[name];\n    },\n    propHooks: {\n      tabIndex: {\n        get: function (elem) {\n          // Support: IE <=9 - 11 only\n          // elem.tabIndex doesn't always return the\n          // correct value when it hasn't been explicitly set\n          // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n          // Use proper attribute retrieval(#12072)\n          var tabindex = jQuery.find.attr(elem, \"tabindex\");\n\n          if (tabindex) {\n            return parseInt(tabindex, 10);\n          }\n\n          if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {\n            return 0;\n          }\n\n          return -1;\n        }\n      }\n    },\n    propFix: {\n      \"for\": \"htmlFor\",\n      \"class\": \"className\"\n    }\n  }); // Support: IE <=11 only\n  // Accessing the selectedIndex property\n  // forces the browser to respect setting selected\n  // on the option\n  // The getter ensures a default option is selected\n  // when in an optgroup\n  // eslint rule \"no-unused-expressions\" is disabled for this code\n  // since it considers such accessions noop\n\n  if (!support.optSelected) {\n    jQuery.propHooks.selected = {\n      get: function (elem) {\n        /* eslint no-unused-expressions: \"off\" */\n        var parent = elem.parentNode;\n\n        if (parent && parent.parentNode) {\n          parent.parentNode.selectedIndex;\n        }\n\n        return null;\n      },\n      set: function (elem) {\n        /* eslint no-unused-expressions: \"off\" */\n        var parent = elem.parentNode;\n\n        if (parent) {\n          parent.selectedIndex;\n\n          if (parent.parentNode) {\n            parent.parentNode.selectedIndex;\n          }\n        }\n      }\n    };\n  }\n\n  jQuery.each([\"tabIndex\", \"readOnly\", \"maxLength\", \"cellSpacing\", \"cellPadding\", \"rowSpan\", \"colSpan\", \"useMap\", \"frameBorder\", \"contentEditable\"], function () {\n    jQuery.propFix[this.toLowerCase()] = this;\n  }); // Strip and collapse whitespace according to HTML spec\n  // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\n  function stripAndCollapse(value) {\n    var tokens = value.match(rnothtmlwhite) || [];\n    return tokens.join(\" \");\n  }\n\n  function getClass(elem) {\n    return elem.getAttribute && elem.getAttribute(\"class\") || \"\";\n  }\n\n  function classesToArray(value) {\n    if (Array.isArray(value)) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      return value.match(rnothtmlwhite) || [];\n    }\n\n    return [];\n  }\n\n  jQuery.fn.extend({\n    addClass: function (value) {\n      var classes,\n          elem,\n          cur,\n          curValue,\n          clazz,\n          j,\n          finalValue,\n          i = 0;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).addClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      classes = classesToArray(value);\n\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem);\n          cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n\n          if (cur) {\n            j = 0;\n\n            while (clazz = classes[j++]) {\n              if (cur.indexOf(\" \" + clazz + \" \") < 0) {\n                cur += clazz + \" \";\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              elem.setAttribute(\"class\", finalValue);\n            }\n          }\n        }\n      }\n\n      return this;\n    },\n    removeClass: function (value) {\n      var classes,\n          elem,\n          cur,\n          curValue,\n          clazz,\n          j,\n          finalValue,\n          i = 0;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).removeClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      if (!arguments.length) {\n        return this.attr(\"class\", \"\");\n      }\n\n      classes = classesToArray(value);\n\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem); // This expression is here for better compressibility (see addClass)\n\n          cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n\n          if (cur) {\n            j = 0;\n\n            while (clazz = classes[j++]) {\n              // Remove *all* instances\n              while (cur.indexOf(\" \" + clazz + \" \") > -1) {\n                cur = cur.replace(\" \" + clazz + \" \", \" \");\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              elem.setAttribute(\"class\", finalValue);\n            }\n          }\n        }\n      }\n\n      return this;\n    },\n    toggleClass: function (value, stateVal) {\n      var type = typeof value,\n          isValidValue = type === \"string\" || Array.isArray(value);\n\n      if (typeof stateVal === \"boolean\" && isValidValue) {\n        return stateVal ? this.addClass(value) : this.removeClass(value);\n      }\n\n      if (isFunction(value)) {\n        return this.each(function (i) {\n          jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);\n        });\n      }\n\n      return this.each(function () {\n        var className, i, self, classNames;\n\n        if (isValidValue) {\n          // Toggle individual class names\n          i = 0;\n          self = jQuery(this);\n          classNames = classesToArray(value);\n\n          while (className = classNames[i++]) {\n            // Check each className given, space separated list\n            if (self.hasClass(className)) {\n              self.removeClass(className);\n            } else {\n              self.addClass(className);\n            }\n          } // Toggle whole class name\n\n        } else if (value === undefined || type === \"boolean\") {\n          className = getClass(this);\n\n          if (className) {\n            // Store className if set\n            dataPriv.set(this, \"__className__\", className);\n          } // If the element has a class name or if we're passed `false`,\n          // then remove the whole classname (if there was one, the above saved it).\n          // Otherwise bring back whatever was previously saved (if anything),\n          // falling back to the empty string if nothing was stored.\n\n\n          if (this.setAttribute) {\n            this.setAttribute(\"class\", className || value === false ? \"\" : dataPriv.get(this, \"__className__\") || \"\");\n          }\n        }\n      });\n    },\n    hasClass: function (selector) {\n      var className,\n          elem,\n          i = 0;\n      className = \" \" + selector + \" \";\n\n      while (elem = this[i++]) {\n        if (elem.nodeType === 1 && (\" \" + stripAndCollapse(getClass(elem)) + \" \").indexOf(className) > -1) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  });\n  var rreturn = /\\r/g;\n  jQuery.fn.extend({\n    val: function (value) {\n      var hooks,\n          ret,\n          valueIsFunction,\n          elem = this[0];\n\n      if (!arguments.length) {\n        if (elem) {\n          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n\n          if (hooks && \"get\" in hooks && (ret = hooks.get(elem, \"value\")) !== undefined) {\n            return ret;\n          }\n\n          ret = elem.value; // Handle most common string cases\n\n          if (typeof ret === \"string\") {\n            return ret.replace(rreturn, \"\");\n          } // Handle cases where value is null/undef or number\n\n\n          return ret == null ? \"\" : ret;\n        }\n\n        return;\n      }\n\n      valueIsFunction = isFunction(value);\n      return this.each(function (i) {\n        var val;\n\n        if (this.nodeType !== 1) {\n          return;\n        }\n\n        if (valueIsFunction) {\n          val = value.call(this, i, jQuery(this).val());\n        } else {\n          val = value;\n        } // Treat null/undefined as \"\"; convert numbers to string\n\n\n        if (val == null) {\n          val = \"\";\n        } else if (typeof val === \"number\") {\n          val += \"\";\n        } else if (Array.isArray(val)) {\n          val = jQuery.map(val, function (value) {\n            return value == null ? \"\" : value + \"\";\n          });\n        }\n\n        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]; // If set returns undefined, fall back to normal setting\n\n        if (!hooks || !(\"set\" in hooks) || hooks.set(this, val, \"value\") === undefined) {\n          this.value = val;\n        }\n      });\n    }\n  });\n  jQuery.extend({\n    valHooks: {\n      option: {\n        get: function (elem) {\n          var val = jQuery.find.attr(elem, \"value\");\n          return val != null ? val : // Support: IE <=10 - 11 only\n          // option.text throws exceptions (#14686, #14858)\n          // Strip and collapse whitespace\n          // https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n          stripAndCollapse(jQuery.text(elem));\n        }\n      },\n      select: {\n        get: function (elem) {\n          var value,\n              option,\n              i,\n              options = elem.options,\n              index = elem.selectedIndex,\n              one = elem.type === \"select-one\",\n              values = one ? null : [],\n              max = one ? index + 1 : options.length;\n\n          if (index < 0) {\n            i = max;\n          } else {\n            i = one ? index : 0;\n          } // Loop through all the selected options\n\n\n          for (; i < max; i++) {\n            option = options[i]; // Support: IE <=9 only\n            // IE8-9 doesn't update selected after form reset (#2551)\n\n            if ((option.selected || i === index) && // Don't return options that are disabled or in a disabled optgroup\n            !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, \"optgroup\"))) {\n              // Get the specific value for the option\n              value = jQuery(option).val(); // We don't need an array for one selects\n\n              if (one) {\n                return value;\n              } // Multi-Selects return an array\n\n\n              values.push(value);\n            }\n          }\n\n          return values;\n        },\n        set: function (elem, value) {\n          var optionSet,\n              option,\n              options = elem.options,\n              values = jQuery.makeArray(value),\n              i = options.length;\n\n          while (i--) {\n            option = options[i];\n            /* eslint-disable no-cond-assign */\n\n            if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {\n              optionSet = true;\n            }\n            /* eslint-enable no-cond-assign */\n\n          } // Force browsers to behave consistently when non-matching value is set\n\n\n          if (!optionSet) {\n            elem.selectedIndex = -1;\n          }\n\n          return values;\n        }\n      }\n    }\n  }); // Radios and checkboxes getter/setter\n\n  jQuery.each([\"radio\", \"checkbox\"], function () {\n    jQuery.valHooks[this] = {\n      set: function (elem, value) {\n        if (Array.isArray(value)) {\n          return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;\n        }\n      }\n    };\n\n    if (!support.checkOn) {\n      jQuery.valHooks[this].get = function (elem) {\n        return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n      };\n    }\n  }); // Return jQuery for attributes-only inclusion\n\n  support.focusin = \"onfocusin\" in window;\n\n  var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n      stopPropagationCallback = function (e) {\n    e.stopPropagation();\n  };\n\n  jQuery.extend(jQuery.event, {\n    trigger: function (event, data, elem, onlyHandlers) {\n      var i,\n          cur,\n          tmp,\n          bubbleType,\n          ontype,\n          handle,\n          special,\n          lastElement,\n          eventPath = [elem || document],\n          type = hasOwn.call(event, \"type\") ? event.type : event,\n          namespaces = hasOwn.call(event, \"namespace\") ? event.namespace.split(\".\") : [];\n      cur = lastElement = tmp = elem = elem || document; // Don't do events on text and comment nodes\n\n      if (elem.nodeType === 3 || elem.nodeType === 8) {\n        return;\n      } // focus/blur morphs to focusin/out; ensure we're not firing them right now\n\n\n      if (rfocusMorph.test(type + jQuery.event.triggered)) {\n        return;\n      }\n\n      if (type.indexOf(\".\") > -1) {\n        // Namespaced trigger; create a regexp to match event type in handle()\n        namespaces = type.split(\".\");\n        type = namespaces.shift();\n        namespaces.sort();\n      }\n\n      ontype = type.indexOf(\":\") < 0 && \"on\" + type; // Caller can pass in a jQuery.Event object, Object, or just an event type string\n\n      event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === \"object\" && event); // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\n      event.isTrigger = onlyHandlers ? 2 : 3;\n      event.namespace = namespaces.join(\".\");\n      event.rnamespace = event.namespace ? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null; // Clean up the event in case it is being reused\n\n      event.result = undefined;\n\n      if (!event.target) {\n        event.target = elem;\n      } // Clone any incoming data and prepend the event, creating the handler arg list\n\n\n      data = data == null ? [event] : jQuery.makeArray(data, [event]); // Allow special events to draw outside the lines\n\n      special = jQuery.event.special[type] || {};\n\n      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n        return;\n      } // Determine event propagation path in advance, per W3C events spec (#9951)\n      // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\n\n      if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {\n        bubbleType = special.delegateType || type;\n\n        if (!rfocusMorph.test(bubbleType + type)) {\n          cur = cur.parentNode;\n        }\n\n        for (; cur; cur = cur.parentNode) {\n          eventPath.push(cur);\n          tmp = cur;\n        } // Only add window if we got to document (e.g., not plain obj or detached DOM)\n\n\n        if (tmp === (elem.ownerDocument || document)) {\n          eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n        }\n      } // Fire handlers on the event path\n\n\n      i = 0;\n\n      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n        lastElement = cur;\n        event.type = i > 1 ? bubbleType : special.bindType || type; // jQuery handler\n\n        handle = (dataPriv.get(cur, \"events\") || Object.create(null))[event.type] && dataPriv.get(cur, \"handle\");\n\n        if (handle) {\n          handle.apply(cur, data);\n        } // Native handler\n\n\n        handle = ontype && cur[ontype];\n\n        if (handle && handle.apply && acceptData(cur)) {\n          event.result = handle.apply(cur, data);\n\n          if (event.result === false) {\n            event.preventDefault();\n          }\n        }\n      }\n\n      event.type = type; // If nobody prevented the default action, do it now\n\n      if (!onlyHandlers && !event.isDefaultPrevented()) {\n        if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {\n          // Call a native DOM method on the target with the same name as the event.\n          // Don't do default actions on window, that's where global variables be (#6170)\n          if (ontype && isFunction(elem[type]) && !isWindow(elem)) {\n            // Don't re-trigger an onFOO event when we call its FOO() method\n            tmp = elem[ontype];\n\n            if (tmp) {\n              elem[ontype] = null;\n            } // Prevent re-triggering of the same event, since we already bubbled it above\n\n\n            jQuery.event.triggered = type;\n\n            if (event.isPropagationStopped()) {\n              lastElement.addEventListener(type, stopPropagationCallback);\n            }\n\n            elem[type]();\n\n            if (event.isPropagationStopped()) {\n              lastElement.removeEventListener(type, stopPropagationCallback);\n            }\n\n            jQuery.event.triggered = undefined;\n\n            if (tmp) {\n              elem[ontype] = tmp;\n            }\n          }\n        }\n      }\n\n      return event.result;\n    },\n    // Piggyback on a donor event to simulate a different one\n    // Used only for `focus(in | out)` events\n    simulate: function (type, elem, event) {\n      var e = jQuery.extend(new jQuery.Event(), event, {\n        type: type,\n        isSimulated: true\n      });\n      jQuery.event.trigger(e, null, elem);\n    }\n  });\n  jQuery.fn.extend({\n    trigger: function (type, data) {\n      return this.each(function () {\n        jQuery.event.trigger(type, data, this);\n      });\n    },\n    triggerHandler: function (type, data) {\n      var elem = this[0];\n\n      if (elem) {\n        return jQuery.event.trigger(type, data, elem, true);\n      }\n    }\n  }); // Support: Firefox <=44\n  // Firefox doesn't have focus(in | out) events\n  // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n  //\n  // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n  // focus(in | out) events fire after focus & blur events,\n  // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n  // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\n\n  if (!support.focusin) {\n    jQuery.each({\n      focus: \"focusin\",\n      blur: \"focusout\"\n    }, function (orig, fix) {\n      // Attach a single capturing handler on the document while someone wants focusin/focusout\n      var handler = function (event) {\n        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));\n      };\n\n      jQuery.event.special[fix] = {\n        setup: function () {\n          // Handle: regular nodes (via `this.ownerDocument`), window\n          // (via `this.document`) & document (via `this`).\n          var doc = this.ownerDocument || this.document || this,\n              attaches = dataPriv.access(doc, fix);\n\n          if (!attaches) {\n            doc.addEventListener(orig, handler, true);\n          }\n\n          dataPriv.access(doc, fix, (attaches || 0) + 1);\n        },\n        teardown: function () {\n          var doc = this.ownerDocument || this.document || this,\n              attaches = dataPriv.access(doc, fix) - 1;\n\n          if (!attaches) {\n            doc.removeEventListener(orig, handler, true);\n            dataPriv.remove(doc, fix);\n          } else {\n            dataPriv.access(doc, fix, attaches);\n          }\n        }\n      };\n    });\n  }\n\n  var location = window.location;\n  var nonce = {\n    guid: Date.now()\n  };\n  var rquery = /\\?/; // Cross-browser xml parsing\n\n  jQuery.parseXML = function (data) {\n    var xml;\n\n    if (!data || typeof data !== \"string\") {\n      return null;\n    } // Support: IE 9 - 11 only\n    // IE throws on parseFromString with invalid input.\n\n\n    try {\n      xml = new window.DOMParser().parseFromString(data, \"text/xml\");\n    } catch (e) {\n      xml = undefined;\n    }\n\n    if (!xml || xml.getElementsByTagName(\"parsererror\").length) {\n      jQuery.error(\"Invalid XML: \" + data);\n    }\n\n    return xml;\n  };\n\n  var rbracket = /\\[\\]$/,\n      rCRLF = /\\r?\\n/g,\n      rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n      rsubmittable = /^(?:input|select|textarea|keygen)/i;\n\n  function buildParams(prefix, obj, traditional, add) {\n    var name;\n\n    if (Array.isArray(obj)) {\n      // Serialize array item.\n      jQuery.each(obj, function (i, v) {\n        if (traditional || rbracket.test(prefix)) {\n          // Treat each array item as a scalar.\n          add(prefix, v);\n        } else {\n          // Item is non-scalar (array or object), encode its numeric index.\n          buildParams(prefix + \"[\" + (typeof v === \"object\" && v != null ? i : \"\") + \"]\", v, traditional, add);\n        }\n      });\n    } else if (!traditional && toType(obj) === \"object\") {\n      // Serialize object item.\n      for (name in obj) {\n        buildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n      }\n    } else {\n      // Serialize scalar item.\n      add(prefix, obj);\n    }\n  } // Serialize an array of form elements or a set of\n  // key/values into a query string\n\n\n  jQuery.param = function (a, traditional) {\n    var prefix,\n        s = [],\n        add = function (key, valueOrFunction) {\n      // If value is a function, invoke it and use its return value\n      var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;\n      s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value == null ? \"\" : value);\n    };\n\n    if (a == null) {\n      return \"\";\n    } // If an array was passed in, assume that it is an array of form elements.\n\n\n    if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n      // Serialize the form elements\n      jQuery.each(a, function () {\n        add(this.name, this.value);\n      });\n    } else {\n      // If traditional, encode the \"old\" way (the way 1.3.2 or older\n      // did it), otherwise encode params recursively.\n      for (prefix in a) {\n        buildParams(prefix, a[prefix], traditional, add);\n      }\n    } // Return the resulting serialization\n\n\n    return s.join(\"&\");\n  };\n\n  jQuery.fn.extend({\n    serialize: function () {\n      return jQuery.param(this.serializeArray());\n    },\n    serializeArray: function () {\n      return this.map(function () {\n        // Can add propHook for \"elements\" to filter or add form elements\n        var elements = jQuery.prop(this, \"elements\");\n        return elements ? jQuery.makeArray(elements) : this;\n      }).filter(function () {\n        var type = this.type; // Use .is( \":disabled\" ) so that fieldset[disabled] works\n\n        return this.name && !jQuery(this).is(\":disabled\") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n      }).map(function (_i, elem) {\n        var val = jQuery(this).val();\n\n        if (val == null) {\n          return null;\n        }\n\n        if (Array.isArray(val)) {\n          return jQuery.map(val, function (val) {\n            return {\n              name: elem.name,\n              value: val.replace(rCRLF, \"\\r\\n\")\n            };\n          });\n        }\n\n        return {\n          name: elem.name,\n          value: val.replace(rCRLF, \"\\r\\n\")\n        };\n      }).get();\n    }\n  });\n  var r20 = /%20/g,\n      rhash = /#.*$/,\n      rantiCache = /([?&])_=[^&]*/,\n      rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n      // #7653, #8125, #8152: local protocol detection\n  rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n      rnoContent = /^(?:GET|HEAD)$/,\n      rprotocol = /^\\/\\//,\n\n  /* Prefilters\n   * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n   * 2) These are called:\n   *    - BEFORE asking for a transport\n   *    - AFTER param serialization (s.data is a string if s.processData is true)\n   * 3) key is the dataType\n   * 4) the catchall symbol \"*\" can be used\n   * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n   */\n  prefilters = {},\n\n  /* Transports bindings\n   * 1) key is the dataType\n   * 2) the catchall symbol \"*\" can be used\n   * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n   */\n  transports = {},\n      // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n  allTypes = \"*/\".concat(\"*\"),\n      // Anchor tag for parsing the document origin\n  originAnchor = document.createElement(\"a\");\n  originAnchor.href = location.href; // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n\n  function addToPrefiltersOrTransports(structure) {\n    // dataTypeExpression is optional and defaults to \"*\"\n    return function (dataTypeExpression, func) {\n      if (typeof dataTypeExpression !== \"string\") {\n        func = dataTypeExpression;\n        dataTypeExpression = \"*\";\n      }\n\n      var dataType,\n          i = 0,\n          dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];\n\n      if (isFunction(func)) {\n        // For each dataType in the dataTypeExpression\n        while (dataType = dataTypes[i++]) {\n          // Prepend if requested\n          if (dataType[0] === \"+\") {\n            dataType = dataType.slice(1) || \"*\";\n            (structure[dataType] = structure[dataType] || []).unshift(func); // Otherwise append\n          } else {\n            (structure[dataType] = structure[dataType] || []).push(func);\n          }\n        }\n      }\n    };\n  } // Base inspection function for prefilters and transports\n\n\n  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n    var inspected = {},\n        seekingTransport = structure === transports;\n\n    function inspect(dataType) {\n      var selected;\n      inspected[dataType] = true;\n      jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {\n        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n\n        if (typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[dataTypeOrTransport]) {\n          options.dataTypes.unshift(dataTypeOrTransport);\n          inspect(dataTypeOrTransport);\n          return false;\n        } else if (seekingTransport) {\n          return !(selected = dataTypeOrTransport);\n        }\n      });\n      return selected;\n    }\n\n    return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\n  } // A special extend for ajax options\n  // that takes \"flat\" options (not to be deep extended)\n  // Fixes #9887\n\n\n  function ajaxExtend(target, src) {\n    var key,\n        deep,\n        flatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n    for (key in src) {\n      if (src[key] !== undefined) {\n        (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];\n      }\n    }\n\n    if (deep) {\n      jQuery.extend(true, target, deep);\n    }\n\n    return target;\n  }\n  /* Handles responses to an ajax request:\n   * - finds the right dataType (mediates between content-type and expected dataType)\n   * - returns the corresponding response\n   */\n\n\n  function ajaxHandleResponses(s, jqXHR, responses) {\n    var ct,\n        type,\n        finalDataType,\n        firstDataType,\n        contents = s.contents,\n        dataTypes = s.dataTypes; // Remove auto dataType and get content-type in the process\n\n    while (dataTypes[0] === \"*\") {\n      dataTypes.shift();\n\n      if (ct === undefined) {\n        ct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n      }\n    } // Check if we're dealing with a known content-type\n\n\n    if (ct) {\n      for (type in contents) {\n        if (contents[type] && contents[type].test(ct)) {\n          dataTypes.unshift(type);\n          break;\n        }\n      }\n    } // Check to see if we have a response for the expected dataType\n\n\n    if (dataTypes[0] in responses) {\n      finalDataType = dataTypes[0];\n    } else {\n      // Try convertible dataTypes\n      for (type in responses) {\n        if (!dataTypes[0] || s.converters[type + \" \" + dataTypes[0]]) {\n          finalDataType = type;\n          break;\n        }\n\n        if (!firstDataType) {\n          firstDataType = type;\n        }\n      } // Or just use first one\n\n\n      finalDataType = finalDataType || firstDataType;\n    } // If we found a dataType\n    // We add the dataType to the list if needed\n    // and return the corresponding response\n\n\n    if (finalDataType) {\n      if (finalDataType !== dataTypes[0]) {\n        dataTypes.unshift(finalDataType);\n      }\n\n      return responses[finalDataType];\n    }\n  }\n  /* Chain conversions given the request and the original response\n   * Also sets the responseXXX fields on the jqXHR instance\n   */\n\n\n  function ajaxConvert(s, response, jqXHR, isSuccess) {\n    var conv2,\n        current,\n        conv,\n        tmp,\n        prev,\n        converters = {},\n        // Work with a copy of dataTypes in case we need to modify it for conversion\n    dataTypes = s.dataTypes.slice(); // Create converters map with lowercased keys\n\n    if (dataTypes[1]) {\n      for (conv in s.converters) {\n        converters[conv.toLowerCase()] = s.converters[conv];\n      }\n    }\n\n    current = dataTypes.shift(); // Convert to each sequential dataType\n\n    while (current) {\n      if (s.responseFields[current]) {\n        jqXHR[s.responseFields[current]] = response;\n      } // Apply the dataFilter if provided\n\n\n      if (!prev && isSuccess && s.dataFilter) {\n        response = s.dataFilter(response, s.dataType);\n      }\n\n      prev = current;\n      current = dataTypes.shift();\n\n      if (current) {\n        // There's only work to do if current dataType is non-auto\n        if (current === \"*\") {\n          current = prev; // Convert response if prev dataType is non-auto and differs from current\n        } else if (prev !== \"*\" && prev !== current) {\n          // Seek a direct converter\n          conv = converters[prev + \" \" + current] || converters[\"* \" + current]; // If none found, seek a pair\n\n          if (!conv) {\n            for (conv2 in converters) {\n              // If conv2 outputs current\n              tmp = conv2.split(\" \");\n\n              if (tmp[1] === current) {\n                // If prev can be converted to accepted input\n                conv = converters[prev + \" \" + tmp[0]] || converters[\"* \" + tmp[0]];\n\n                if (conv) {\n                  // Condense equivalence converters\n                  if (conv === true) {\n                    conv = converters[conv2]; // Otherwise, insert the intermediate dataType\n                  } else if (converters[conv2] !== true) {\n                    current = tmp[0];\n                    dataTypes.unshift(tmp[1]);\n                  }\n\n                  break;\n                }\n              }\n            }\n          } // Apply converter (if not an equivalence)\n\n\n          if (conv !== true) {\n            // Unless errors are allowed to bubble, catch and return them\n            if (conv && s.throws) {\n              response = conv(response);\n            } else {\n              try {\n                response = conv(response);\n              } catch (e) {\n                return {\n                  state: \"parsererror\",\n                  error: conv ? e : \"No conversion from \" + prev + \" to \" + current\n                };\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      state: \"success\",\n      data: response\n    };\n  }\n\n  jQuery.extend({\n    // Counter for holding the number of active queries\n    active: 0,\n    // Last-Modified header cache for next request\n    lastModified: {},\n    etag: {},\n    ajaxSettings: {\n      url: location.href,\n      type: \"GET\",\n      isLocal: rlocalProtocol.test(location.protocol),\n      global: true,\n      processData: true,\n      async: true,\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n      /*\n      timeout: 0,\n      data: null,\n      dataType: null,\n      username: null,\n      password: null,\n      cache: null,\n      throws: false,\n      traditional: false,\n      headers: {},\n      */\n      accepts: {\n        \"*\": allTypes,\n        text: \"text/plain\",\n        html: \"text/html\",\n        xml: \"application/xml, text/xml\",\n        json: \"application/json, text/javascript\"\n      },\n      contents: {\n        xml: /\\bxml\\b/,\n        html: /\\bhtml/,\n        json: /\\bjson\\b/\n      },\n      responseFields: {\n        xml: \"responseXML\",\n        text: \"responseText\",\n        json: \"responseJSON\"\n      },\n      // Data converters\n      // Keys separate source (or catchall \"*\") and destination types with a single space\n      converters: {\n        // Convert anything to text\n        \"* text\": String,\n        // Text to html (true = no transformation)\n        \"text html\": true,\n        // Evaluate text as a json expression\n        \"text json\": JSON.parse,\n        // Parse text as xml\n        \"text xml\": jQuery.parseXML\n      },\n      // For options that shouldn't be deep extended:\n      // you can add your own custom options here if\n      // and when you create one that shouldn't be\n      // deep extended (see ajaxExtend)\n      flatOptions: {\n        url: true,\n        context: true\n      }\n    },\n    // Creates a full fledged settings object into target\n    // with both ajaxSettings and settings fields.\n    // If target is omitted, writes into ajaxSettings.\n    ajaxSetup: function (target, settings) {\n      return settings ? // Building a settings object\n      ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : // Extending ajaxSettings\n      ajaxExtend(jQuery.ajaxSettings, target);\n    },\n    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n    ajaxTransport: addToPrefiltersOrTransports(transports),\n    // Main method\n    ajax: function (url, options) {\n      // If url is an object, simulate pre-1.5 signature\n      if (typeof url === \"object\") {\n        options = url;\n        url = undefined;\n      } // Force options to be an object\n\n\n      options = options || {};\n      var transport,\n          // URL without anti-cache param\n      cacheURL,\n          // Response headers\n      responseHeadersString,\n          responseHeaders,\n          // timeout handle\n      timeoutTimer,\n          // Url cleanup var\n      urlAnchor,\n          // Request state (becomes false upon send and true upon completion)\n      completed,\n          // To know if global events are to be dispatched\n      fireGlobals,\n          // Loop variable\n      i,\n          // uncached part of the url\n      uncached,\n          // Create the final options object\n      s = jQuery.ajaxSetup({}, options),\n          // Callbacks context\n      callbackContext = s.context || s,\n          // Context for global events is callbackContext if it is a DOM node or jQuery collection\n      globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n          // Deferreds\n      deferred = jQuery.Deferred(),\n          completeDeferred = jQuery.Callbacks(\"once memory\"),\n          // Status-dependent callbacks\n      statusCode = s.statusCode || {},\n          // Headers (they are sent all at once)\n      requestHeaders = {},\n          requestHeadersNames = {},\n          // Default abort message\n      strAbort = \"canceled\",\n          // Fake xhr\n      jqXHR = {\n        readyState: 0,\n        // Builds headers hashtable if needed\n        getResponseHeader: function (key) {\n          var match;\n\n          if (completed) {\n            if (!responseHeaders) {\n              responseHeaders = {};\n\n              while (match = rheaders.exec(responseHeadersString)) {\n                responseHeaders[match[1].toLowerCase() + \" \"] = (responseHeaders[match[1].toLowerCase() + \" \"] || []).concat(match[2]);\n              }\n            }\n\n            match = responseHeaders[key.toLowerCase() + \" \"];\n          }\n\n          return match == null ? null : match.join(\", \");\n        },\n        // Raw string\n        getAllResponseHeaders: function () {\n          return completed ? responseHeadersString : null;\n        },\n        // Caches the header\n        setRequestHeader: function (name, value) {\n          if (completed == null) {\n            name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;\n            requestHeaders[name] = value;\n          }\n\n          return this;\n        },\n        // Overrides response content-type header\n        overrideMimeType: function (type) {\n          if (completed == null) {\n            s.mimeType = type;\n          }\n\n          return this;\n        },\n        // Status-dependent callbacks\n        statusCode: function (map) {\n          var code;\n\n          if (map) {\n            if (completed) {\n              // Execute the appropriate callbacks\n              jqXHR.always(map[jqXHR.status]);\n            } else {\n              // Lazy-add the new callbacks in a way that preserves old ones\n              for (code in map) {\n                statusCode[code] = [statusCode[code], map[code]];\n              }\n            }\n          }\n\n          return this;\n        },\n        // Cancel the request\n        abort: function (statusText) {\n          var finalText = statusText || strAbort;\n\n          if (transport) {\n            transport.abort(finalText);\n          }\n\n          done(0, finalText);\n          return this;\n        }\n      }; // Attach deferreds\n\n      deferred.promise(jqXHR); // Add protocol if not provided (prefilters might expect it)\n      // Handle falsy url in the settings object (#10093: consistency with old signature)\n      // We also use the url parameter if available\n\n      s.url = ((url || s.url || location.href) + \"\").replace(rprotocol, location.protocol + \"//\"); // Alias method option to type as per ticket #12004\n\n      s.type = options.method || options.type || s.method || s.type; // Extract dataTypes list\n\n      s.dataTypes = (s.dataType || \"*\").toLowerCase().match(rnothtmlwhite) || [\"\"]; // A cross-domain request is in order when the origin doesn't match the current origin.\n\n      if (s.crossDomain == null) {\n        urlAnchor = document.createElement(\"a\"); // Support: IE <=8 - 11, Edge 12 - 15\n        // IE throws exception on accessing the href property if url is malformed,\n        // e.g. http://example.com:80x/\n\n        try {\n          urlAnchor.href = s.url; // Support: IE <=8 - 11 only\n          // Anchor's host property isn't correctly set when s.url is relative\n\n          urlAnchor.href = urlAnchor.href;\n          s.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !== urlAnchor.protocol + \"//\" + urlAnchor.host;\n        } catch (e) {\n          // If there is an error parsing the URL, assume it is crossDomain,\n          // it can be rejected by the transport if it is invalid\n          s.crossDomain = true;\n        }\n      } // Convert data if not already a string\n\n\n      if (s.data && s.processData && typeof s.data !== \"string\") {\n        s.data = jQuery.param(s.data, s.traditional);\n      } // Apply prefilters\n\n\n      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR); // If request was aborted inside a prefilter, stop there\n\n      if (completed) {\n        return jqXHR;\n      } // We can fire global events as of now if asked to\n      // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\n\n      fireGlobals = jQuery.event && s.global; // Watch for a new set of requests\n\n      if (fireGlobals && jQuery.active++ === 0) {\n        jQuery.event.trigger(\"ajaxStart\");\n      } // Uppercase the type\n\n\n      s.type = s.type.toUpperCase(); // Determine if request has content\n\n      s.hasContent = !rnoContent.test(s.type); // Save the URL in case we're toying with the If-Modified-Since\n      // and/or If-None-Match header later on\n      // Remove hash to simplify url manipulation\n\n      cacheURL = s.url.replace(rhash, \"\"); // More options handling for requests with no content\n\n      if (!s.hasContent) {\n        // Remember the hash so we can put it back\n        uncached = s.url.slice(cacheURL.length); // If data is available and should be processed, append data to url\n\n        if (s.data && (s.processData || typeof s.data === \"string\")) {\n          cacheURL += (rquery.test(cacheURL) ? \"&\" : \"?\") + s.data; // #9682: remove data so that it's not used in an eventual retry\n\n          delete s.data;\n        } // Add or update anti-cache param if needed\n\n\n        if (s.cache === false) {\n          cacheURL = cacheURL.replace(rantiCache, \"$1\");\n          uncached = (rquery.test(cacheURL) ? \"&\" : \"?\") + \"_=\" + nonce.guid++ + uncached;\n        } // Put hash and anti-cache on the URL that will be requested (gh-1732)\n\n\n        s.url = cacheURL + uncached; // Change '%20' to '+' if this is encoded form body content (gh-2658)\n      } else if (s.data && s.processData && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0) {\n        s.data = s.data.replace(r20, \"+\");\n      } // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\n\n      if (s.ifModified) {\n        if (jQuery.lastModified[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-Modified-Since\", jQuery.lastModified[cacheURL]);\n        }\n\n        if (jQuery.etag[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-None-Match\", jQuery.etag[cacheURL]);\n        }\n      } // Set the correct header, if data is being sent\n\n\n      if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n        jqXHR.setRequestHeader(\"Content-Type\", s.contentType);\n      } // Set the Accepts header for the server, depending on the dataType\n\n\n      jqXHR.setRequestHeader(\"Accept\", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\") : s.accepts[\"*\"]); // Check for headers option\n\n      for (i in s.headers) {\n        jqXHR.setRequestHeader(i, s.headers[i]);\n      } // Allow custom headers/mimetypes and early abort\n\n\n      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {\n        // Abort if not done already and return\n        return jqXHR.abort();\n      } // Aborting is no longer a cancellation\n\n\n      strAbort = \"abort\"; // Install callbacks on deferreds\n\n      completeDeferred.add(s.complete);\n      jqXHR.done(s.success);\n      jqXHR.fail(s.error); // Get transport\n\n      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR); // If no transport, we auto-abort\n\n      if (!transport) {\n        done(-1, \"No Transport\");\n      } else {\n        jqXHR.readyState = 1; // Send global event\n\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxSend\", [jqXHR, s]);\n        } // If request was aborted inside ajaxSend, stop there\n\n\n        if (completed) {\n          return jqXHR;\n        } // Timeout\n\n\n        if (s.async && s.timeout > 0) {\n          timeoutTimer = window.setTimeout(function () {\n            jqXHR.abort(\"timeout\");\n          }, s.timeout);\n        }\n\n        try {\n          completed = false;\n          transport.send(requestHeaders, done);\n        } catch (e) {\n          // Rethrow post-completion exceptions\n          if (completed) {\n            throw e;\n          } // Propagate others as results\n\n\n          done(-1, e);\n        }\n      } // Callback for when everything is done\n\n\n      function done(status, nativeStatusText, responses, headers) {\n        var isSuccess,\n            success,\n            error,\n            response,\n            modified,\n            statusText = nativeStatusText; // Ignore repeat invocations\n\n        if (completed) {\n          return;\n        }\n\n        completed = true; // Clear timeout if it exists\n\n        if (timeoutTimer) {\n          window.clearTimeout(timeoutTimer);\n        } // Dereference transport for early garbage collection\n        // (no matter how long the jqXHR object will be used)\n\n\n        transport = undefined; // Cache response headers\n\n        responseHeadersString = headers || \"\"; // Set readyState\n\n        jqXHR.readyState = status > 0 ? 4 : 0; // Determine if successful\n\n        isSuccess = status >= 200 && status < 300 || status === 304; // Get response data\n\n        if (responses) {\n          response = ajaxHandleResponses(s, jqXHR, responses);\n        } // Use a noop converter for missing script\n\n\n        if (!isSuccess && jQuery.inArray(\"script\", s.dataTypes) > -1) {\n          s.converters[\"text script\"] = function () {};\n        } // Convert no matter what (that way responseXXX fields are always set)\n\n\n        response = ajaxConvert(s, response, jqXHR, isSuccess); // If successful, handle type chaining\n\n        if (isSuccess) {\n          // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n          if (s.ifModified) {\n            modified = jqXHR.getResponseHeader(\"Last-Modified\");\n\n            if (modified) {\n              jQuery.lastModified[cacheURL] = modified;\n            }\n\n            modified = jqXHR.getResponseHeader(\"etag\");\n\n            if (modified) {\n              jQuery.etag[cacheURL] = modified;\n            }\n          } // if no content\n\n\n          if (status === 204 || s.type === \"HEAD\") {\n            statusText = \"nocontent\"; // if not modified\n          } else if (status === 304) {\n            statusText = \"notmodified\"; // If we have data, let's convert it\n          } else {\n            statusText = response.state;\n            success = response.data;\n            error = response.error;\n            isSuccess = !error;\n          }\n        } else {\n          // Extract error from statusText and normalize for non-aborts\n          error = statusText;\n\n          if (status || !statusText) {\n            statusText = \"error\";\n\n            if (status < 0) {\n              status = 0;\n            }\n          }\n        } // Set data for the fake xhr object\n\n\n        jqXHR.status = status;\n        jqXHR.statusText = (nativeStatusText || statusText) + \"\"; // Success/Error\n\n        if (isSuccess) {\n          deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);\n        } else {\n          deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);\n        } // Status-dependent callbacks\n\n\n        jqXHR.statusCode(statusCode);\n        statusCode = undefined;\n\n        if (fireGlobals) {\n          globalEventContext.trigger(isSuccess ? \"ajaxSuccess\" : \"ajaxError\", [jqXHR, s, isSuccess ? success : error]);\n        } // Complete\n\n\n        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);\n\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxComplete\", [jqXHR, s]); // Handle the global AJAX counter\n\n          if (! --jQuery.active) {\n            jQuery.event.trigger(\"ajaxStop\");\n          }\n        }\n      }\n\n      return jqXHR;\n    },\n    getJSON: function (url, data, callback) {\n      return jQuery.get(url, data, callback, \"json\");\n    },\n    getScript: function (url, callback) {\n      return jQuery.get(url, undefined, callback, \"script\");\n    }\n  });\n  jQuery.each([\"get\", \"post\"], function (_i, method) {\n    jQuery[method] = function (url, data, callback, type) {\n      // Shift arguments if data argument was omitted\n      if (isFunction(data)) {\n        type = type || callback;\n        callback = data;\n        data = undefined;\n      } // The url can be an options object (which then must have .url)\n\n\n      return jQuery.ajax(jQuery.extend({\n        url: url,\n        type: method,\n        dataType: type,\n        data: data,\n        success: callback\n      }, jQuery.isPlainObject(url) && url));\n    };\n  });\n  jQuery.ajaxPrefilter(function (s) {\n    var i;\n\n    for (i in s.headers) {\n      if (i.toLowerCase() === \"content-type\") {\n        s.contentType = s.headers[i] || \"\";\n      }\n    }\n  });\n\n  jQuery._evalUrl = function (url, options, doc) {\n    return jQuery.ajax({\n      url: url,\n      // Make this explicit, since user can override this through ajaxSetup (#11264)\n      type: \"GET\",\n      dataType: \"script\",\n      cache: true,\n      async: false,\n      global: false,\n      // Only evaluate the response if it is successful (gh-4126)\n      // dataFilter is not invoked for failure responses, so using it instead\n      // of the default converter is kludgy but it works.\n      converters: {\n        \"text script\": function () {}\n      },\n      dataFilter: function (response) {\n        jQuery.globalEval(response, options, doc);\n      }\n    });\n  };\n\n  jQuery.fn.extend({\n    wrapAll: function (html) {\n      var wrap;\n\n      if (this[0]) {\n        if (isFunction(html)) {\n          html = html.call(this[0]);\n        } // The elements to wrap the target around\n\n\n        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n\n        if (this[0].parentNode) {\n          wrap.insertBefore(this[0]);\n        }\n\n        wrap.map(function () {\n          var elem = this;\n\n          while (elem.firstElementChild) {\n            elem = elem.firstElementChild;\n          }\n\n          return elem;\n        }).append(this);\n      }\n\n      return this;\n    },\n    wrapInner: function (html) {\n      if (isFunction(html)) {\n        return this.each(function (i) {\n          jQuery(this).wrapInner(html.call(this, i));\n        });\n      }\n\n      return this.each(function () {\n        var self = jQuery(this),\n            contents = self.contents();\n\n        if (contents.length) {\n          contents.wrapAll(html);\n        } else {\n          self.append(html);\n        }\n      });\n    },\n    wrap: function (html) {\n      var htmlIsFunction = isFunction(html);\n      return this.each(function (i) {\n        jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);\n      });\n    },\n    unwrap: function (selector) {\n      this.parent(selector).not(\"body\").each(function () {\n        jQuery(this).replaceWith(this.childNodes);\n      });\n      return this;\n    }\n  });\n\n  jQuery.expr.pseudos.hidden = function (elem) {\n    return !jQuery.expr.pseudos.visible(elem);\n  };\n\n  jQuery.expr.pseudos.visible = function (elem) {\n    return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n  };\n\n  jQuery.ajaxSettings.xhr = function () {\n    try {\n      return new window.XMLHttpRequest();\n    } catch (e) {}\n  };\n\n  var xhrSuccessStatus = {\n    // File protocol always yields status code 0, assume 200\n    0: 200,\n    // Support: IE <=9 only\n    // #1450: sometimes IE returns 1223 when it should be 204\n    1223: 204\n  },\n      xhrSupported = jQuery.ajaxSettings.xhr();\n  support.cors = !!xhrSupported && \"withCredentials\" in xhrSupported;\n  support.ajax = xhrSupported = !!xhrSupported;\n  jQuery.ajaxTransport(function (options) {\n    var callback, errorCallback; // Cross domain only allowed if supported through XMLHttpRequest\n\n    if (support.cors || xhrSupported && !options.crossDomain) {\n      return {\n        send: function (headers, complete) {\n          var i,\n              xhr = options.xhr();\n          xhr.open(options.type, options.url, options.async, options.username, options.password); // Apply custom fields if provided\n\n          if (options.xhrFields) {\n            for (i in options.xhrFields) {\n              xhr[i] = options.xhrFields[i];\n            }\n          } // Override mime type if needed\n\n\n          if (options.mimeType && xhr.overrideMimeType) {\n            xhr.overrideMimeType(options.mimeType);\n          } // X-Requested-With header\n          // For cross-domain requests, seeing as conditions for a preflight are\n          // akin to a jigsaw puzzle, we simply never set it to be sure.\n          // (it can always be set on a per-request basis or even using ajaxSetup)\n          // For same-domain requests, won't change header if already provided.\n\n\n          if (!options.crossDomain && !headers[\"X-Requested-With\"]) {\n            headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n          } // Set headers\n\n\n          for (i in headers) {\n            xhr.setRequestHeader(i, headers[i]);\n          } // Callback\n\n\n          callback = function (type) {\n            return function () {\n              if (callback) {\n                callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;\n\n                if (type === \"abort\") {\n                  xhr.abort();\n                } else if (type === \"error\") {\n                  // Support: IE <=9 only\n                  // On a manual native abort, IE9 throws\n                  // errors on any property access that is not readyState\n                  if (typeof xhr.status !== \"number\") {\n                    complete(0, \"error\");\n                  } else {\n                    complete( // File: protocol always yields status 0; see #8605, #14207\n                    xhr.status, xhr.statusText);\n                  }\n                } else {\n                  complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, // Support: IE <=9 only\n                  // IE9 has no XHR2 but throws on binary (trac-11426)\n                  // For XHR2 non-text, let the caller handle it (gh-2498)\n                  (xhr.responseType || \"text\") !== \"text\" || typeof xhr.responseText !== \"string\" ? {\n                    binary: xhr.response\n                  } : {\n                    text: xhr.responseText\n                  }, xhr.getAllResponseHeaders());\n                }\n              }\n            };\n          }; // Listen to events\n\n\n          xhr.onload = callback();\n          errorCallback = xhr.onerror = xhr.ontimeout = callback(\"error\"); // Support: IE 9 only\n          // Use onreadystatechange to replace onabort\n          // to handle uncaught aborts\n\n          if (xhr.onabort !== undefined) {\n            xhr.onabort = errorCallback;\n          } else {\n            xhr.onreadystatechange = function () {\n              // Check readyState before timeout as it changes\n              if (xhr.readyState === 4) {\n                // Allow onerror to be called first,\n                // but that will not handle a native abort\n                // Also, save errorCallback to a variable\n                // as xhr.onerror cannot be accessed\n                window.setTimeout(function () {\n                  if (callback) {\n                    errorCallback();\n                  }\n                });\n              }\n            };\n          } // Create the abort callback\n\n\n          callback = callback(\"abort\");\n\n          try {\n            // Do send the request (this may raise an exception)\n            xhr.send(options.hasContent && options.data || null);\n          } catch (e) {\n            // #14683: Only rethrow if this hasn't been notified as an error yet\n            if (callback) {\n              throw e;\n            }\n          }\n        },\n        abort: function () {\n          if (callback) {\n            callback();\n          }\n        }\n      };\n    }\n  }); // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\n\n  jQuery.ajaxPrefilter(function (s) {\n    if (s.crossDomain) {\n      s.contents.script = false;\n    }\n  }); // Install script dataType\n\n  jQuery.ajaxSetup({\n    accepts: {\n      script: \"text/javascript, application/javascript, \" + \"application/ecmascript, application/x-ecmascript\"\n    },\n    contents: {\n      script: /\\b(?:java|ecma)script\\b/\n    },\n    converters: {\n      \"text script\": function (text) {\n        jQuery.globalEval(text);\n        return text;\n      }\n    }\n  }); // Handle cache's special case and crossDomain\n\n  jQuery.ajaxPrefilter(\"script\", function (s) {\n    if (s.cache === undefined) {\n      s.cache = false;\n    }\n\n    if (s.crossDomain) {\n      s.type = \"GET\";\n    }\n  }); // Bind script tag hack transport\n\n  jQuery.ajaxTransport(\"script\", function (s) {\n    // This transport only deals with cross domain or forced-by-attrs requests\n    if (s.crossDomain || s.scriptAttrs) {\n      var script, callback;\n      return {\n        send: function (_, complete) {\n          script = jQuery(\"<script>\").attr(s.scriptAttrs || {}).prop({\n            charset: s.scriptCharset,\n            src: s.url\n          }).on(\"load error\", callback = function (evt) {\n            script.remove();\n            callback = null;\n\n            if (evt) {\n              complete(evt.type === \"error\" ? 404 : 200, evt.type);\n            }\n          }); // Use native DOM manipulation to avoid our domManip AJAX trickery\n\n          document.head.appendChild(script[0]);\n        },\n        abort: function () {\n          if (callback) {\n            callback();\n          }\n        }\n      };\n    }\n  });\n  var oldCallbacks = [],\n      rjsonp = /(=)\\?(?=&|$)|\\?\\?/; // Default jsonp settings\n\n  jQuery.ajaxSetup({\n    jsonp: \"callback\",\n    jsonpCallback: function () {\n      var callback = oldCallbacks.pop() || jQuery.expando + \"_\" + nonce.guid++;\n      this[callback] = true;\n      return callback;\n    }\n  }); // Detect, normalize options and install callbacks for jsonp requests\n\n  jQuery.ajaxPrefilter(\"json jsonp\", function (s, originalSettings, jqXHR) {\n    var callbackName,\n        overwritten,\n        responseContainer,\n        jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? \"url\" : typeof s.data === \"string\" && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0 && rjsonp.test(s.data) && \"data\"); // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\n    if (jsonProp || s.dataTypes[0] === \"jsonp\") {\n      // Get callback name, remembering preexisting value associated with it\n      callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback; // Insert callback into url or form data\n\n      if (jsonProp) {\n        s[jsonProp] = s[jsonProp].replace(rjsonp, \"$1\" + callbackName);\n      } else if (s.jsonp !== false) {\n        s.url += (rquery.test(s.url) ? \"&\" : \"?\") + s.jsonp + \"=\" + callbackName;\n      } // Use data converter to retrieve json after script execution\n\n\n      s.converters[\"script json\"] = function () {\n        if (!responseContainer) {\n          jQuery.error(callbackName + \" was not called\");\n        }\n\n        return responseContainer[0];\n      }; // Force json dataType\n\n\n      s.dataTypes[0] = \"json\"; // Install callback\n\n      overwritten = window[callbackName];\n\n      window[callbackName] = function () {\n        responseContainer = arguments;\n      }; // Clean-up function (fires after converters)\n\n\n      jqXHR.always(function () {\n        // If previous value didn't exist - remove it\n        if (overwritten === undefined) {\n          jQuery(window).removeProp(callbackName); // Otherwise restore preexisting value\n        } else {\n          window[callbackName] = overwritten;\n        } // Save back as free\n\n\n        if (s[callbackName]) {\n          // Make sure that re-using the options doesn't screw things around\n          s.jsonpCallback = originalSettings.jsonpCallback; // Save the callback name for future use\n\n          oldCallbacks.push(callbackName);\n        } // Call if it was a function and we have a response\n\n\n        if (responseContainer && isFunction(overwritten)) {\n          overwritten(responseContainer[0]);\n        }\n\n        responseContainer = overwritten = undefined;\n      }); // Delegate to script\n\n      return \"script\";\n    }\n  }); // Support: Safari 8 only\n  // In Safari 8 documents created via document.implementation.createHTMLDocument\n  // collapse sibling forms: the second one becomes a child of the first one.\n  // Because of that, this security measure has to be disabled in Safari 8.\n  // https://bugs.webkit.org/show_bug.cgi?id=137337\n\n  support.createHTMLDocument = function () {\n    var body = document.implementation.createHTMLDocument(\"\").body;\n    body.innerHTML = \"<form></form><form></form>\";\n    return body.childNodes.length === 2;\n  }(); // Argument \"data\" should be string of html\n  // context (optional): If specified, the fragment will be created in this context,\n  // defaults to document\n  // keepScripts (optional): If true, will include scripts passed in the html string\n\n\n  jQuery.parseHTML = function (data, context, keepScripts) {\n    if (typeof data !== \"string\") {\n      return [];\n    }\n\n    if (typeof context === \"boolean\") {\n      keepScripts = context;\n      context = false;\n    }\n\n    var base, parsed, scripts;\n\n    if (!context) {\n      // Stop scripts or inline event handlers from being executed immediately\n      // by using document.implementation\n      if (support.createHTMLDocument) {\n        context = document.implementation.createHTMLDocument(\"\"); // Set the base href for the created document\n        // so any parsed elements with URLs\n        // are based on the document's URL (gh-2965)\n\n        base = context.createElement(\"base\");\n        base.href = document.location.href;\n        context.head.appendChild(base);\n      } else {\n        context = document;\n      }\n    }\n\n    parsed = rsingleTag.exec(data);\n    scripts = !keepScripts && []; // Single tag\n\n    if (parsed) {\n      return [context.createElement(parsed[1])];\n    }\n\n    parsed = buildFragment([data], context, scripts);\n\n    if (scripts && scripts.length) {\n      jQuery(scripts).remove();\n    }\n\n    return jQuery.merge([], parsed.childNodes);\n  };\n  /**\n   * Load a url into a page\n   */\n\n\n  jQuery.fn.load = function (url, params, callback) {\n    var selector,\n        type,\n        response,\n        self = this,\n        off = url.indexOf(\" \");\n\n    if (off > -1) {\n      selector = stripAndCollapse(url.slice(off));\n      url = url.slice(0, off);\n    } // If it's a function\n\n\n    if (isFunction(params)) {\n      // We assume that it's the callback\n      callback = params;\n      params = undefined; // Otherwise, build a param string\n    } else if (params && typeof params === \"object\") {\n      type = \"POST\";\n    } // If we have elements to modify, make the request\n\n\n    if (self.length > 0) {\n      jQuery.ajax({\n        url: url,\n        // If \"type\" variable is undefined, then \"GET\" method will be used.\n        // Make value of this field explicit since\n        // user can override it through ajaxSetup method\n        type: type || \"GET\",\n        dataType: \"html\",\n        data: params\n      }).done(function (responseText) {\n        // Save response for use in complete callback\n        response = arguments;\n        self.html(selector ? // If a selector was specified, locate the right elements in a dummy div\n        // Exclude scripts to avoid IE 'Permission Denied' errors\n        jQuery(\"<div>\").append(jQuery.parseHTML(responseText)).find(selector) : // Otherwise use the full result\n        responseText); // If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n        // but they are ignored because response was set above.\n        // If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n      }).always(callback && function (jqXHR, status) {\n        self.each(function () {\n          callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);\n        });\n      });\n    }\n\n    return this;\n  };\n\n  jQuery.expr.pseudos.animated = function (elem) {\n    return jQuery.grep(jQuery.timers, function (fn) {\n      return elem === fn.elem;\n    }).length;\n  };\n\n  jQuery.offset = {\n    setOffset: function (elem, options, i) {\n      var curPosition,\n          curLeft,\n          curCSSTop,\n          curTop,\n          curOffset,\n          curCSSLeft,\n          calculatePosition,\n          position = jQuery.css(elem, \"position\"),\n          curElem = jQuery(elem),\n          props = {}; // Set position first, in-case top/left are set even on static elem\n\n      if (position === \"static\") {\n        elem.style.position = \"relative\";\n      }\n\n      curOffset = curElem.offset();\n      curCSSTop = jQuery.css(elem, \"top\");\n      curCSSLeft = jQuery.css(elem, \"left\");\n      calculatePosition = (position === \"absolute\" || position === \"fixed\") && (curCSSTop + curCSSLeft).indexOf(\"auto\") > -1; // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n\n      if (calculatePosition) {\n        curPosition = curElem.position();\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n\n      if (isFunction(options)) {\n        // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n        options = options.call(elem, i, jQuery.extend({}, curOffset));\n      }\n\n      if (options.top != null) {\n        props.top = options.top - curOffset.top + curTop;\n      }\n\n      if (options.left != null) {\n        props.left = options.left - curOffset.left + curLeft;\n      }\n\n      if (\"using\" in options) {\n        options.using.call(elem, props);\n      } else {\n        if (typeof props.top === \"number\") {\n          props.top += \"px\";\n        }\n\n        if (typeof props.left === \"number\") {\n          props.left += \"px\";\n        }\n\n        curElem.css(props);\n      }\n    }\n  };\n  jQuery.fn.extend({\n    // offset() relates an element's border box to the document origin\n    offset: function (options) {\n      // Preserve chaining for setter\n      if (arguments.length) {\n        return options === undefined ? this : this.each(function (i) {\n          jQuery.offset.setOffset(this, options, i);\n        });\n      }\n\n      var rect,\n          win,\n          elem = this[0];\n\n      if (!elem) {\n        return;\n      } // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n      // Support: IE <=11 only\n      // Running getBoundingClientRect on a\n      // disconnected node in IE throws an error\n\n\n      if (!elem.getClientRects().length) {\n        return {\n          top: 0,\n          left: 0\n        };\n      } // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\n\n      rect = elem.getBoundingClientRect();\n      win = elem.ownerDocument.defaultView;\n      return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset\n      };\n    },\n    // position() relates an element's margin box to its offset parent's padding box\n    // This corresponds to the behavior of CSS absolute positioning\n    position: function () {\n      if (!this[0]) {\n        return;\n      }\n\n      var offsetParent,\n          offset,\n          doc,\n          elem = this[0],\n          parentOffset = {\n        top: 0,\n        left: 0\n      }; // position:fixed elements are offset from the viewport, which itself always has zero offset\n\n      if (jQuery.css(elem, \"position\") === \"fixed\") {\n        // Assume position:fixed implies availability of getBoundingClientRect\n        offset = elem.getBoundingClientRect();\n      } else {\n        offset = this.offset(); // Account for the *real* offset parent, which can be the document or its root element\n        // when a statically positioned element is identified\n\n        doc = elem.ownerDocument;\n        offsetParent = elem.offsetParent || doc.documentElement;\n\n        while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.parentNode;\n        }\n\n        if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {\n          // Incorporate borders into its offset, since they are outside its content origin\n          parentOffset = jQuery(offsetParent).offset();\n          parentOffset.top += jQuery.css(offsetParent, \"borderTopWidth\", true);\n          parentOffset.left += jQuery.css(offsetParent, \"borderLeftWidth\", true);\n        }\n      } // Subtract parent offsets and element margins\n\n\n      return {\n        top: offset.top - parentOffset.top - jQuery.css(elem, \"marginTop\", true),\n        left: offset.left - parentOffset.left - jQuery.css(elem, \"marginLeft\", true)\n      };\n    },\n    // This method will return documentElement in the following cases:\n    // 1) For the element inside the iframe without offsetParent, this method will return\n    //    documentElement of the parent window\n    // 2) For the hidden or detached element\n    // 3) For body or html element, i.e. in case of the html node - it will return itself\n    //\n    // but those exceptions were never presented as a real life use-cases\n    // and might be considered as more preferable results.\n    //\n    // This logic, however, is not guaranteed and can change at any point in the future\n    offsetParent: function () {\n      return this.map(function () {\n        var offsetParent = this.offsetParent;\n\n        while (offsetParent && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.offsetParent;\n        }\n\n        return offsetParent || documentElement;\n      });\n    }\n  }); // Create scrollLeft and scrollTop methods\n\n  jQuery.each({\n    scrollLeft: \"pageXOffset\",\n    scrollTop: \"pageYOffset\"\n  }, function (method, prop) {\n    var top = \"pageYOffset\" === prop;\n\n    jQuery.fn[method] = function (val) {\n      return access(this, function (elem, method, val) {\n        // Coalesce documents and windows\n        var win;\n\n        if (isWindow(elem)) {\n          win = elem;\n        } else if (elem.nodeType === 9) {\n          win = elem.defaultView;\n        }\n\n        if (val === undefined) {\n          return win ? win[prop] : elem[method];\n        }\n\n        if (win) {\n          win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);\n        } else {\n          elem[method] = val;\n        }\n      }, method, val, arguments.length);\n    };\n  }); // Support: Safari <=7 - 9.1, Chrome <=37 - 49\n  // Add the top/left cssHooks using jQuery.fn.position\n  // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n  // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n  // getComputedStyle returns percent when specified for top/left/bottom/right;\n  // rather than make the css module depend on the offset module, just check for it here\n\n  jQuery.each([\"top\", \"left\"], function (_i, prop) {\n    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {\n      if (computed) {\n        computed = curCSS(elem, prop); // If curCSS returns percentage, fallback to offset\n\n        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + \"px\" : computed;\n      }\n    });\n  }); // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n\n  jQuery.each({\n    Height: \"height\",\n    Width: \"width\"\n  }, function (name, type) {\n    jQuery.each({\n      padding: \"inner\" + name,\n      content: type,\n      \"\": \"outer\" + name\n    }, function (defaultExtra, funcName) {\n      // Margin is only for outerHeight, outerWidth\n      jQuery.fn[funcName] = function (margin, value) {\n        var chainable = arguments.length && (defaultExtra || typeof margin !== \"boolean\"),\n            extra = defaultExtra || (margin === true || value === true ? \"margin\" : \"border\");\n        return access(this, function (elem, type, value) {\n          var doc;\n\n          if (isWindow(elem)) {\n            // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n            return funcName.indexOf(\"outer\") === 0 ? elem[\"inner\" + name] : elem.document.documentElement[\"client\" + name];\n          } // Get document width or height\n\n\n          if (elem.nodeType === 9) {\n            doc = elem.documentElement; // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n            // whichever is greatest\n\n            return Math.max(elem.body[\"scroll\" + name], doc[\"scroll\" + name], elem.body[\"offset\" + name], doc[\"offset\" + name], doc[\"client\" + name]);\n          }\n\n          return value === undefined ? // Get width or height on the element, requesting but not forcing parseFloat\n          jQuery.css(elem, type, extra) : // Set width or height on the element\n          jQuery.style(elem, type, value, extra);\n        }, type, chainable ? margin : undefined, chainable);\n      };\n    });\n  });\n  jQuery.each([\"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\"], function (_i, type) {\n    jQuery.fn[type] = function (fn) {\n      return this.on(type, fn);\n    };\n  });\n  jQuery.fn.extend({\n    bind: function (types, data, fn) {\n      return this.on(types, null, data, fn);\n    },\n    unbind: function (types, fn) {\n      return this.off(types, null, fn);\n    },\n    delegate: function (selector, types, data, fn) {\n      return this.on(types, selector, data, fn);\n    },\n    undelegate: function (selector, types, fn) {\n      // ( namespace ) or ( selector, types [, fn] )\n      return arguments.length === 1 ? this.off(selector, \"**\") : this.off(types, selector || \"**\", fn);\n    },\n    hover: function (fnOver, fnOut) {\n      return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n    }\n  });\n  jQuery.each((\"blur focus focusin focusout resize scroll click dblclick \" + \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" + \"change select submit keydown keypress keyup contextmenu\").split(\" \"), function (_i, name) {\n    // Handle event binding\n    jQuery.fn[name] = function (data, fn) {\n      return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n    };\n  }); // Support: Android <=4.0 only\n  // Make sure we trim BOM and NBSP\n\n  var rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g; // Bind a function to a context, optionally partially applying any\n  // arguments.\n  // jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n  // However, it is not slated for removal any time soon\n\n  jQuery.proxy = function (fn, context) {\n    var tmp, args, proxy;\n\n    if (typeof context === \"string\") {\n      tmp = fn[context];\n      context = fn;\n      fn = tmp;\n    } // Quick check to determine if target is callable, in the spec\n    // this throws a TypeError, but we will just return undefined.\n\n\n    if (!isFunction(fn)) {\n      return undefined;\n    } // Simulated bind\n\n\n    args = slice.call(arguments, 2);\n\n    proxy = function () {\n      return fn.apply(context || this, args.concat(slice.call(arguments)));\n    }; // Set the guid of unique handler to the same of original handler, so it can be removed\n\n\n    proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n    return proxy;\n  };\n\n  jQuery.holdReady = function (hold) {\n    if (hold) {\n      jQuery.readyWait++;\n    } else {\n      jQuery.ready(true);\n    }\n  };\n\n  jQuery.isArray = Array.isArray;\n  jQuery.parseJSON = JSON.parse;\n  jQuery.nodeName = nodeName;\n  jQuery.isFunction = isFunction;\n  jQuery.isWindow = isWindow;\n  jQuery.camelCase = camelCase;\n  jQuery.type = toType;\n  jQuery.now = Date.now;\n\n  jQuery.isNumeric = function (obj) {\n    // As of jQuery 3.0, isNumeric is limited to\n    // strings and numbers (primitives or objects)\n    // that can be coerced to finite numbers (gh-2662)\n    var type = jQuery.type(obj);\n    return (type === \"number\" || type === \"string\") && // parseFloat NaNs numeric-cast false positives (\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    !isNaN(obj - parseFloat(obj));\n  };\n\n  jQuery.trim = function (text) {\n    return text == null ? \"\" : (text + \"\").replace(rtrim, \"\");\n  }; // Register as a named AMD module, since jQuery can be concatenated with other\n  // files that may use define, but not via a proper concatenation script that\n  // understands anonymous AMD modules. A named AMD is safest and most robust\n  // way to register. Lowercase jquery is used because AMD module names are\n  // derived from file names, and jQuery is normally delivered in a lowercase\n  // file name. Do this after creating the global so that if an AMD module wants\n  // to call noConflict to hide this version of jQuery, it will work.\n  // Note that for maximum portability, libraries that are not jQuery should\n  // declare themselves as anonymous modules, and avoid setting a global if an\n  // AMD loader is present. jQuery is a special case. For more information, see\n  // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return jQuery;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n\n  var // Map over jQuery in case of overwrite\n  _jQuery = window.jQuery,\n      // Map over the $ in case of overwrite\n  _$ = window.$;\n\n  jQuery.noConflict = function (deep) {\n    if (window.$ === jQuery) {\n      window.$ = _$;\n    }\n\n    if (deep && window.jQuery === jQuery) {\n      window.jQuery = _jQuery;\n    }\n\n    return jQuery;\n  }; // Expose jQuery and $ identifiers, even in AMD\n  // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n  // and CommonJS for browser emulators (#13566)\n\n\n  if (typeof noGlobal === \"undefined\") {\n    window.jQuery = window.$ = jQuery;\n  }\n\n  return jQuery;\n});\n\n//# sourceURL=webpack:///./node_modules/jquery/dist/jquery.js?");

/***/ }),

/***/ "./node_modules/lyam/dist/index.esm.js":
/*!*********************************************!*\
  !*** ./node_modules/lyam/dist/index.esm.js ***!
  \*********************************************/
/*! exports provided: extLink, file, hit, hitExt, notBounce, reachGoal, userVars */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"extLink\", function() { return extLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"file\", function() { return file; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hit\", function() { return hit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hitExt\", function() { return hitExt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"notBounce\", function() { return notBounce; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reachGoal\", function() { return reachGoal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"userVars\", function() { return userVars; });\nvar hasDocument = typeof document !== 'undefined';\nvar hasWindow = typeof window !== 'undefined';\nvar hasNavigator = typeof navigator != 'undefined';\nvar hasScreen = typeof screen != 'undefined';\n\nfunction getCharset() {\n  return hasDocument && typeof document.charset === 'string' ? document.charset.toLowerCase() : '';\n}\n\nfunction getHost() {\n  return hasWindow && window.location ? window.location.hostname : '';\n}\n\nfunction getPageUrl() {\n  return hasWindow && window.location ? window.location.href : '';\n}\n\nfunction getReferrer() {\n  return hasDocument ? document.referrer : '';\n}\n\nfunction getTitle() {\n  return hasDocument ? document.title : '';\n}\n\nfunction cookieEnabled() {\n  return hasNavigator ? navigator.cookieEnabled : false;\n}\n\nfunction getScreenSize() {\n  return hasScreen ? [screen.width, screen.height, screen.colorDepth].join('x') : '';\n}\n\nfunction truncate(str, len) {\n  return (str || '').slice(0, len);\n}\n\nfunction getRandom() {\n  return Math.floor(Math.random() * 1E6);\n}\n\nvar MAX_TITLE_LEN = 512;\n\nfunction addParam(result, name, value) {\n  if (value || value === 0) {\n    result.push(name + ':' + (value === true ? '1' : value));\n  }\n}\n\nfunction getBrowserInfo(params, title) {\n  var result = [];\n\n  if (params) {\n    Object.keys(params).forEach(function (key) {\n      return addParam(result, key, params[key]);\n    });\n  }\n\n  addParam(result, 'rn', getRandom());\n  addParam(result, 'c', cookieEnabled());\n  addParam(result, 's', getScreenSize());\n  addParam(result, 'en', getCharset());\n  addParam(result, 't', truncate(title, MAX_TITLE_LEN));\n  return result.join(':');\n}\n\nfunction queryStringify(params) {\n  return Object.keys(params).filter(function (key) {\n    return params[key] || params[key] === 0;\n  }).map(function (key) {\n    return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n  }).join('&');\n}\n\nvar MAX_URL_LEN = 1024;\n\nfunction prepareUrl(url) {\n  return truncate(url, MAX_URL_LEN);\n}\n\nfunction sendData(counterId, queryParams) {\n  var url = 'https://mc.yandex.ru/watch/' + counterId + '?' + queryStringify(queryParams);\n  var hasBeacon = typeof navigator !== 'undefined' && navigator.sendBeacon;\n\n  if (!hasBeacon || !navigator.sendBeacon(url, ' ')) {\n    if (typeof fetch !== 'undefined') {\n      fetch(url, {\n        credentials: 'include'\n      });\n    } else if (typeof Image !== 'undefined') {\n      new Image().src = url;\n    }\n  }\n}\n\nfunction hitExt(params) {\n  var browserInfo = params.browserInfo,\n      counterId = params.counterId,\n      pageParams = params.pageParams,\n      userVars = params.userVars;\n  var data = {\n    'browser-info': getBrowserInfo(browserInfo, pageParams.title),\n    rn: getRandom(),\n    ut: pageParams.ut\n  };\n\n  if (pageParams.url) {\n    data['page-url'] = prepareUrl(pageParams.url);\n  }\n\n  if (pageParams.referrer) {\n    data['page-ref'] = prepareUrl(pageParams.referrer);\n  }\n\n  if (userVars) {\n    data['site-info'] = JSON.stringify(userVars);\n  }\n\n  sendData(counterId, data);\n}\n/**\n * Отправка хита.\n *\n * @param counterId - Номер счётчика.\n * @param hitParams -  Параметры страницы.\n * @param userVars - Параметры визитов.\n *\n * @example\n * hit('123456');\n *\n * hit('123456', {\n *     referer: document.referer,\n *     title: document.title,\n *     url: window.location.href\n * }, {\n *     myParam: 'value'\n * });\n */\n\n\nfunction hit(counterId, hitParams, userVars) {\n  var referrer = hitParams && hitParams.referrer !== undefined ? hitParams.referrer : getReferrer();\n  var title = hitParams && hitParams.title !== undefined ? hitParams.title : getTitle();\n  var url = hitParams && hitParams.url !== undefined ? hitParams.url : getPageUrl();\n  hitExt({\n    counterId: counterId,\n    pageParams: {\n      referrer: referrer,\n      title: title,\n      url: url\n    },\n    userVars: userVars\n  });\n}\n/**\n * Достижение цели.\n *\n * @param counterId - Номер счётчика.\n * @param name - Название цели.\n * @param userVars - Параметры визитов.\n *\n * @example\n * reachGoal('123456', 'goalName');\n*/\n\n\nfunction reachGoal(counterId, name, userVars) {\n  var referrer;\n  var url;\n\n  if (name) {\n    referrer = getPageUrl();\n    url = \"goal://\" + getHost() + \"/\" + name;\n  } else {\n    referrer = getReferrer();\n    url = getPageUrl();\n  }\n\n  hitExt({\n    counterId: counterId,\n    pageParams: {\n      referrer: referrer,\n      url: url\n    },\n    userVars: userVars\n  });\n}\n/**\n * Внешняя ссылка.\n *\n * @param counterId - Номер счётчика.\n * @param link - Адрес ссылки.\n * @param title - Заголовок страницы.\n *\n * @example\n * extLink('12356', 'https://example.com');\n */\n\n\nfunction extLink(counterId, link, title) {\n  if (link) {\n    hitExt({\n      browserInfo: {\n        ln: true\n      },\n      counterId: counterId,\n      pageParams: {\n        referrer: getPageUrl(),\n        title: title,\n        url: link,\n        ut: 'noindex'\n      }\n    });\n  }\n}\n/**\n * Загрузка файла.\n *\n * @param counterId - Номер счётчика.\n * @param file - Ссылка на файл.\n * @param title - Заголовок страницы.\n *\n * @example\n * file('123456', 'https://mysite.com/file.zip');\n */\n\n\nfunction file(counterId, file, title) {\n  if (file) {\n    hitExt({\n      browserInfo: {\n        dl: true,\n        ln: true\n      },\n      counterId: counterId,\n      pageParams: {\n        referrer: getReferrer(),\n        title: title,\n        url: file\n      }\n    });\n  }\n}\n/**\n * Параметры визитов.\n *\n * @param counterId - Номер счётчика.\n * @param data - Параметры визитов.\n *\n * @example\n * userVars('123456', { myParam: 'value' });\n */\n\n\nfunction userVars(counterId, data) {\n  if (data) {\n    hitExt({\n      browserInfo: {\n        pa: true\n      },\n      counterId: counterId,\n      pageParams: {},\n      userVars: data\n    });\n  }\n}\n/**\n * Не отказ.\n *\n * @example\n * notBounce('123456');\n */\n\n\nfunction notBounce(counterId) {\n  hitExt({\n    browserInfo: {\n      nb: true\n    },\n    counterId: counterId,\n    pageParams: {}\n  });\n}\n\n\n\n//# sourceURL=webpack:///./node_modules/lyam/dist/index.esm.js?");

/***/ }),

/***/ "./node_modules/show-js-error/dist/show-js-error.custom.js":
/*!*****************************************************************!*\
  !*** ./node_modules/show-js-error/dist/show-js-error.custom.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*! show-js-error | © 2020 Denis Seleznev | MIT License */\n(function (global, factory) {\n   true ? module.exports = factory() : undefined;\n})(this, function () {\n  'use strict';\n\n  var showJSError = {\n    // eslint-disable-line no-unused-vars\n\n    /**\n     * Initialize.\n     *\n     * @param {Object} [settings]\n     * @param {String} [settings.title]\n     * @param {String} [settings.userAgent]\n     * @param {String} [settings.copyText]\n     * @param {String} [settings.sendText]\n     * @param {String} [settings.sendUrl]\n     * @param {String} [settings.additionalText]\n     * @param {Boolean} [settings.helpLinks]\n     */\n    init: function (settings) {\n      if (this._inited) {\n        return;\n      }\n\n      var that = this,\n          isAndroidOrIOS = /(Android|iPhone|iPod|iPad)/i.test(navigator.userAgent);\n      this.settings = settings || {};\n      this._inited = true;\n      this._isLast = true;\n      this._i = 0;\n      this._buffer = [];\n\n      this._onerror = function (e) {\n        if (isAndroidOrIOS && e && e.message === 'Script error.' && !e.lineno && !e.filename) {\n          return;\n        }\n\n        that._buffer.push(e);\n\n        if (that._isLast) {\n          that._i = that._buffer.length - 1;\n        }\n\n        that._update();\n      };\n\n      if (window.addEventListener) {\n        window.addEventListener('error', this._onerror, false);\n      } else {\n        this._oldOnError = window.onerror;\n\n        window.onerror = function (message, filename, lineno, colno, error) {\n          that._onerror({\n            message: message,\n            filename: filename,\n            lineno: lineno,\n            colno: colno,\n            error: error\n          });\n\n          if (typeof that._oldOnError === 'function') {\n            that._oldOnError.apply(window, arguments);\n          }\n        };\n      }\n    },\n\n    /**\n     * Destructor.\n     */\n    destruct: function () {\n      if (!this._inited) {\n        return;\n      }\n\n      if (window.addEventListener) {\n        window.removeEventListener('error', this._onerror, false);\n      } else {\n        window.onerror = this._oldOnError || null;\n        delete this._oldOnError;\n      }\n\n      if (document.body && this._container) {\n        document.body.removeChild(this._container);\n      }\n\n      this._buffer = [];\n      this._inited = false;\n    },\n\n    /**\n     * Show error message.\n     *\n     * @param {String|Object|Error} err\n     */\n    show: function (err) {\n      if (typeof err !== 'undefined') {\n        this._buffer.push(typeof err === 'object' ? err : new Error(err));\n      }\n\n      this._update();\n\n      this._show();\n    },\n\n    /**\n     * Hide error message.\n     */\n    hide: function () {\n      if (this._container) {\n        this._container.className = this.elemClass('');\n      }\n    },\n\n    /**\n     * Copy error message to clipboard.\n     */\n    copyText: function () {\n      var err = this._buffer[this._i],\n          text = this._getDetailedMessage(err),\n          body = document.body,\n          textarea = this.elem({\n        name: 'textarea',\n        tag: 'textarea',\n        props: {\n          innerHTML: text\n        },\n        container: body\n      });\n\n      try {\n        textarea.select();\n        document.execCommand('copy');\n      } catch (e) {\n        alert('Copying text is not supported in this browser.');\n      }\n\n      body.removeChild(textarea);\n    },\n\n    /**\n     * Create a elem.\n     *\n     * @param {Object} data\n     * @param {String} data.name\n     * @param {DOMElement} data.container\n     * @param {String} [data.tag]\n     * @param {Object} [data.props]\n     * @returns {DOMElement}\n     */\n    elem: function (data) {\n      var el = document.createElement(data.tag || 'div'),\n          props = data.props;\n\n      for (var i in props) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (props.hasOwnProperty(i)) {\n          el[i] = props[i];\n        }\n      }\n\n      el.className = this.elemClass(data.name);\n      data.container.appendChild(el);\n      return el;\n    },\n\n    /**\n     * Build className for elem.\n     *\n     * @param {String} [name]\n     * @param {String} [mod]\n     * @returns {String}\n     */\n    elemClass: function (name, mod) {\n      var cl = 'show-js-error';\n\n      if (name) {\n        cl += '__' + name;\n      }\n\n      if (mod) {\n        cl += ' ' + cl + '_' + mod;\n      }\n\n      return cl;\n    },\n\n    /**\n     * Escape HTML.\n     *\n     * @param {String} text\n     * @returns {String}\n     */\n    escapeHTML: function (text) {\n      return (text || '').replace(/[&<>\"'/]/g, function (sym) {\n        return {\n          '&': '&amp;',\n          '<': '&lt;',\n          '>': '&gt;',\n          '\"': '&quot;',\n          '\\'': '&#39;',\n          '/': '&#x2F;'\n        }[sym];\n      });\n    },\n\n    /**\n     * Toggle view (shortly/detail).\n     */\n    toggleDetailed: function () {\n      var body = this._body;\n\n      if (body) {\n        if (this._toggleDetailed) {\n          this._toggleDetailed = false;\n          body.className = this.elemClass('body');\n        } else {\n          this._toggleDetailed = true;\n          body.className = this.elemClass('body', 'detailed');\n        }\n      }\n    },\n    _append: function () {\n      var that = this;\n      this._container = document.createElement('div');\n      this._container.className = this.elemClass('');\n      this._title = this.elem({\n        name: 'title',\n        props: {\n          innerHTML: this._getTitle()\n        },\n        container: this._container\n      });\n      this._body = this.elem({\n        name: 'body',\n        container: this._container\n      });\n      this._message = this.elem({\n        name: 'message',\n        props: {\n          onclick: function () {\n            that.toggleDetailed();\n          }\n        },\n        container: this._body\n      });\n\n      if (this.settings.helpLinks) {\n        this._helpLinks = this.elem({\n          name: 'help',\n          container: this._body\n        });\n        this._mdn = this.elem({\n          tag: 'a',\n          name: 'mdn',\n          props: {\n            target: '_blank',\n            innerHTML: 'MDN'\n          },\n          container: this._helpLinks\n        });\n        this._stackoverflow = this.elem({\n          tag: 'a',\n          name: 'stackoverflow',\n          props: {\n            target: '_blank',\n            innerHTML: 'Stack Overflow'\n          },\n          container: this._helpLinks\n        });\n      }\n\n      this._filename = this.elem({\n        name: 'filename',\n        container: this._body\n      });\n\n      if (this.settings.userAgent) {\n        this._ua = this.elem({\n          name: 'ua',\n          container: this._body\n        });\n      }\n\n      if (this.settings.additionalText) {\n        this._additionalText = this.elem({\n          name: 'additional-text',\n          container: this._body\n        });\n      }\n\n      this.elem({\n        name: 'close',\n        props: {\n          innerHTML: '×',\n          onclick: function () {\n            that.hide();\n          }\n        },\n        container: this._container\n      });\n      this._actions = this.elem({\n        name: 'actions',\n        container: this._container\n      });\n      this.elem({\n        tag: 'input',\n        name: 'copy',\n        props: {\n          type: 'button',\n          value: this.settings.copyText || 'Copy',\n          onclick: function () {\n            that.copyText();\n          }\n        },\n        container: this._actions\n      });\n\n      if (this.settings.sendUrl) {\n        this._sendLink = this.elem({\n          tag: 'a',\n          name: 'send-link',\n          props: {\n            href: '',\n            target: '_blank'\n          },\n          container: this._actions\n        });\n        this._send = this.elem({\n          tag: 'input',\n          name: 'send',\n          props: {\n            type: 'button',\n            value: this.settings.sendText || 'Send'\n          },\n          container: this._sendLink\n        });\n      }\n\n      this._arrows = this.elem({\n        tag: 'span',\n        name: 'arrows',\n        container: this._actions\n      });\n      this._prev = this.elem({\n        tag: 'input',\n        name: 'prev',\n        props: {\n          type: 'button',\n          value: '←',\n          onclick: function () {\n            that._isLast = false;\n\n            if (that._i) {\n              that._i--;\n            }\n\n            that._update();\n          }\n        },\n        container: this._arrows\n      });\n      this._next = this.elem({\n        tag: 'input',\n        name: 'next',\n        props: {\n          type: 'button',\n          value: '→',\n          onclick: function () {\n            that._isLast = false;\n\n            if (that._i < that._buffer.length - 1) {\n              that._i++;\n            }\n\n            that._update();\n          }\n        },\n        container: this._arrows\n      });\n      this._num = this.elem({\n        tag: 'span',\n        name: 'num',\n        props: {\n          innerHTML: this._i + 1\n        },\n        container: this._arrows\n      });\n\n      var append = function () {\n        document.body.appendChild(that._container);\n      };\n\n      if (document.body) {\n        append();\n      } else {\n        if (document.addEventListener) {\n          document.addEventListener('DOMContentLoaded', append, false);\n        } else if (document.attachEvent) {\n          document.attachEvent('onload', append);\n        }\n      }\n    },\n    _getDetailedMessage: function (err) {\n      var settings = this.settings,\n          screen = typeof window.screen === 'object' ? window.screen : {},\n          orientation = screen.orientation || screen.mozOrientation || screen.msOrientation || '',\n          props = [['Title', err.title || this._getTitle()], ['Message', this._getMessage(err)], ['Filename', this._getFilenameWithPosition(err)], ['Stack', this._getStack(err)], ['Page url', window.location.href], ['Refferer', document.referrer], ['User-agent', settings.userAgent || navigator.userAgent], ['Screen size', [screen.width, screen.height, screen.colorDepth].join('×')], ['Screen orientation', typeof orientation === 'string' ? orientation : orientation.type], ['Cookie enabled', navigator.cookieEnabled]];\n      var text = '';\n\n      for (var i = 0; i < props.length; i++) {\n        var item = props[i];\n        text += item[0] + ': ' + item[1] + '\\n';\n      }\n\n      if (settings.templateDetailedMessage) {\n        text = settings.templateDetailedMessage.replace(/\\{message\\}/, text);\n      }\n\n      return text;\n    },\n    _getExtFilename: function (e) {\n      var filename = e.filename,\n          html = this.escapeHTML(this._getFilenameWithPosition(e));\n\n      if (filename && filename.search(/^(https?|file):/) > -1) {\n        return '<a target=\"_blank\" href=\"' + this.escapeHTML(filename) + '\">' + html + '</a>';\n      } else {\n        return html;\n      }\n    },\n    _get: function (value, defaultValue) {\n      return typeof value !== 'undefined' ? value : defaultValue;\n    },\n    _getFilenameWithPosition: function (e) {\n      var text = e.filename || '';\n\n      if (typeof e.lineno !== 'undefined') {\n        text += ':' + this._get(e.lineno, '');\n\n        if (typeof e.colno !== 'undefined') {\n          text += ':' + this._get(e.colno, '');\n        }\n      }\n\n      return text;\n    },\n    _getMessage: function (e) {\n      var msg = e.message; // IE\n\n      if (e.error && e.error.name && 'number' in e.error) {\n        msg = e.error.name + ': ' + msg;\n      }\n\n      return msg;\n    },\n    _getStack: function (err) {\n      return err.error && err.error.stack || err.stack || '';\n    },\n    _getTitle: function () {\n      return this.settings.title || 'JavaScript error';\n    },\n    _show: function () {\n      this._container.className = this.elemClass('', 'visible');\n    },\n    _highlightLinks: function (text) {\n      return text.replace(/(at | \\(|@)(https?|file)(:.*?)(?=:\\d+:\\d+\\)?$)/gm, function ($0, $1, $2, $3) {\n        var url = $2 + $3;\n        return $1 + '<a target=\"_blank\" href=\"' + url + '\">' + url + '</a>';\n      });\n    },\n    _update: function () {\n      if (!this._appended) {\n        this._append();\n\n        this._appended = true;\n      }\n\n      var e = this._buffer[this._i],\n          stack = this._getStack(e),\n          filename;\n\n      if (stack) {\n        filename = this._highlightLinks(this.escapeHTML(stack));\n      } else {\n        filename = this._getExtFilename(e);\n      }\n\n      this._title.innerHTML = this.escapeHTML(e.title || this._getTitle());\n      this._message.innerHTML = this.escapeHTML(this._getMessage(e));\n      this._filename.innerHTML = filename;\n\n      if (this._ua) {\n        this._ua.innerHTML = this.escapeHTML(this.settings.userAgent);\n      }\n\n      if (this._additionalText) {\n        this._additionalText.innerHTML = this.escapeHTML(this.settings.additionalText);\n      }\n\n      if (this._sendLink) {\n        this._sendLink.href = this.settings.sendUrl.replace(/\\{title\\}/, encodeURIComponent(this._getMessage(e))).replace(/\\{body\\}/, encodeURIComponent(this._getDetailedMessage(e)));\n      }\n\n      if (this._buffer.length > 1) {\n        this._arrows.className = this.elemClass('arrows', 'visible');\n      }\n\n      if (this._helpLinks) {\n        this._mdn.href = 'https://developer.mozilla.org/en-US/search?q=' + encodeURIComponent(e.message || e.stack || '');\n        this._stackoverflow.href = 'https://stackoverflow.com/search?q=' + encodeURIComponent('[js] ' + (e.message || e.stack || ''));\n      }\n\n      this._prev.disabled = !this._i;\n      this._num.innerHTML = this._i + 1 + '&thinsp;/&thinsp;' + this._buffer.length;\n      this._next.disabled = this._i === this._buffer.length - 1;\n\n      this._show();\n    }\n  };\n  return showJSError;\n});\n\n//# sourceURL=webpack:///./node_modules/show-js-error/dist/show-js-error.custom.js?");

/***/ }),

/***/ "./node_modules/throttle-debounce/dist/index.esm.js":
/*!**********************************************************!*\
  !*** ./node_modules/throttle-debounce/dist/index.esm.js ***!
  \**********************************************************/
/*! exports provided: throttle, debounce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"throttle\", function() { return throttle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"debounce\", function() { return debounce; });\n/* eslint-disable no-undefined,no-param-reassign,no-shadow */\n\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param  {Number}    delay          A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  {Boolean}   [noTrailing]   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds while the\n *                                    throttled-function is being called. If noTrailing is false or unspecified, callback will be executed one final time\n *                                    after the last throttled-function call. (After the throttled-function has not been called for `delay` milliseconds,\n *                                    the internal counter is reset)\n * @param  {Function}  callback       A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                    to `callback` when the throttled-function is executed.\n * @param  {Boolean}   [debounceMode] If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is false (at end),\n *                                    schedule `callback` to execute after `delay` ms.\n *\n * @return {Function}  A new, throttled, function.\n */\nfunction throttle(delay, noTrailing, callback, debounceMode) {\n  /*\n   * After wrapper has stopped being called, this timeout ensures that\n   * `callback` is executed at the proper times in `throttle` and `end`\n   * debounce modes.\n   */\n  var timeoutID;\n  var cancelled = false; // Keep track of the last time `callback` was executed.\n\n  var lastExec = 0; // Function to clear existing timeout\n\n  function clearExistingTimeout() {\n    if (timeoutID) {\n      clearTimeout(timeoutID);\n    }\n  } // Function to cancel next exec\n\n\n  function cancel() {\n    clearExistingTimeout();\n    cancelled = true;\n  } // `noTrailing` defaults to falsy.\n\n\n  if (typeof noTrailing !== 'boolean') {\n    debounceMode = callback;\n    callback = noTrailing;\n    noTrailing = undefined;\n  }\n  /*\n   * The `wrapper` function encapsulates all of the throttling / debouncing\n   * functionality and when executed will limit the rate at which `callback`\n   * is executed.\n   */\n\n\n  function wrapper() {\n    var self = this;\n    var elapsed = Date.now() - lastExec;\n    var args = arguments;\n\n    if (cancelled) {\n      return;\n    } // Execute `callback` and update the `lastExec` timestamp.\n\n\n    function exec() {\n      lastExec = Date.now();\n      callback.apply(self, args);\n    }\n    /*\n     * If `debounceMode` is true (at begin) this is used to clear the flag\n     * to allow future `callback` executions.\n     */\n\n\n    function clear() {\n      timeoutID = undefined;\n    }\n\n    if (debounceMode && !timeoutID) {\n      /*\n       * Since `wrapper` is being called for the first time and\n       * `debounceMode` is true (at begin), execute `callback`.\n       */\n      exec();\n    }\n\n    clearExistingTimeout();\n\n    if (debounceMode === undefined && elapsed > delay) {\n      /*\n       * In throttle mode, if `delay` time has been exceeded, execute\n       * `callback`.\n       */\n      exec();\n    } else if (noTrailing !== true) {\n      /*\n       * In trailing throttle mode, since `delay` time has not been\n       * exceeded, schedule `callback` to execute `delay` ms after most\n       * recent execution.\n       *\n       * If `debounceMode` is true (at begin), schedule `clear` to execute\n       * after `delay` ms.\n       *\n       * If `debounceMode` is false (at end), schedule `callback` to\n       * execute after `delay` ms.\n       */\n      timeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);\n    }\n  }\n\n  wrapper.cancel = cancel; // Return the wrapper function.\n\n  return wrapper;\n}\n/* eslint-disable no-undefined */\n\n/**\n * Debounce execution of a function. Debouncing, unlike throttling,\n * guarantees that a function is only executed a single time, either at the\n * very beginning of a series of calls, or at the very end.\n *\n * @param  {Number}   delay         A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  {Boolean}  [atBegin]     Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds\n *                                  after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.\n *                                  (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).\n * @param  {Function} callback      A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                  to `callback` when the debounced-function is executed.\n *\n * @return {Function} A new, debounced function.\n */\n\n\nfunction debounce(delay, atBegin, callback) {\n  return callback === undefined ? throttle(delay, atBegin, false) : throttle(delay, callback, atBegin !== false);\n}\n\n\n\n//# sourceURL=webpack:///./node_modules/throttle-debounce/dist/index.esm.js?");

/***/ }),

/***/ "./node_modules/typograf/dist/typograf.all.js":
/*!****************************************************!*\
  !*** ./node_modules/typograf/dist/typograf.all.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*! typograf | © 2020 Denis Seleznev | MIT  License | https://github.com/typograf/typograf */\n(function (global, factory) {\n   true ? module.exports = factory() : undefined;\n})(this, function () {\n  'use strict';\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var groupIndexes = {\n    symbols: 110,\n    space: 210,\n    dash: 310,\n    punctuation: 410,\n    nbsp: 510,\n    'number': 610,\n    money: 710,\n    date: 810,\n    other: 910,\n    optalign: 1010,\n    typo: 1110,\n    html: 1210\n  }; // http://www.w3.org/TR/html4/sgml/entities\n\n  var visibleEntities = [['iexcl', 161], ['cent', 162], ['pound', 163], ['curren', 164], ['yen', 165], ['brvbar', 166], ['sect', 167], ['uml', 168], ['copy', 169], ['ordf', 170], ['laquo', 171], ['not', 172], ['reg', 174], ['macr', 175], ['deg', 176], ['plusmn', 177], ['sup2', 178], ['sup3', 179], ['acute', 180], ['micro', 181], ['para', 182], ['middot', 183], ['cedil', 184], ['sup1', 185], ['ordm', 186], ['raquo', 187], ['frac14', 188], ['frac12', 189], ['frac34', 190], ['iquest', 191], ['Agrave', 192], ['Aacute', 193], ['Acirc', 194], ['Atilde', 195], ['Auml', 196], ['Aring', 197], ['AElig', 198], ['Ccedil', 199], ['Egrave', 200], ['Eacute', 201], ['Ecirc', 202], ['Euml', 203], ['Igrave', 204], ['Iacute', 205], ['Icirc', 206], ['Iuml', 207], ['ETH', 208], ['Ntilde', 209], ['Ograve', 210], ['Oacute', 211], ['Ocirc', 212], ['Otilde', 213], ['Ouml', 214], ['times', 215], ['Oslash', 216], ['Ugrave', 217], ['Uacute', 218], ['Ucirc', 219], ['Uuml', 220], ['Yacute', 221], ['THORN', 222], ['szlig', 223], ['agrave', 224], ['aacute', 225], ['acirc', 226], ['atilde', 227], ['auml', 228], ['aring', 229], ['aelig', 230], ['ccedil', 231], ['egrave', 232], ['eacute', 233], ['ecirc', 234], ['euml', 235], ['igrave', 236], ['iacute', 237], ['icirc', 238], ['iuml', 239], ['eth', 240], ['ntilde', 241], ['ograve', 242], ['oacute', 243], ['ocirc', 244], ['otilde', 245], ['ouml', 246], ['divide', 247], ['oslash', 248], ['ugrave', 249], ['uacute', 250], ['ucirc', 251], ['uuml', 252], ['yacute', 253], ['thorn', 254], ['yuml', 255], ['fnof', 402], ['Alpha', 913], ['Beta', 914], ['Gamma', 915], ['Delta', 916], ['Epsilon', 917], ['Zeta', 918], ['Eta', 919], ['Theta', 920], ['Iota', 921], ['Kappa', 922], ['Lambda', 923], ['Mu', 924], ['Nu', 925], ['Xi', 926], ['Omicron', 927], ['Pi', 928], ['Rho', 929], ['Sigma', 931], ['Tau', 932], ['Upsilon', 933], ['Phi', 934], ['Chi', 935], ['Psi', 936], ['Omega', 937], ['alpha', 945], ['beta', 946], ['gamma', 947], ['delta', 948], ['epsilon', 949], ['zeta', 950], ['eta', 951], ['theta', 952], ['iota', 953], ['kappa', 954], ['lambda', 955], ['mu', 956], ['nu', 957], ['xi', 958], ['omicron', 959], ['pi', 960], ['rho', 961], ['sigmaf', 962], ['sigma', 963], ['tau', 964], ['upsilon', 965], ['phi', 966], ['chi', 967], ['psi', 968], ['omega', 969], ['thetasym', 977], ['upsih', 978], ['piv', 982], ['bull', 8226], ['hellip', 8230], ['prime', 8242], ['Prime', 8243], ['oline', 8254], ['frasl', 8260], ['weierp', 8472], ['image', 8465], ['real', 8476], ['trade', 8482], ['alefsym', 8501], ['larr', 8592], ['uarr', 8593], ['rarr', 8594], ['darr', 8595], ['harr', 8596], ['crarr', 8629], ['lArr', 8656], ['uArr', 8657], ['rArr', 8658], ['dArr', 8659], ['hArr', 8660], ['forall', 8704], ['part', 8706], ['exist', 8707], ['empty', 8709], ['nabla', 8711], ['isin', 8712], ['notin', 8713], ['ni', 8715], ['prod', 8719], ['sum', 8721], ['minus', 8722], ['lowast', 8727], ['radic', 8730], ['prop', 8733], ['infin', 8734], ['ang', 8736], ['and', 8743], ['or', 8744], ['cap', 8745], ['cup', 8746], ['int', 8747], ['there4', 8756], ['sim', 8764], ['cong', 8773], ['asymp', 8776], ['ne', 8800], ['equiv', 8801], ['le', 8804], ['ge', 8805], ['sub', 8834], ['sup', 8835], ['nsub', 8836], ['sube', 8838], ['supe', 8839], ['oplus', 8853], ['otimes', 8855], ['perp', 8869], ['sdot', 8901], ['lceil', 8968], ['rceil', 8969], ['lfloor', 8970], ['rfloor', 8971], ['lang', 9001], ['rang', 9002], ['spades', 9824], ['clubs', 9827], ['hearts', 9829], ['diams', 9830], ['loz', 9674], ['OElig', 338], ['oelig', 339], ['Scaron', 352], ['scaron', 353], ['Yuml', 376], ['circ', 710], ['tilde', 732], ['ndash', 8211], ['mdash', 8212], ['lsquo', 8216], ['rsquo', 8217], ['sbquo', 8218], ['ldquo', 8220], ['rdquo', 8221], ['bdquo', 8222], ['dagger', 8224], ['Dagger', 8225], ['permil', 8240], ['lsaquo', 8249], ['rsaquo', 8250], ['euro', 8364], ['NestedGreaterGreater', 8811], ['NestedLessLess', 8810]];\n  var invisibleEntities = [['nbsp', 160], ['thinsp', 8201], ['ensp', 8194], ['emsp', 8195], ['shy', 173], ['zwnj', 8204], ['zwj', 8205], ['lrm', 8206], ['rlm', 8207]];\n\n  var HtmlEntities = /*#__PURE__*/function () {\n    function HtmlEntities() {\n      _classCallCheck(this, HtmlEntities);\n\n      this._entities = this._prepareEntities([].concat(visibleEntities, invisibleEntities));\n      this._entitiesByName = {};\n      this._entitiesByNameEntity = {};\n      this._entitiesByDigitEntity = {};\n      this._entitiesByUtf = {};\n\n      this._entities.forEach(function (entity) {\n        this._entitiesByName[entity.name] = entity;\n        this._entitiesByNameEntity[entity.nameEntity] = entity;\n        this._entitiesByDigitEntity[entity.digitEntity] = entity;\n        this._entitiesByUtf[entity.utf] = entity;\n      }, this);\n\n      this._invisibleEntities = this._prepareEntities(invisibleEntities);\n    }\n    /**\n     * Entities as name or digit to UTF-8.\n     *\n     * @param {Object} context\n     */\n\n\n    _createClass(HtmlEntities, [{\n      key: \"toUtf\",\n      value: function toUtf(context) {\n        var _this = this;\n\n        if (context.text.search(/&#/) !== -1) {\n          context.text = this.decHexToUtf(context.text);\n        }\n\n        if (context.text.search(/&[a-z]/i) !== -1) {\n          // 2 - min length of entity without & and ;. Example: &DD;\n          // 31 - max length of entity without & and ;. Example: &CounterClockwiseContourIntegral;\n          context.text = context.text.replace(/&[a-z\\d]{2,31};/gi, function (key) {\n            var entity = _this._entitiesByNameEntity[key];\n            return entity ? entity.utf : key;\n          });\n        }\n      }\n      /**\n       * Entities in decimal or hexadecimal form to UTF-8.\n       *\n       * @param {string} text\n       * @returns {string}\n       */\n\n    }, {\n      key: \"decHexToUtf\",\n      value: function decHexToUtf(text) {\n        return text.replace(/&#(\\d{1,6});/gi, function ($0, $1) {\n          return String.fromCharCode(parseInt($1, 10));\n        }).replace(/&#x([\\da-f]{1,6});/gi, function ($0, $1) {\n          return String.fromCharCode(parseInt($1, 16));\n        });\n      }\n      /**\n       * Restore HTML entities in text.\n       *\n       * @param {Object} context\n       */\n\n    }, {\n      key: \"restore\",\n      value: function restore(context) {\n        var params = context.prefs.htmlEntity;\n        var type = params.type;\n        var entities = this._entities;\n\n        if (type === 'name' || type === 'digit') {\n          if (params.onlyInvisible || params.list) {\n            entities = [];\n\n            if (params.onlyInvisible) {\n              entities = entities.concat(this._invisibleEntities);\n            }\n\n            if (params.list) {\n              entities = entities.concat(this._prepareListParam(params.list));\n            }\n          }\n\n          context.text = this._restoreEntitiesByIndex(context.text, type + 'Entity', entities);\n        }\n      }\n      /**\n       * Get a entity by utf using the type.\n       *\n       * @param {string} symbol\n       * @param {string} [type]\n       * @returns {string}\n       */\n\n    }, {\n      key: \"getByUtf\",\n      value: function getByUtf(symbol, type) {\n        var result = '';\n\n        switch (type) {\n          case 'digit':\n            result = this._entitiesByDigitEntity[symbol];\n            break;\n\n          case 'name':\n            result = this._entitiesByNameEntity[symbol];\n            break;\n\n          default:\n            result = symbol;\n            break;\n        }\n\n        return result;\n      }\n    }, {\n      key: \"_prepareEntities\",\n      value: function _prepareEntities(entities) {\n        var result = [];\n        entities.forEach(function (entity) {\n          var _entity = _slicedToArray(entity, 2),\n              name = _entity[0],\n              digit = _entity[1];\n\n          var utf = String.fromCharCode(digit);\n          result.push({\n            name: name,\n            nameEntity: '&' + name + ';',\n            // &nbsp;\n            digitEntity: '&#' + digit + ';',\n            // &#160;\n            utf: utf,\n            // \\u00A0\n            reName: new RegExp('&' + name + ';', 'g'),\n            reUtf: new RegExp(utf, 'g')\n          });\n        }, this);\n        return result;\n      }\n    }, {\n      key: \"_prepareListParam\",\n      value: function _prepareListParam(list) {\n        var result = [];\n        list.forEach(function (name) {\n          var entity = this._entitiesByName[name];\n\n          if (entity) {\n            result.push(entity);\n          }\n        }, this);\n        return result;\n      }\n    }, {\n      key: \"_restoreEntitiesByIndex\",\n      value: function _restoreEntitiesByIndex(text, type, entities) {\n        entities.forEach(function (entity) {\n          text = text.replace(entity.reUtf, entity[type]);\n        });\n        return text;\n      }\n    }]);\n\n    return HtmlEntities;\n  }();\n\n  var HtmlEntities$1 = new HtmlEntities();\n  /**\n   * @typedef HtmlEntity\n   *\n   * @property {string} type - 'default' - UTF-8, 'digit' - &#160;, 'name' - &nbsp;\n   * @property {boolean} [onlyInvisible]\n   * @property {string[]} [list]\n   */\n\n  var locales = [];\n  /**\n   * Add a locale.\n   *\n   * @param {string} locale\n   */\n\n  function addLocale(locale) {\n    var code = (locale || '').split('/')[0];\n\n    if (code && code !== 'common' && !hasLocale(code)) {\n      locales.push(code);\n      locales.sort();\n    }\n  }\n  /**\n   * Get locales.\n   *\n   * @returns {Array}\n   */\n\n\n  function getLocales() {\n    return locales;\n  }\n  /**\n   * Has a locale.\n  *\n   * @param {string} locale\n   *\n   * @returns {boolean}\n   */\n\n\n  function hasLocale(locale) {\n    return locale === 'common' || locales.indexOf(locale) !== -1;\n  }\n\n  function prepareLocale(locale1, locale2) {\n    var locale = locale1 || locale2;\n    var result = locale;\n\n    if (!Array.isArray(locale)) {\n      result = [locale];\n    }\n\n    return result;\n  }\n\n  var data = {};\n  /**\n   * Get data for use in rules.\n   *\n   * @param {string} key\n   *\n   * @returns {*}\n   */\n\n  function getData(key) {\n    return data[key];\n  }\n  /**\n   * Set data for use in rules.\n   *\n   * @param {string|Object} key\n   * @param {*} [value]\n   */\n\n\n  function setData(key, value) {\n    if (typeof key === 'string') {\n      addLocale(key);\n      data[key] = value;\n    } else if (_typeof(key) === 'object') {\n      Object.keys(key).forEach(function (k) {\n        addLocale(k);\n        data[k] = key[k];\n      });\n    }\n  }\n\n  var inlineElements = ['a', 'abbr', 'acronym', 'b', 'bdo', 'big', 'br', 'button', 'cite', 'code', 'dfn', 'em', 'i', 'img', 'input', 'kbd', 'label', 'map', 'object', 'q', 'samp', 'script', 'select', 'small', 'span', 'strong', 'sub', 'sup', 'textarea', 'time', 'tt', 'var'];\n  var regExpUrl = new RegExp('(https?|file|ftp)://([a-zA-Z0-9/+-=%&:_.~?]+[a-zA-Z0-9#+]*)', 'g');\n  var regExpNumber = '\\\\d+([.,]\\\\d+)?';\n  var privateLabel = \"\\uF000\";\n  var privateSeparateLabel = \"\\uF001\";\n\n  var SafeTags = /*#__PURE__*/function () {\n    function SafeTags() {\n      _classCallCheck(this, SafeTags);\n\n      var html = [['<!--', '-->'], ['<!ENTITY', '>'], ['<!DOCTYPE', '>'], ['<\\\\?xml', '\\\\?>'], ['<!\\\\[CDATA\\\\[', '\\\\]\\\\]>']];\n      ['code', 'kbd', 'object', 'pre', 'samp', 'script', 'style', 'var'].forEach(function (tag) {\n        html.push(['<' + tag + '(\\\\s[^>]*?)?>', '</' + tag + '>']);\n      }, this);\n      this._tags = {\n        own: [],\n        html: html.map(this._prepareRegExp),\n        url: [regExpUrl]\n      };\n      this._groups = ['own', 'html', 'url'];\n    }\n    /**\n     * Add own safe tag.\n     *\n     * @param {RegExp|string[]} tag\n     */\n\n\n    _createClass(SafeTags, [{\n      key: \"add\",\n      value: function add(tag) {\n        this._tags.own.push(this._prepareRegExp(tag));\n      }\n      /**\n       * Show safe tags.\n       *\n       * @param {Object} context\n       * @param {string} group\n       */\n\n    }, {\n      key: \"show\",\n      value: function show(context, group) {\n        var reReplace = new RegExp(privateLabel + 'tf\\\\d+' + privateLabel, 'g');\n        var reSearch = new RegExp(privateLabel + 'tf\\\\d');\n\n        var replaceLabel = function replaceLabel(match) {\n          return context.safeTags.hidden[group][match] || match;\n        };\n\n        for (var i = 0, len = this._tags[group].length; i < len; i++) {\n          context.text = context.text.replace(reReplace, replaceLabel);\n\n          if (context.text.search(reSearch) === -1) {\n            break;\n          }\n        }\n      }\n      /**\n       * Hide safe tags.\n       *\n       * @param {Object} context\n       * @param {string} group\n       */\n\n    }, {\n      key: \"hide\",\n      value: function hide(context, group) {\n        context.safeTags = context.safeTags || {\n          hidden: {},\n          i: 0\n        };\n        context.safeTags.hidden[group] = {};\n\n        var pasteLabel = this._pasteLabel.bind(this, context, group);\n\n        this._tags[group].forEach(function (tag) {\n          context.text = context.text.replace(this._prepareRegExp(tag), pasteLabel);\n        }, this);\n      }\n      /**\n       * Hide HTML tags.\n       *\n       * @param {Object} context\n       */\n\n    }, {\n      key: \"hideHTMLTags\",\n      value: function hideHTMLTags(context) {\n        if (context.isHTML) {\n          var pasteLabel = this._pasteLabel.bind(this, context, 'html');\n\n          context.text = context.text.replace(/<\\/?[a-z][^]*?>/gi, pasteLabel) // Tags\n          .replace(/&lt;\\/?[a-z][^]*?&gt;/gi, pasteLabel) // Escaping tags\n          .replace(/&[gl]t;/gi, pasteLabel);\n        }\n      }\n      /**\n       * Get previous label.\n       *\n       * @param {string} text\n       * @param {number} position\n       *\n       * @returns {string|false}\n       */\n\n    }, {\n      key: \"getPrevLabel\",\n      value: function getPrevLabel(text, position) {\n        for (var i = position - 1; i >= 0; i--) {\n          if (text[i] === privateLabel) {\n            return text.slice(i, position + 1);\n          }\n        }\n\n        return false;\n      }\n      /**\n       * Get next label.\n       *\n       * @param {string} text\n       * @param {number} position\n       *\n       * @returns {string|false}\n       */\n\n    }, {\n      key: \"getNextLabel\",\n      value: function getNextLabel(text, position) {\n        for (var i = position + 1; i < text.length; i++) {\n          if (text[i] === privateLabel) {\n            return text.slice(position, i + 1);\n          }\n        }\n\n        return false;\n      }\n      /**\n       * Get a tag by a label.\n       *\n       * @param {Object} context\n       * @param {string} label\n       *\n       * @returns {Object|boolean}\n       */\n\n    }, {\n      key: \"getTagByLabel\",\n      value: function getTagByLabel(context, label) {\n        var result = false;\n\n        this._groups.some(function (group) {\n          var value = context.safeTags.hidden[group][label];\n\n          if (typeof value !== 'undefined') {\n            result = {\n              group: group,\n              value: value\n            };\n          }\n\n          return result;\n        });\n\n        return result;\n      }\n      /**\n       * Get info about a tag.\n       *\n       * @param {Object|undefined} tag\n       *\n       * @returns {Object|undefined}\n       */\n\n    }, {\n      key: \"getTagInfo\",\n      value: function getTagInfo(tag) {\n        if (!tag) {\n          return;\n        }\n\n        var result = {\n          group: tag.group\n        };\n\n        switch (tag.group) {\n          case 'html':\n            result.name = tag.value.split(/[<\\s>]/)[1];\n            result.isInline = inlineElements.indexOf(result.name) > -1;\n            result.isClosing = tag.value.search(/^<\\//) > -1;\n            break;\n\n          case 'url':\n            result.isInline = true;\n            break;\n\n          case 'own':\n            result.isInline = false;\n            break;\n        }\n\n        return result;\n      }\n    }, {\n      key: \"_pasteLabel\",\n      value: function _pasteLabel(context, group, match) {\n        var safeTags = context.safeTags;\n        var key = privateLabel + 'tf' + safeTags.i + privateLabel;\n        safeTags.hidden[group][key] = match;\n        safeTags.i++;\n        return key;\n      }\n    }, {\n      key: \"_prepareRegExp\",\n      value: function _prepareRegExp(tag) {\n        var re;\n\n        if (tag instanceof RegExp) {\n          re = tag;\n        } else {\n          var _tag = _slicedToArray(tag, 3),\n              startTag = _tag[0],\n              endTag = _tag[1],\n              middle = _tag[2];\n\n          if (typeof middle === 'undefined') {\n            middle = '[^]*?';\n          }\n\n          re = new RegExp(startTag + middle + endTag, 'gi');\n        }\n\n        return re;\n      }\n    }]);\n\n    return SafeTags;\n  }();\n\n  function repeat(symbol, count) {\n    var result = '';\n\n    for (;;) {\n      if ((count & 1) === 1) {\n        result += symbol;\n      }\n\n      count >>>= 1;\n\n      if (count === 0) {\n        break;\n      }\n\n      symbol += symbol;\n    }\n\n    return result;\n  }\n\n  function replaceNbsp(text) {\n    return text.replace(/\\u00A0/g, ' ');\n  }\n\n  function replace(text, re) {\n    for (var i = 0; i < re.length; i++) {\n      text = text.replace(re[i][0], re[i][1]);\n    }\n\n    return text;\n  }\n\n  function isHTML(text) {\n    return text.search(/(<\\/?[a-z]|<!|&[lg]t;)/i) !== -1;\n  }\n\n  function removeCR(text) {\n    return text.replace(/\\r\\n?/g, '\\n');\n  }\n\n  function fixLineEnding(text, type) {\n    if (type === 'CRLF') {\n      // Windows\n      return text.replace(/\\n/g, '\\r\\n');\n    } else if (type === 'CR') {\n      // Mac\n      return text.replace(/\\n/g, '\\r');\n    }\n\n    return text;\n  }\n  /**\n   * Get a deep copy of a object.\n   *\n   * @param {*} obj\n   *\n   * @returns {*}\n   */\n\n\n  function deepCopy(obj) {\n    return _typeof(obj) === 'object' ? JSON.parse(JSON.stringify(obj)) : obj;\n  }\n  /**\n   * @constructor\n   * @param {Object} [prefs]\n   * @param {string} [prefs.locale] Locale\n   * @param {string} [prefs.lineEnding] Line ending. 'LF' (Unix), 'CR' (Mac) or 'CRLF' (Windows). Default: 'LF'.\n   * @param {HtmlEntity} [prefs.htmlEntity]\n   * @param {boolean} [prefs.live] Live mode\n   * @param {string|string[]} [prefs.enableRule] Enable a rule\n   * @param {string|string[]} [prefs.disableRule] Disable a rule\n   */\n\n\n  var Typograf = /*#__PURE__*/function () {\n    function Typograf(prefs) {\n      _classCallCheck(this, Typograf);\n\n      this._prefs = _typeof(prefs) === 'object' ? prefs : {};\n      this._prefs.locale = prepareLocale(this._prefs.locale);\n      this._prefs.live = this._prefs.live || false;\n      this._safeTags = new SafeTags();\n      this._settings = {};\n      this._enabledRules = {};\n      this._innerRulesByQueues = {};\n      this._innerRules = [].concat(this._innerRules);\n\n      this._innerRules.forEach(function (rule) {\n        var q = rule.queue || 'default';\n        this._innerRulesByQueues[q] = this._innerRulesByQueues[q] || [];\n\n        this._innerRulesByQueues[q].push(rule);\n      }, this);\n\n      this._rulesByQueues = {};\n      this._rules = [].concat(this._rules);\n\n      this._rules.forEach(function (rule) {\n        var q = rule.queue || 'default';\n\n        this._prepareRule(rule);\n\n        this._rulesByQueues[q] = this._rulesByQueues[q] || [];\n\n        this._rulesByQueues[q].push(rule);\n      }, this);\n\n      this._prefs.disableRule && this.disableRule(this._prefs.disableRule);\n      this._prefs.enableRule && this.enableRule(this._prefs.enableRule);\n      this._separatePartsTags = ['title', 'p', 'h[1-6]', 'select', 'legend'];\n    }\n    /**\n     * Add a rule.\n     *\n     * @static\n     * @param {TypografRule} rule\n     *\n     * @returns {Typograf} this\n     */\n\n\n    _createClass(Typograf, [{\n      key: \"execute\",\n\n      /**\n       * Execute typographical rules for text.\n       *\n       * @param {string} text\n       * @param {Object} [prefs]\n       * @param {string} [prefs.locale] Locale\n       * @param {HtmlEntity} [prefs.htmlEntity] Type of HTML entities\n       * @param {string} [prefs.lineEnding] Line ending. 'LF' (Unix), 'CR' (Mac) or 'CRLF' (Windows). Default: 'LF'.\n       *\n       * @returns {string}\n       */\n      value: function execute(text, prefs) {\n        text = '' + text;\n\n        if (!text) {\n          return '';\n        }\n\n        var context = this._prepareContext(text);\n\n        this._preparePrefs(context, prefs);\n\n        return this._process(context);\n      }\n    }, {\n      key: \"_prepareContext\",\n      value: function _prepareContext(text) {\n        return {\n          text: text,\n          isHTML: isHTML(text),\n          prefs: deepCopy(this._prefs),\n          getData: function getData$$1(key) {\n            if (key === 'char') {\n              return this.prefs.locale.map(function (item) {\n                return getData(item + '/' + key);\n              }).join('');\n            } else {\n              return getData(this.prefs.locale[0] + '/' + key);\n            }\n          }\n        };\n      }\n    }, {\n      key: \"_preparePrefs\",\n      value: function _preparePrefs(context, prefs) {\n        prefs = prefs || {};\n        var contextPrefs = context.prefs;\n\n        for (var _i = 0, _arr = ['htmlEntity', 'lineEnding', 'processingSeparateParts', 'ruleFilter']; _i < _arr.length; _i++) {\n          var name = _arr[_i];\n\n          if (name in prefs) {\n            contextPrefs[name] = prefs[name];\n          } else if (name in this._prefs) {\n            contextPrefs[name] = this._prefs[name];\n          }\n        }\n\n        contextPrefs.htmlEntity = contextPrefs.htmlEntity || {};\n        contextPrefs.locale = prepareLocale(prefs.locale, this._prefs.locale);\n        var locale = contextPrefs.locale;\n        var locale0 = locale[0];\n\n        if (!locale.length || !locale0) {\n          throw Error('Not defined the property \"locale\".');\n        }\n\n        if (!hasLocale(locale0)) {\n          throw Error('\"' + locale0 + '\" is not supported locale.');\n        }\n      }\n    }, {\n      key: \"_splitBySeparateParts\",\n      value: function _splitBySeparateParts(context) {\n        if (!context.isHTML || context.prefs.processingSeparateParts === false) {\n          return [context.text];\n        }\n\n        var text = [],\n            reTags = new RegExp('<(' + this._separatePartsTags.join('|') + ')(\\\\s[^>]*?)?>[^]*?</\\\\1>', 'gi');\n        var position = 0;\n        context.text.replace(reTags, function ($0, $1, $2, itemPosition) {\n          if (position !== itemPosition) {\n            text.push((position ? privateSeparateLabel : '') + context.text.slice(position, itemPosition) + privateSeparateLabel);\n          }\n\n          text.push($0);\n          position = itemPosition + $0.length;\n          return $0;\n        });\n        text.push(position ? privateSeparateLabel + context.text.slice(position, context.text.length) : context.text);\n        return text;\n      }\n    }, {\n      key: \"_process\",\n      value: function _process(context) {\n        var _this = this;\n\n        context.text = removeCR(context.text);\n\n        this._executeRules(context, 'start');\n\n        this._safeTags.hide(context, 'own');\n\n        this._executeRules(context, 'hide-safe-tags-own');\n\n        this._safeTags.hide(context, 'html');\n\n        this._executeRules(context, 'hide-safe-tags-html');\n\n        var isRootHTML = context.isHTML,\n            re = new RegExp(privateSeparateLabel, 'g');\n        context.text = this._splitBySeparateParts(context).map(function (item) {\n          context.text = item;\n          context.isHTML = isHTML(item);\n\n          _this._safeTags.hideHTMLTags(context);\n\n          _this._safeTags.hide(context, 'url');\n\n          _this._executeRules(context, 'hide-safe-tags-url');\n\n          _this._executeRules(context, 'hide-safe-tags');\n\n          HtmlEntities$1.toUtf(context);\n\n          if (_this._prefs.live) {\n            context.text = replaceNbsp(context.text);\n          }\n\n          _this._executeRules(context, 'utf');\n\n          _this._executeRules(context);\n\n          HtmlEntities$1.restore(context);\n\n          _this._executeRules(context, 'html-entities');\n\n          _this._safeTags.show(context, 'url');\n\n          _this._executeRules(context, 'show-safe-tags-url');\n\n          return context.text.replace(re, '');\n        }).join('');\n        context.isHTML = isRootHTML;\n\n        this._safeTags.show(context, 'html');\n\n        this._executeRules(context, 'show-safe-tags-html');\n\n        this._safeTags.show(context, 'own');\n\n        this._executeRules(context, 'show-safe-tags-own');\n\n        this._executeRules(context, 'end');\n\n        return fixLineEnding(context.text, context.prefs.lineEnding);\n      }\n      /**\n       * Get a setting.\n       *\n       * @param {string} ruleName\n       * @param {string} setting\n       *\n       * @returns {*}\n       */\n\n    }, {\n      key: \"getSetting\",\n      value: function getSetting(ruleName, setting) {\n        return this._settings[ruleName] && this._settings[ruleName][setting];\n      }\n      /**\n       * Set a setting.\n       *\n       * @param {string} ruleName\n       * @param {string} setting\n       * @param {*} [value]\n       *\n       * @returns {Typograf}\n       */\n\n    }, {\n      key: \"setSetting\",\n      value: function setSetting(ruleName, setting, value) {\n        this._settings[ruleName] = this._settings[ruleName] || {};\n        this._settings[ruleName][setting] = value;\n        return this;\n      }\n      /**\n       * Is enabled a rule.\n       *\n       * @param {string} ruleName\n       *\n       * @returns {boolean}\n       */\n\n    }, {\n      key: \"isEnabledRule\",\n      value: function isEnabledRule(ruleName) {\n        return this._enabledRules[ruleName];\n      }\n      /**\n       * Is disabled a rule.\n       *\n       * @param {string} ruleName\n       *\n       * @returns {boolean}\n       */\n\n    }, {\n      key: \"isDisabledRule\",\n      value: function isDisabledRule(ruleName) {\n        return !this._enabledRules[ruleName];\n      }\n      /**\n       * Enable a rule.\n       *\n       * @param {string|string[]} ruleName\n       *\n       * @returns {Typograf} this\n       */\n\n    }, {\n      key: \"enableRule\",\n      value: function enableRule(ruleName) {\n        return this._enable(ruleName, true);\n      }\n      /**\n       * Disable a rule.\n       *\n       * @param {string|string[]} ruleName\n       *\n       * @returns {Typograf} this\n       */\n\n    }, {\n      key: \"disableRule\",\n      value: function disableRule(ruleName) {\n        return this._enable(ruleName, false);\n      }\n      /**\n       * Add safe tag.\n       *\n       * @example\n       * // var t = new Typograf({locale: 'ru'});\n       * // t.addSafeTag('<mytag>', '</mytag>');\n       * // t.addSafeTag('<mytag>', '</mytag>', '.*?');\n       * // t.addSafeTag(/<mytag>.*?</mytag>/gi);\n       *\n       * @param {string|RegExp} startTag\n       * @param {string} [endTag]\n       * @param {string} [middle]\n       *\n       * @returns {Typograf} this\n      */\n\n    }, {\n      key: \"addSafeTag\",\n      value: function addSafeTag(startTag, endTag, middle) {\n        var tag = startTag instanceof RegExp ? startTag : [startTag, endTag, middle];\n\n        this._safeTags.add(tag);\n\n        return this;\n      }\n    }, {\n      key: \"_executeRules\",\n      value: function _executeRules(context, queue) {\n        queue = queue || 'default';\n        var rules = this._rulesByQueues[queue];\n        var innerRules = this._innerRulesByQueues[queue];\n        innerRules && innerRules.forEach(function (rule) {\n          this._ruleIterator(context, rule);\n        }, this);\n        rules && rules.forEach(function (rule) {\n          this._ruleIterator(context, rule);\n        }, this);\n      }\n    }, {\n      key: \"_ruleIterator\",\n      value: function _ruleIterator(context, rule) {\n        var rlocale = rule._locale;\n        var live = this._prefs.live;\n\n        if (live === true && rule.live === false || live === false && rule.live === true) {\n          return;\n        }\n\n        if ((rlocale === 'common' || rlocale === context.prefs.locale[0]) && this.isEnabledRule(rule.name)) {\n          if (context.prefs.ruleFilter && !context.prefs.ruleFilter(rule)) {\n            return;\n          }\n\n          this._onBeforeRule && this._onBeforeRule(rule.name, context.text, context);\n          context.text = rule.handler.call(this, context.text, this._settings[rule.name], context);\n          this._onAfterRule && this._onAfterRule(rule.name, context.text, context);\n        }\n      }\n    }, {\n      key: \"_prepareRule\",\n      value: function _prepareRule(rule) {\n        var name = rule.name;\n\n        var t = _typeof(rule.settings);\n\n        var settings = {};\n\n        if (t === 'object') {\n          settings = deepCopy(rule.settings);\n        } else if (t === 'function') {\n          settings = rule.settings(rule);\n        }\n\n        this._settings[name] = settings;\n        this._enabledRules[name] = rule._enabled;\n      }\n    }, {\n      key: \"_enable\",\n      value: function _enable(rule, enabled) {\n        if (Array.isArray(rule)) {\n          rule.forEach(function (el) {\n            this._enableByMask(el, enabled);\n          }, this);\n        } else {\n          this._enableByMask(rule, enabled);\n        }\n\n        return this;\n      }\n    }, {\n      key: \"_enableByMask\",\n      value: function _enableByMask(rule, enabled) {\n        if (!rule) {\n          return;\n        }\n\n        if (rule.search(/\\*/) !== -1) {\n          var re = new RegExp(rule.replace(/\\//g, '\\\\/').replace(/\\*/g, '.*'));\n\n          this._rules.forEach(function (el) {\n            var name = el.name;\n\n            if (re.test(name)) {\n              this._enabledRules[name] = enabled;\n            }\n          }, this);\n        } else {\n          this._enabledRules[rule] = enabled;\n        }\n      }\n    }, {\n      key: \"_getRule\",\n      value: function _getRule(name) {\n        var rule = null;\n\n        this._rules.some(function (item) {\n          if (item.name === name) {\n            rule = item;\n            return true;\n          }\n\n          return false;\n        });\n\n        return rule;\n      }\n    }], [{\n      key: \"addRule\",\n      value: function addRule(rule) {\n        var _rule$name$split = rule.name.split('/'),\n            _rule$name$split2 = _slicedToArray(_rule$name$split, 3),\n            locale = _rule$name$split2[0],\n            group = _rule$name$split2[1],\n            name = _rule$name$split2[2];\n\n        rule._enabled = rule.disabled === true ? false : true;\n        rule._locale = locale;\n        rule._group = group;\n        rule._name = name;\n        this.addLocale(rule._locale);\n\n        this._setIndex(rule);\n\n        this.prototype._rules.push(rule);\n\n        this._sortRules(this.prototype._rules);\n\n        return this;\n      }\n      /**\n       * Add rules.\n       *\n       * @static\n       * @param {TypografRule[]} rules\n       * \n       * @returns {Typograf} this\n       */\n\n    }, {\n      key: \"addRules\",\n      value: function addRules(rules) {\n        var _this2 = this;\n\n        rules.forEach(function (item) {\n          _this2.addRule(item);\n        });\n        return this;\n      }\n      /**\n       * Add internal rule.\n       * Internal rules are executed before main.\n       *\n       * @static\n       * @param {TypografRule} rule\n       *\n       * @returns {Typograf} this\n       */\n\n    }, {\n      key: \"addInnerRule\",\n      value: function addInnerRule(rule) {\n        this.prototype._innerRules.push(rule);\n\n        rule._locale = rule.name.split('/')[0];\n        return this;\n      }\n      /**\n       * Add internal rules.\n       * Internal rules are executed before main.\n       *\n       * @static\n       * @param {TypografRule[]} rules\n       *\n       * @returns {Typograf} this\n       */\n\n    }, {\n      key: \"addInnerRules\",\n      value: function addInnerRules(rules) {\n        var _this3 = this;\n\n        rules.forEach(function (item) {\n          _this3.addInnerRule(item);\n        });\n        return this;\n      }\n    }, {\n      key: \"_setIndex\",\n      value: function _setIndex(rule) {\n        var index = rule.index;\n\n        var t = _typeof(index);\n\n        var groupIndex = groupIndexes[rule._group];\n\n        if (t === 'undefined') {\n          index = groupIndex;\n        } else if (t === 'string') {\n          index = (groupIndex || 0) + parseInt(rule.index, 10);\n        }\n\n        rule._index = index;\n      }\n    }, {\n      key: \"_sortRules\",\n      value: function _sortRules(rules) {\n        rules.sort(function (a, b) {\n          return a._index > b._index ? 1 : -1;\n        });\n      }\n    }]);\n\n    return Typograf;\n  }();\n\n  Typograf.version = '6.11.1';\n  Typograf.addLocale = addLocale;\n  Typograf.getLocales = getLocales;\n  Typograf.hasLocale = hasLocale;\n  Typograf.setData = setData;\n  Typograf.getData = getData; // @deprecated\n\n  Typograf.deepCopy = deepCopy;\n  Typograf.prototype._rules = [];\n  Typograf.prototype._innerRules = [];\n  /**\n   * @typedef TypografRule\n   * @type {object}\n   * \n   * @property {string} name Name of rule\n   * @property {Function} handler Processing function\n   * @property {number} [index] Sorting index for rule\n   * @property {boolean} [disabled] Rule is disabled by default\n   * @property {boolean} [live] Live mode\n   * @property {Object} [settings] Settings for rule\n   */\n\n  var common = {\n    'common/char': 'a-z',\n    'common/dash': '--?|‒|–|—',\n    // --, &#8210, &ndash, &mdash\n    'common/quote': '«‹»›„“‟”\"'\n  };\n  var be = {\n    'be/char': 'абвгдежзйклмнопрстуфхцчшыьэюяёіўґ',\n    'be/quote': {\n      left: '«“',\n      right: '»”'\n    }\n  };\n  var bg = {\n    'bg/char': 'абвгдежзийклмнопрстуфхцчшщъьюя',\n    'bg/quote': {\n      left: '„’',\n      right: '“’'\n    }\n  };\n  var ca = {\n    'ca/char': 'abcdefghijlmnopqrstuvxyzàçèéíïòóúü',\n    'ca/quote': {\n      left: '«“',\n      right: '»”'\n    }\n  };\n  var da = {\n    'da/char': 'a-zåæø',\n    'da/quote': {\n      left: '»›',\n      right: '«‹'\n    }\n  };\n  var de = {\n    'de/char': 'a-zßäöü',\n    'de/quote': {\n      left: '„‚',\n      right: '“‘'\n    }\n  };\n  var el = {\n    'el/char': 'ΐάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώϲάέήίόύώ',\n    'el/quote': {\n      left: '«“',\n      right: '»”'\n    }\n  };\n  var enGB = {\n    'en-GB/char': 'a-z',\n    'en-GB/quote': {\n      left: '‘“',\n      right: '’”'\n    }\n  };\n  var enUS = {\n    'en-US/char': 'a-z',\n    'en-US/quote': {\n      left: '“‘',\n      right: '”’'\n    }\n  };\n  var eo = {\n    'eo/char': 'abcdefghijklmnoprstuvzĉĝĥĵŝŭ',\n    'eo/quote': {\n      left: '“‘',\n      right: '”’'\n    }\n  };\n  var es = {\n    'es/char': 'a-záéíñóúü',\n    'es/quote': {\n      left: '«“',\n      right: '»”'\n    }\n  };\n  var et = {\n    'et/char': 'abdefghijklmnoprstuvzäõöüšž',\n    'et/quote': {\n      left: '„«',\n      right: '“»'\n    }\n  };\n  var fi = {\n    'fi/char': 'abcdefghijklmnopqrstuvyöäå',\n    'fi/quote': {\n      left: '”’',\n      right: '”’'\n    }\n  };\n  var fr = {\n    'fr/char': 'a-zàâçèéêëîïôûüœæ',\n    'fr/quote': {\n      left: '«‹',\n      right: '»›',\n      spacing: true\n    }\n  };\n  var ga = {\n    'ga/char': 'abcdefghilmnoprstuvwxyzáéíóú',\n    'ga/quote': {\n      left: '“‘',\n      right: '”’'\n    }\n  };\n  var hu = {\n    'hu/char': 'a-záäéíóöúüőű',\n    'hu/quote': {\n      left: '„»',\n      right: '”«'\n    }\n  };\n  var it = {\n    'it/char': 'a-zàéèìòù',\n    'it/quote': {\n      left: '«“',\n      right: '»”'\n    }\n  };\n  var lv = {\n    'lv/char': 'abcdefghijklmnopqrstuvxzæœ',\n    'lv/quote': {\n      left: '«„',\n      right: '»“'\n    }\n  };\n  var nl = {\n    'nl/char': 'a-zäçèéêëîïñöûü',\n    'nl/quote': {\n      left: '‘“',\n      right: '’”'\n    }\n  };\n  var no = {\n    'no/char': 'a-zåæèéêòóôø',\n    'no/quote': {\n      left: '«’',\n      right: '»’'\n    }\n  };\n  var pl = {\n    'pl/char': 'abcdefghijklmnoprstuvwxyzóąćęłńśźż',\n    'pl/quote': {\n      left: '„«',\n      right: '”»'\n    }\n  };\n  var ro = {\n    'ro/char': 'abcdefghijklmnoprstuvxzîășț',\n    'ro/quote': {\n      left: '„«',\n      right: '”»'\n    }\n  };\n  var ru = {\n    'ru/char': 'а-яё',\n    'ru/dashBefore': '(^| |\\\\n)',\n    'ru/dashAfter': \"(?=[\\xA0 ,.?:!]|$)\",\n    'ru/dashAfterDe': \"(?=[,.?:!]|[\\xA0 ][^\\u0410-\\u042F\\u0401]|$)\",\n    'ru/l': 'а-яёa-z',\n    'ru/L': 'А-ЯЁA-Z',\n    'ru/month': 'январь|февраль|март|апрель|май|июнь|июль|август|сентябрь|октябрь|ноябрь|декабрь',\n    'ru/monthGenCase': 'января|февраля|марта|апреля|мая|июня|июля|августа|сентября|октября|ноября|декабря',\n    'ru/monthPreCase': 'январе|феврале|марте|апреле|мае|июне|июле|августе|сентябре|октябре|ноябре|декабре',\n    'ru/quote': {\n      left: '«„‚',\n      right: '»“‘',\n      removeDuplicateQuotes: true\n    },\n    'ru/shortMonth': 'янв|фев|мар|апр|ма[ейя]|июн|июл|авг|сен|окт|ноя|дек',\n    'ru/weekday': 'понедельник|вторник|среда|четверг|пятница|суббота|воскресенье'\n  };\n  var sk = {\n    'sk/char': 'abcdefghijklmnoprstuvwxyzáäéíóôúýčďľňŕšťž',\n    'sk/quote': {\n      left: '„‚',\n      right: '“‘'\n    }\n  };\n  var sl = {\n    'sl/char': 'a-zčšž',\n    'sl/quote': {\n      left: '„‚',\n      right: '“‘'\n    }\n  };\n  var sr = {\n    'sr/char': 'abcdefghijklmnoprstuvzćčđšž',\n    'sr/quote': {\n      left: '„’',\n      right: '”’'\n    }\n  };\n  var sv = {\n    'sv/char': 'a-zäåéö',\n    'sv/quote': {\n      left: '”’',\n      right: '”’'\n    }\n  };\n  var tr = {\n    'tr/char': 'abcdefghijklmnoprstuvyzâçîöûüğış',\n    'tr/quote': {\n      left: '“‘',\n      right: '”’'\n    }\n  };\n  var uk = {\n    'uk/char': 'абвгдежзийклмнопрстуфхцчшщьюяєіїґ',\n    'uk/quote': {\n      left: '«„',\n      right: '»“'\n    }\n  };\n  var data$1 = [common, be, bg, ca, da, de, el, enGB, enUS, eo, es, et, fi, fr, ga, hu, it, lv, nl, no, pl, ro, ru, sk, sl, sr, sv, tr, uk];\n  data$1.forEach(function (item) {\n    return setData(item);\n  });\n  var eMail = {\n    name: 'common/html/e-mail',\n    queue: 'end',\n    handler: function handler(text, settings, context) {\n      return context.isHTML ? text : text.replace(/(^|[\\s;(])([\\w\\-.]{2,64})@([\\w\\-.]{2,64})\\.([a-z]{2,64})([)\\s.,!?]|$)/gi, '$1<a href=\"mailto:$2@$3.$4\">$2@$3.$4</a>$5');\n    },\n    disabled: true,\n    htmlAttrs: false\n  };\n  var escape = {\n    name: 'common/html/escape',\n    index: '+100',\n    queue: 'end',\n    handler: function handler(text) {\n      var entityMap = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        '\\'': '&#39;',\n        '/': '&#x2F;'\n      };\n      return text.replace(/[&<>\"'/]/g, function (s) {\n        return entityMap[s];\n      });\n    },\n    disabled: true\n  };\n  var nbr = {\n    name: 'common/html/nbr',\n    index: '+10',\n    queue: 'end',\n    handler: function handler(text) {\n      return text.replace(/([^\\n>])\\n(?=[^\\n])/g, '$1<br/>\\n');\n    },\n    disabled: true,\n    htmlAttrs: false\n  };\n  var blockElements = ['address', 'article', 'aside', 'blockquote', 'canvas', 'dd', 'div', 'dl', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'li', 'main', 'nav', 'noscript', 'ol', 'output', 'p', 'pre', 'section', 'table', 'tfoot', 'ul', 'video'];\n  var p = {\n    name: 'common/html/p',\n    index: '+5',\n    queue: 'end',\n    handler: function handler(text) {\n      var blockRe = new RegExp('<(' + blockElements.join('|') + ')[>\\\\s]');\n      var separator = '\\n\\n';\n      var buffer = text.split(separator);\n      buffer.forEach(function (text, i, data) {\n        if (!text.trim()) {\n          return;\n        }\n\n        if (!blockRe.test(text)) {\n          data[i] = text.replace(/^(\\s*)/, '$1<p>').replace(/(\\s*)$/, '</p>$1');\n        }\n      });\n      return buffer.join(separator);\n    },\n    disabled: true,\n    htmlAttrs: false\n  };\n  var processingAttrs = {\n    name: 'common/html/processingAttrs',\n    queue: 'hide-safe-tags-own',\n    // After \"hide-safe-tags-own\", before \"hide-safe-tags-html\".\n    handler: function handler(text, settings, context) {\n      var that = this;\n      var reAttrs = new RegExp('(^|\\\\s)(' + settings.attrs.join('|') + ')=(\"[^\"]*?\"|\\'[^\\']*?\\')', 'gi');\n      var prefs = deepCopy(context.prefs);\n\n      prefs.ruleFilter = function (rule) {\n        return rule.htmlAttrs !== false;\n      };\n\n      return text.replace(/(<[-\\w]+\\s)([^>]+?)(?=>)/g, function (match, tagName, attrs) {\n        var resultAttrs = attrs.replace(reAttrs, function (submatch, space, attrName, attrValue) {\n          var lquote = attrValue[0];\n          var rquote = attrValue[attrValue.length - 1];\n          var value = attrValue.slice(1, -1);\n          return space + attrName + '=' + lquote + that.execute(value, prefs) + rquote;\n        });\n        return tagName + resultAttrs;\n      });\n    },\n    settings: {\n      attrs: ['title', 'placeholder']\n    },\n    disabled: true,\n    htmlAttrs: false\n  };\n  var quot = {\n    name: 'common/html/quot',\n    queue: 'hide-safe-tags',\n    handler: function handler(text) {\n      return text.replace(/&quot;/g, '\"');\n    }\n  };\n  var stripTags = {\n    name: 'common/html/stripTags',\n    index: '+99',\n    queue: 'end',\n    handler: function handler(text) {\n      return text.replace(/<[^>]+>/g, '');\n    },\n    disabled: true\n  };\n  var url = {\n    name: 'common/html/url',\n    queue: 'end',\n    handler: function handler(text, settings, context) {\n      return context.isHTML ? text : text.replace(regExpUrl, function ($0, protocol, path) {\n        path = path.replace(/([^/]+\\/?)(\\?|#)$/, '$1') // Remove ending ? and #\n        .replace(/^([^/]+)\\/$/, '$1'); // Remove ending /\n\n        if (protocol === 'http') {\n          path = path.replace(/^([^/]+)(:80)([^\\d]|\\/|$)/, '$1$3'); // Remove 80 port\n        } else if (protocol === 'https') {\n          path = path.replace(/^([^/]+)(:443)([^\\d]|\\/|$)/, '$1$3'); // Remove 443 port\n        }\n\n        var url = path;\n        var fullUrl = protocol + '://' + path;\n        var firstPart = '<a href=\"' + fullUrl + '\">';\n\n        if (protocol === 'http' || protocol === 'https') {\n          url = url.replace(/^www\\./, '');\n          return firstPart + (protocol === 'http' ? url : protocol + '://' + url) + '</a>';\n        }\n\n        return firstPart + fullUrl + '</a>';\n      });\n    },\n    disabled: true,\n    htmlAttrs: false\n  };\n  Typograf.addRules([eMail, escape, nbr, p, processingAttrs, quot, stripTags, url]);\n  var afterNumber = {\n    name: 'common/nbsp/afterNumber',\n    handler: function handler(text, settings, context) {\n      var re = '(^|\\\\D)(\\\\d{1,5}) ([' + context.getData('char') + ']+)';\n      return text.replace(new RegExp(re, 'gi'), \"$1$2\\xA0$3\");\n    },\n    disabled: true\n  };\n  var afterParagraphMark = {\n    name: 'common/nbsp/afterParagraphMark',\n    handler: function handler(text) {\n      return text.replace(/¶ ?(?=\\d)/g, \"\\xB6\\xA0\");\n    }\n  };\n  var afterSectionMark = {\n    name: 'common/nbsp/afterSectionMark',\n    handler: function handler(text, settings, context) {\n      // \\u2009 - THIN SPACE\n      // \\u202F - NARROW NO-BREAK SPACE\n      var locale = context.prefs.locale[0];\n      return text.replace(/§[ \\u00A0\\u2009]?(?=\\d|I|V|X)/g, locale === 'ru' ? \"\\xA7\\u202F\" : \"\\xA7\\xA0\");\n    }\n  };\n  var afterShortWord = {\n    name: 'common/nbsp/afterShortWord',\n    handler: function handler(text, settings, context) {\n      var len = settings.lengthShortWord;\n      var before = \" \\xA0(\" + privateLabel + getData('common/quote');\n      var subStr = '(^|[' + before + '])([' + context.getData('char') + ']{1,' + len + '}) ';\n      var newSubStr = \"$1$2\\xA0\";\n      var re = new RegExp(subStr, 'gim');\n      return text.replace(re, newSubStr).replace(re, newSubStr);\n    },\n    settings: {\n      lengthShortWord: 2\n    }\n  };\n  var beforeShortLastNumber = {\n    name: 'common/nbsp/beforeShortLastNumber',\n    handler: function handler(text, settings, context) {\n      var ch = context.getData('char');\n      var CH = ch.toUpperCase();\n      var re = new RegExp('([' + ch + CH + ']) (?=\\\\d{1,' + settings.lengthLastNumber + '}[-+−%\\'\"' + context.getData('quote').right + ')]?([.!?…]( [' + CH + ']|$)|$))', 'gm');\n      return text.replace(re, \"$1\\xA0\");\n    },\n    live: false,\n    settings: {\n      lengthLastNumber: 2\n    }\n  };\n  var beforeShortLastWord = {\n    name: 'common/nbsp/beforeShortLastWord',\n    handler: function handler(text, settings, context) {\n      var ch = context.getData('char');\n      var CH = ch.toUpperCase();\n      var re = new RegExp('([' + ch + '\\\\d]) ([' + ch + CH + ']{1,' + settings.lengthLastWord + '}[.!?…])( [' + CH + ']|$)', 'g');\n      return text.replace(re, \"$1\\xA0$2$3\");\n    },\n    settings: {\n      lengthLastWord: 3\n    }\n  };\n  var dpi = {\n    name: 'common/nbsp/dpi',\n    handler: function handler(text) {\n      return text.replace(/(\\d) ?(lpi|dpi)(?!\\w)/, \"$1\\xA0$2\");\n    }\n  };\n\n  function replaceNbsp$1($0, $1, $2, $3) {\n    return $1 + $2.replace(/([^\\u00A0])\\u00A0([^\\u00A0])/g, '$1 $2') + $3;\n  }\n\n  var nowrap = {\n    name: 'common/nbsp/nowrap',\n    queue: 'end',\n    handler: function handler(text) {\n      return text.replace(/(<nowrap>)(.*?)(<\\/nowrap>)/g, replaceNbsp$1).replace(/(<nobr>)(.*?)(<\\/nobr>)/g, replaceNbsp$1);\n    }\n  };\n  var replaceNbsp$2 = {\n    name: 'common/nbsp/replaceNbsp',\n    queue: 'utf',\n    live: false,\n    handler: replaceNbsp,\n    disabled: true\n  };\n  Typograf.addRules([afterNumber, afterParagraphMark, afterSectionMark, afterShortWord, beforeShortLastNumber, beforeShortLastWord, dpi, nowrap, replaceNbsp$2]);\n  var digitGrouping = {\n    name: 'common/number/digitGrouping',\n    index: '310',\n    disabled: true,\n    handler: function handler(text, settings) {\n      return text.replace(new RegExp(\"(^ ?|\\\\D |\".concat(privateLabel, \")(\\\\d{1,3}([ \\xA0\\u202F\\u2009]\\\\d{3})+)(?! ?[\\\\d-])\"), 'gm'), function ($0, $1, $2) {\n        return $1 + $2.replace(/\\s/g, settings.space);\n      }) // https://www.bipm.org/utils/common/pdf/si-brochure/SI-Brochure-9-EN.pdf #5.4.4\n      .replace(/(\\d{5,}([.,]\\d+)?)/g, function ($0, $1) {\n        var decimalMarker = $1.match(/[.,]/);\n\n        var _ref = decimalMarker ? $1.split(decimalMarker) : [$1],\n            _ref2 = _slicedToArray(_ref, 2),\n            integerPart = _ref2[0],\n            fractionalPart = _ref2[1];\n\n        integerPart = integerPart.replace(/(\\d)(?=(\\d{3})+([^\\d]|$))/g, '$1' + settings.space);\n        return decimalMarker ? integerPart + decimalMarker + fractionalPart : integerPart;\n      });\n    },\n    settings: {\n      space: \"\\u202F\"\n    }\n  };\n  var fraction = {\n    name: 'common/number/fraction',\n    handler: function handler(text) {\n      return text.replace(/(^|\\D)1\\/2(\\D|$)/g, '$1½$2').replace(/(^|\\D)1\\/4(\\D|$)/g, '$1¼$2').replace(/(^|\\D)3\\/4(\\D|$)/g, '$1¾$2');\n    }\n  };\n  var mathSigns = {\n    name: 'common/number/mathSigns',\n    handler: function handler(text) {\n      return replace(text, [[/!=/g, '≠'], [/<=/g, '≤'], [/(^|[^=])>=/g, '$1≥'], [/<=>/g, '⇔'], [/<</g, '≪'], [/>>/g, '≫'], [/~=/g, '≅'], [/(^|[^+])\\+-/g, '$1±']]);\n    }\n  };\n  var times = {\n    name: 'common/number/times',\n    handler: function handler(text) {\n      return text.replace(/(\\d)[ \\u00A0]?[xх][ \\u00A0]?(\\d)/g, '$1×$2');\n    }\n  };\n  Typograf.addRules([digitGrouping, fraction, mathSigns, times]);\n  var delBOM = {\n    name: 'common/other/delBOM',\n    queue: 'start',\n    index: -1,\n    handler: function handler(text) {\n      if (text.charCodeAt(0) === 0xFEFF) {\n        return text.slice(1);\n      }\n\n      return text;\n    }\n  };\n  var repeatWord = {\n    name: 'common/other/repeatWord',\n    handler: function handler(text, settings, context) {\n      var punc = '[;:,.?! \\n' + getData('common/quote') + ']';\n      var re = new RegExp('(' + punc + '|^)' + '([' + context.getData('char') + ']{' + settings.min + ',}) ' + '\\\\2(' + punc + '|$)', 'gi');\n      return text.replace(re, '$1$2$3');\n    },\n    settings: {\n      min: 2\n    },\n    disabled: true\n  };\n  Typograf.addRules([delBOM, repeatWord]);\n  var apostrophe = {\n    name: 'common/punctuation/apostrophe',\n    handler: function handler(text, settings, context) {\n      var letters = '([' + context.getData('char') + '])';\n      var re = new RegExp(letters + '\\'' + letters, 'gi');\n      return text.replace(re, '$1’$2');\n    }\n  };\n  var delDoublePunctuation = {\n    name: 'common/punctuation/delDoublePunctuation',\n    handler: function handler(text) {\n      return text.replace(/(^|[^,]),,(?!,)/g, '$1,').replace(/(^|[^:])::(?!:)/g, '$1:').replace(/(^|[^!?.])\\.\\.(?!\\.)/g, '$1.').replace(/(^|[^;]);;(?!;)/g, '$1;').replace(/(^|[^?])\\?\\?(?!\\?)/g, '$1?');\n    }\n  };\n  var hellip = {\n    name: 'common/punctuation/hellip',\n    handler: function handler(text, settings, context) {\n      return context.prefs.locale[0] === 'ru' ? text.replace(/(^|[^.])\\.{3,4}(?=[^.]|$)/g, '$1…') : text.replace(/(^|[^.])\\.{3}(\\.?)(?=[^.]|$)/g, '$1…$2');\n    }\n  };\n  var Quote = {\n    bufferQuotes: {\n      left: \"\\uF005\\uF006\\uF007\",\n      right: \"\\uF008\\uF009\\uF0A0\"\n    },\n    maxLevel: 3,\n    beforeLeft: \" \\n\\t\\xA0[(\",\n    afterRight: \" \\n\\t\\xA0!?.:;#*,\\u2026)\",\n    process: function process(params) {\n      var text = params.context.text;\n      var count = this.count(text);\n\n      if (!count.total) {\n        return text;\n      }\n\n      var originalSettings = params.settings;\n      var isEqualQuotes = params.settings.left[0] === params.settings.right[0]; // For SW, FI\n\n      if (isEqualQuotes) {\n        params.settings = deepCopy(params.settings);\n        params.settings.left = this.bufferQuotes.left.slice(0, params.settings.left.length);\n        params.settings.right = this.bufferQuotes.right.slice(0, params.settings.right.length);\n      } // For FR\n\n\n      if (params.settings.spacing) {\n        text = this.removeSpacing(text, params.settings);\n      }\n\n      text = this.set(text, params); // For FR\n\n      if (params.settings.spacing) {\n        text = this.setSpacing(text, params.settings);\n      } // For RU\n\n\n      if (params.settings.removeDuplicateQuotes) {\n        text = this.removeDuplicates(text, params.settings);\n      } // For SW, FI\n\n\n      if (isEqualQuotes) {\n        text = this.returnOriginalQuotes(text, originalSettings, params.settings);\n        params.settings = originalSettings;\n      }\n\n      return text;\n    },\n    returnOriginalQuotes: function returnOriginalQuotes(text, originalSettings, bufferSettings) {\n      var buffer = {};\n\n      for (var i = 0; i < bufferSettings.left.length; i++) {\n        buffer[bufferSettings.left[i]] = originalSettings.left[i];\n        buffer[bufferSettings.right[i]] = originalSettings.right[i];\n      }\n\n      return text.replace(new RegExp('[' + bufferSettings.left + bufferSettings.right + ']', 'g'), function (quote) {\n        return buffer[quote];\n      });\n    },\n    count: function count(text) {\n      var count = {\n        total: 0\n      };\n      text.replace(new RegExp('[' + getData('common/quote') + ']', 'g'), function (quote) {\n        if (!count[quote]) {\n          count[quote] = 0;\n        }\n\n        count[quote]++;\n        count.total++;\n        return quote;\n      });\n      return count;\n    },\n    removeDuplicates: function removeDuplicates(text, settings) {\n      var lquote = settings.left[0];\n      var lquote2 = settings.left[1] || lquote;\n      var rquote = settings.right[0];\n\n      if (lquote !== lquote2) {\n        return text;\n      }\n\n      return text // ««word» word» -> «word» word»\n      .replace(new RegExp(lquote + lquote, 'g'), lquote) // «word «word»» -> «word «word»\n      .replace(new RegExp(rquote + rquote, 'g'), rquote);\n    },\n    removeSpacing: function removeSpacing(text, settings) {\n      for (var i = 0, len = settings.left.length; i < len; i++) {\n        var lquote = settings.left[i];\n        var rquote = settings.right[i];\n        text = text.replace(new RegExp(lquote + \"([ \\u202F\\xA0])\", 'g'), lquote).replace(new RegExp(\"([ \\u202F\\xA0])\" + rquote, 'g'), rquote);\n      }\n\n      return text;\n    },\n    setSpacing: function setSpacing(text, settings) {\n      for (var i = 0, len = settings.left.length; i < len; i++) {\n        var lquote = settings.left[i];\n        var rquote = settings.right[i];\n        text = text.replace(new RegExp(lquote + \"([^\\u202F])\", 'g'), lquote + \"\\u202F$1\").replace(new RegExp(\"([^\\u202F])\" + rquote, 'g'), \"$1\\u202F\" + rquote);\n      }\n\n      return text;\n    },\n    set: function set(text, params) {\n      var quotes = getData('common/quote');\n      var lquote = params.settings.left[0];\n      var lquote2 = params.settings.left[1] || lquote;\n      var rquote = params.settings.right[0];\n      var reL = new RegExp('(^|[' + this.beforeLeft + '])([' + quotes + ']{1,' + this.maxLevel + '})(?=[^\\\\s' + privateLabel + '])', 'gim');\n      var reR = new RegExp('([^\\\\s' + privateLabel + '])([' + quotes + ']{1,' + this.maxLevel + '})(?=[' + this.afterRight + ']|$)', 'gim');\n      text = text.replace(reL, function ($0, $1, $2) {\n        return $1 + repeat(lquote, $2.length);\n      }).replace(reR, function ($0, $1, $2) {\n        return $1 + repeat(rquote, $2.length);\n      });\n      text = this.setAboveTags(text, params);\n\n      if (lquote !== lquote2) {\n        text = this.setInner(text, params.settings);\n      }\n\n      return text;\n    },\n    setAboveTags: function setAboveTags(text, params) {\n      var _this = this;\n\n      var quotes = getData('common/quote');\n      var lquote = params.settings.left[0];\n      var rquote = params.settings.right[0];\n      return text.replace(new RegExp('(^|.)([' + quotes + '])(.|$)', 'gm'), function (original, prev, quote, next, pos) {\n        if (prev !== privateLabel && next !== privateLabel) {\n          return original;\n        }\n\n        if (prev === privateLabel && next === privateLabel) {\n          if (quote === '\"') {\n            return prev + _this.getAboveTwoTags(text, pos + 1, params) + next;\n          }\n\n          return original;\n        }\n\n        if (prev === privateLabel) {\n          var hasRight = _this.afterRight.indexOf(next) > -1;\n\n          var prevInfo = _this.getPrevTagInfo(text, pos - 1, params);\n\n          if (hasRight && prevInfo && prevInfo.group === 'html') {\n            return prev + (prevInfo.isClosing ? rquote : lquote) + next;\n          }\n\n          return prev + (!next || hasRight ? rquote : lquote) + next;\n        } else {\n          var hasLeft = _this.beforeLeft.indexOf(prev) > -1;\n\n          var nextInfo = _this.getNextTagInfo(text, pos + 1, params);\n\n          if (hasLeft && nextInfo && nextInfo.group === 'html') {\n            return prev + (nextInfo.isClosing ? rquote : lquote) + next;\n          }\n\n          return prev + (!prev || hasLeft ? lquote : rquote) + next;\n        }\n      });\n    },\n    getAboveTwoTags: function getAboveTwoTags(text, pos, params) {\n      var prevInfo = this.getPrevTagInfo(text, pos, params);\n      var nextInfo = this.getNextTagInfo(text, pos, params);\n\n      if (prevInfo) {\n        if (prevInfo.group === 'html') {\n          if (!prevInfo.isClosing) {\n            return params.settings.left[0];\n          }\n\n          if (nextInfo && nextInfo.isClosing && prevInfo.isClosing) {\n            return params.settings.right[0];\n          }\n        }\n      }\n\n      return text[pos];\n    },\n    getPrevTagInfo: function getPrevTagInfo(text, pos, params) {\n      var prevLabel = params.safeTags.getPrevLabel(text, pos - 1);\n\n      if (prevLabel) {\n        var prevTag = params.safeTags.getTagByLabel(params.context, prevLabel);\n\n        if (prevTag) {\n          return params.safeTags.getTagInfo(prevTag);\n        }\n      }\n\n      return null;\n    },\n    getNextTagInfo: function getNextTagInfo(text, pos, params) {\n      var nextLabel = params.safeTags.getNextLabel(text, pos + 1);\n\n      if (nextLabel) {\n        var nextTag = params.safeTags.getTagByLabel(params.context, nextLabel);\n\n        if (nextTag) {\n          return params.safeTags.getTagInfo(nextTag);\n        }\n      }\n\n      return null;\n    },\n    setInner: function setInner(text, settings) {\n      var leftQuotes = [];\n      var rightQuotes = [];\n\n      for (var k = 0; k < settings.left.length; k++) {\n        leftQuotes.push(settings.left[k]);\n        rightQuotes.push(settings.right[k]);\n      }\n\n      var lquote = settings.left[0];\n      var rquote = settings.right[0];\n      var minLevel = -1;\n      var maxLevel = leftQuotes.length - 1;\n      var level = minLevel;\n      var result = '';\n\n      for (var i = 0, len = text.length; i < len; i++) {\n        var letter = text[i];\n\n        if (letter === lquote) {\n          level++;\n\n          if (level > maxLevel) {\n            level = maxLevel;\n          }\n\n          result += leftQuotes[level];\n        } else if (letter === rquote) {\n          if (level <= minLevel) {\n            level = 0;\n            result += rightQuotes[level];\n          } else {\n            result += rightQuotes[level];\n            level--;\n\n            if (level < minLevel) {\n              level = minLevel;\n            }\n          }\n        } else {\n          if (letter === '\"') {\n            level = minLevel;\n          }\n\n          result += letter;\n        }\n      }\n\n      var count = this.count(result, settings);\n      return count[lquote] !== count[rquote] ? text : result;\n    }\n  };\n  var quote = {\n    name: 'common/punctuation/quote',\n    handler: function handler(text, commonSettings, context) {\n      var locale = context.prefs.locale[0];\n      var settings = commonSettings[locale];\n\n      if (!settings) {\n        return text;\n      }\n\n      return Quote.process({\n        context: context,\n        settings: settings,\n        safeTags: this._safeTags\n      });\n    },\n    settings: function settings() {\n      var settings = {};\n      getLocales().forEach(function (locale) {\n        settings[locale] = deepCopy(getData(locale + '/quote'));\n      });\n      return settings;\n    }\n  };\n  var quoteLink = {\n    name: 'common/punctuation/quoteLink',\n    queue: 'show-safe-tags-html',\n    index: '+5',\n    handler: function handler(text, settings, context) {\n      var quotes = this.getSetting('common/punctuation/quote', context.prefs.locale[0]);\n\n      if (!quotes) {\n        return text;\n      }\n\n      var lquote1 = HtmlEntities$1.getByUtf(quotes.left[0]);\n      var rquote1 = HtmlEntities$1.getByUtf(quotes.right[0]);\n      var lquote2 = HtmlEntities$1.getByUtf(quotes.left[1]);\n      var rquote2 = HtmlEntities$1.getByUtf(quotes.right[1]);\n      lquote2 = lquote2 ? '|' + lquote2 : '';\n      rquote2 = rquote2 ? '|' + rquote2 : '';\n      var re = new RegExp('(<[aA]\\\\s[^>]*?>)(' + lquote1 + lquote2 + ')([^]*?)(' + rquote1 + rquote2 + ')(</[aA]>)', 'g');\n      return text.replace(re, '$2$1$3$5$4');\n    }\n  };\n  Typograf.addRules([apostrophe, delDoublePunctuation, hellip, quote, quoteLink]);\n  var afterPunctuation = {\n    name: 'common/space/afterPunctuation',\n    handler: function handler(text) {\n      var reExcl = new RegExp('(!|;|\\\\?)([^).…!;?\\\\s[\\\\])' + privateLabel + getData('common/quote') + '])', 'g');\n      var reComma = new RegExp('(\\\\D)(,|:)([^)\",:.?\\\\s\\\\/\\\\\\\\' + privateLabel + '])', 'g');\n      return text.replace(reExcl, '$1 $2').replace(reComma, '$1$2 $3');\n    }\n  };\n  var beforeBracket = {\n    name: 'common/space/beforeBracket',\n    handler: function handler(text, settings, context) {\n      var re = new RegExp('([' + context.getData('char') + '.!?,;…)])\\\\(', 'gi');\n      return text.replace(re, '$1 (');\n    }\n  };\n  var bracket = {\n    name: 'common/space/bracket',\n    handler: function handler(text) {\n      return text.replace(/(\\() +/g, '(').replace(/ +\\)/g, ')');\n    }\n  };\n  var delBeforePercent = {\n    name: 'common/space/delBeforePercent',\n    handler: function handler(text) {\n      return text.replace(/(\\d)( |\\u00A0)(%|‰|‱)/g, '$1$3');\n    }\n  };\n  var delBeforePunctuation = {\n    name: 'common/space/delBeforePunctuation',\n    handler: function handler(text) {\n      return text.replace(/([!?]) (?=[!?])/g, '$1').replace(/(^|[^!?:;,.…]) ([!?:;,.])(?!\\))/g, '$1$2');\n    }\n  };\n  var delLeadingBlanks = {\n    name: 'common/space/delLeadingBlanks',\n    handler: function handler(text) {\n      return text.replace(/^[ \\t]+/mg, '');\n    },\n    disabled: true\n  };\n  var delRepeatN = {\n    name: 'common/space/delRepeatN',\n    index: '-1',\n    handler: function handler(text, settings) {\n      var maxConsecutiveLineBreaks = settings.maxConsecutiveLineBreaks;\n      var consecutiveLineBreaksRegex = new RegExp(\"\\n{\".concat(maxConsecutiveLineBreaks + 1, \",}\"), 'g');\n      var replaceValue = repeat('\\n', maxConsecutiveLineBreaks);\n      return text.replace(consecutiveLineBreaksRegex, replaceValue);\n    },\n    settings: {\n      maxConsecutiveLineBreaks: 2\n    }\n  };\n  var delRepeatSpace = {\n    name: 'common/space/delRepeatSpace',\n    index: '-1',\n    handler: function handler(text) {\n      return text.replace(/([^\\n \\t])[ \\t]{2,}(?![\\n \\t])/g, '$1 ');\n    }\n  };\n  var delTrailingBlanks = {\n    name: 'common/space/delTrailingBlanks',\n    index: '-3',\n    handler: function handler(text) {\n      return text.replace(/[ \\t]+\\n/g, '\\n');\n    }\n  };\n  var insertFinalNewline = {\n    name: 'common/space/insertFinalNewline',\n    live: false,\n    disabled: true,\n    queue: 'end',\n    handler: function handler(text) {\n      return text[text.length - 1] === '\\n' ? text : text + '\\n';\n    }\n  };\n  var replaceTab = {\n    name: 'common/space/replaceTab',\n    index: '-5',\n    handler: function handler(text) {\n      return text.replace(/\\t/g, '    ');\n    }\n  };\n  var squareBracket = {\n    name: 'common/space/squareBracket',\n    handler: function handler(text) {\n      return text.replace(/(\\[) +/g, '[').replace(/ +\\]/g, ']');\n    }\n  };\n  var trimLeft = {\n    name: 'common/space/trimLeft',\n    index: '-4',\n    handler: String.prototype.trimLeft ? function (text) {\n      return text.trimLeft();\n    } :\n    /* istanbul ignore next */\n    function (text) {\n      return text.replace(/^[\\s\\uFEFF\\xA0]+/g, '');\n    }\n  };\n  var trimRight = {\n    name: 'common/space/trimRight',\n    index: '-3',\n    live: false,\n    handler: String.prototype.trimRight ? function (text) {\n      return text.trimRight();\n    } :\n    /* istanbul ignore next */\n    function (text) {\n      return text.replace(/[\\s\\uFEFF\\xA0]+$/g, '');\n    }\n  };\n  Typograf.addRules([afterPunctuation, beforeBracket, bracket, delBeforePercent, delBeforePunctuation, delLeadingBlanks, delRepeatN, delRepeatSpace, delTrailingBlanks, insertFinalNewline, replaceTab, squareBracket, trimLeft, trimRight]);\n  var arrow = {\n    name: 'common/symbols/arrow',\n    handler: function handler(text) {\n      return replace(text, [[/(^|[^-])->(?!>)/g, '$1→'], [/(^|[^<])<-(?!-)/g, '$1←']]);\n    }\n  };\n  var cf = {\n    name: 'common/symbols/cf',\n    handler: function handler(text) {\n      var re = new RegExp(\"(^|[\\\\s(\\\\[+\\u2248\\xB1\\u2212\\u2014\\u2013\\\\-])(\\\\d+(?:[.,]\\\\d+)?)[ \\xA0\\u2009]?(C|F)([\\\\W\\\\s.,:!?\\\")\\\\]]|$)\", 'mg');\n      return text.replace(re, \"$1$2\\u2009\\xB0$3$4\");\n    }\n  };\n  var copy = {\n    name: 'common/symbols/copy',\n    handler: function handler(text) {\n      return replace(text, [[/\\(r\\)/gi, '®'], [/(copyright )?\\((c|с)\\)/gi, '©'], [/\\(tm\\)/gi, '™']]);\n    }\n  };\n  Typograf.addRules([arrow, cf, copy]);\n  var main = {\n    name: 'en-US/dash/main',\n    index: '-5',\n    handler: function handler(text) {\n      var dashes = getData('common/dash');\n      var nonBreakingSpace = \"\\xA0\";\n      var emDash = \"\\u2014\";\n      var spaceBefore = \"[ \".concat(nonBreakingSpace, \"]\"); // white space or a non-breaking space\n\n      var spaceAfter = \"[ \".concat(nonBreakingSpace, \"\\n]\"); // same as spaceBefore, but includes line break\n\n      var re = new RegExp(\"\".concat(spaceBefore, \"(\").concat(dashes, \")(\").concat(spaceAfter, \")\"), 'g');\n      return text.replace(re, \"\".concat(nonBreakingSpace).concat(emDash, \"$2\"));\n    }\n  };\n  Typograf.addRules([main]);\n  var centuries = {\n    name: 'ru/dash/centuries',\n    handler: function handler(text, settings) {\n      var dashes = '(' + getData('common/dash') + ')';\n      var re = new RegExp(\"(X|I|V)[ |\\xA0]?\" + dashes + \"[ |\\xA0]?(X|I|V)\", 'g');\n      return text.replace(re, '$1' + settings.dash + '$3');\n    },\n    settings: {\n      dash: \"\\u2013\" // &ndash;\n\n    }\n  };\n  var daysMonth = {\n    name: 'ru/dash/daysMonth',\n    handler: function handler(text, settings) {\n      var re = new RegExp('(^|\\\\s)([123]?\\\\d)' + '(' + getData('common/dash') + ')' + \"([123]?\\\\d)[ \\xA0]\" + '(' + getData('ru/monthGenCase') + ')', 'g');\n      return text.replace(re, '$1$2' + settings.dash + \"$4\\xA0$5\");\n    },\n    settings: {\n      dash: \"\\u2013\" // &ndash;\n\n    }\n  };\n  var de$1 = {\n    name: 'ru/dash/de',\n    handler: function handler(text) {\n      var re = new RegExp('([a-яё]+) де' + getData('ru/dashAfterDe'), 'g');\n      return text.replace(re, '$1-де');\n    },\n    disabled: true\n  };\n  var decade = {\n    name: 'ru/dash/decade',\n    handler: function handler(text, settings) {\n      var re = new RegExp('(^|\\\\s)(\\\\d{3}|\\\\d)0' + '(' + getData('common/dash') + ')' + \"(\\\\d{3}|\\\\d)0(-\\u0435[ \\xA0])\" + \"(?=\\u0433\\\\.?[ \\xA0]?\\u0433|\\u0433\\u043E\\u0434)\", 'g');\n      return text.replace(re, '$1$20' + settings.dash + '$40$5');\n    },\n    settings: {\n      dash: \"\\u2013\" // &ndash;\n\n    }\n  };\n  var directSpeech = {\n    name: 'ru/dash/directSpeech',\n    handler: function handler(text) {\n      var dashes = getData('common/dash');\n      var re1 = new RegExp(\"([\\\"\\xBB\\u2018\\u201C,])[ |\\xA0]?(\".concat(dashes, \")[ |\\xA0]\"), 'g');\n      var re2 = new RegExp(\"(^|\".concat(privateLabel, \")(\").concat(dashes, \")( |\\xA0)\"), 'gm');\n      var re3 = new RegExp(\"([.\\u2026?!])[ \\xA0](\".concat(dashes, \")[ \\xA0]\"), 'g');\n      return text.replace(re1, \"$1\\xA0\\u2014 \").replace(re2, \"$1\\u2014\\xA0\").replace(re3, \"$1 \\u2014\\xA0\");\n    }\n  };\n  var izpod = {\n    name: 'ru/dash/izpod',\n    handler: function handler(text) {\n      var re = new RegExp(getData('ru/dashBefore') + '(И|и)з под' + getData('ru/dashAfter'), 'g');\n      return text.replace(re, '$1$2з-под');\n    }\n  };\n  var izza = {\n    name: 'ru/dash/izza',\n    handler: function handler(text) {\n      var re = new RegExp(getData('ru/dashBefore') + '(И|и)з за' + getData('ru/dashAfter'), 'g');\n      return text.replace(re, '$1$2з-за');\n    }\n  };\n  var ka = {\n    name: 'ru/dash/ka',\n    handler: function handler(text) {\n      var re = new RegExp('([a-яё]+) ка(сь)?' + getData('ru/dashAfter'), 'g');\n      return text.replace(re, '$1-ка$2');\n    }\n  };\n  var koe = {\n    name: 'ru/dash/koe',\n    handler: function handler(text) {\n      var re = new RegExp(getData('ru/dashBefore') + '([Кк]о[ей])\\\\s([а-яё]{3,})' + getData('ru/dashAfter'), 'g');\n      return text.replace(re, '$1$2-$3');\n    }\n  };\n  var main$1 = {\n    name: 'ru/dash/main',\n    index: '-5',\n    handler: function handler(text) {\n      var dashes = getData('common/dash');\n      var re = new RegExp(\"([ \\xA0])(\" + dashes + \")([ \\xA0\\\\n])\", 'g');\n      return text.replace(re, \"\\xA0\\u2014$3\");\n    }\n  };\n  var month = {\n    name: 'ru/dash/month',\n    handler: function handler(text, settings) {\n      var months = '(' + getData('ru/month') + ')';\n      var monthsPre = '(' + getData('ru/monthPreCase') + ')';\n      var dashes = getData('common/dash');\n      var re = new RegExp(months + ' ?(' + dashes + ') ?' + months, 'gi');\n      var rePre = new RegExp(monthsPre + ' ?(' + dashes + ') ?' + monthsPre, 'gi');\n      var newSubStr = '$1' + settings.dash + '$3';\n      return text.replace(re, newSubStr).replace(rePre, newSubStr);\n    },\n    settings: {\n      dash: \"\\u2013\" // &ndash;\n\n    }\n  };\n  var surname = {\n    name: 'ru/dash/surname',\n    handler: function handler(text) {\n      var re = new RegExp('([А-ЯЁ][а-яё]+)\\\\s-([а-яё]{1,3})(?![^а-яё]|$)', 'g');\n      return text.replace(re, \"$1\\xA0\\u2014$2\");\n    }\n  };\n  var taki = {\n    name: 'ru/dash/taki',\n    handler: function handler(text) {\n      var re = new RegExp('(верно|довольно|опять|прямо|так|вс[её]|действительно|неужели)\\\\s(таки)' + getData('ru/dashAfter'), 'g');\n      return text.replace(re, '$1-$2');\n    }\n  };\n  var time = {\n    name: 'ru/dash/time',\n    handler: function handler(text, settings) {\n      var re = new RegExp(getData('ru/dashBefore') + '(\\\\d?\\\\d:[0-5]\\\\d)' + getData('common/dash') + '(\\\\d?\\\\d:[0-5]\\\\d)' + getData('ru/dashAfter'), 'g');\n      return text.replace(re, '$1$2' + settings.dash + '$3');\n    },\n    settings: {\n      dash: \"\\u2013\" // &ndash;\n\n    }\n  };\n  var to = {\n    name: 'ru/dash/to',\n    handler: function handler(text) {\n      var words = ['откуда', 'куда', 'где', 'когда', 'зачем', 'почему', 'как', 'како[ейм]', 'какая', 'каки[емх]', 'какими', 'какую', 'что', 'чего', 'че[йм]', 'чьим?', 'кто', 'кого', 'кому', 'кем'];\n      var re = new RegExp('(' + words.join('|') + ')( | -|- )(то|либо|нибудь)' + getData('ru/dashAfter'), 'gi');\n      return text.replace(re, '$1-$3');\n    }\n  };\n  var weekday = {\n    name: 'ru/dash/weekday',\n    handler: function handler(text, settings) {\n      var part = '(' + getData('ru/weekday') + ')';\n      var re = new RegExp(part + ' ?(' + getData('common/dash') + ') ?' + part, 'gi');\n      return text.replace(re, '$1' + settings.dash + '$3');\n    },\n    settings: {\n      dash: \"\\u2013\" // &ndash;\n\n    }\n  };\n  var years = {\n    name: 'ru/dash/years',\n    handler: function handler(text, settings) {\n      var dashes = getData('common/dash');\n      var re = new RegExp(\"(\\\\D|^)(\\\\d{4})[ \\xA0]?(\" + dashes + \")[ \\xA0]?(\\\\d{4})(?=[ \\xA0]?\\u0433)\", 'g');\n      return text.replace(re, function ($0, $1, $2, $3, $4) {\n        if (parseInt($2, 10) < parseInt($4, 10)) {\n          return $1 + $2 + settings.dash + $4;\n        }\n\n        return $0;\n      });\n    },\n    settings: {\n      dash: \"\\u2013\" // &ndash;\n\n    }\n  };\n  Typograf.addRules([centuries, daysMonth, de$1, decade, directSpeech, izpod, izza, ka, koe, main$1, month, surname, taki, time, to, weekday, years]);\n  var fromISO = {\n    name: 'ru/date/fromISO',\n    handler: function handler(text) {\n      var sp1 = '(-|\\\\.|\\\\/)';\n      var sp2 = '(-|\\\\/)';\n      var re1 = new RegExp('(^|\\\\D)(\\\\d{4})' + sp1 + '(\\\\d{2})' + sp1 + '(\\\\d{2})(\\\\D|$)', 'gi');\n      var re2 = new RegExp('(^|\\\\D)(\\\\d{2})' + sp2 + '(\\\\d{2})' + sp2 + '(\\\\d{4})(\\\\D|$)', 'gi');\n      return text.replace(re1, '$1$6.$4.$2$7').replace(re2, '$1$4.$2.$6$7');\n    }\n  };\n  var weekday$1 = {\n    name: 'ru/date/weekday',\n    handler: function handler(text) {\n      var space = \"( |\\xA0)\";\n      var monthCase = getData('ru/monthGenCase');\n      var weekday = getData('ru/weekday');\n      var re = new RegExp('(\\\\d)' + space + '(' + monthCase + '),' + space + '(' + weekday + ')', 'gi');\n      return text.replace(re, function () {\n        var a = arguments;\n        return a[1] + a[2] + a[3].toLowerCase() + ',' + a[4] + a[5].toLowerCase();\n      });\n    }\n  };\n  Typograf.addRules([fromISO, weekday$1]);\n  var currency = {\n    name: 'ru/money/currency',\n    handler: function handler(text) {\n      var currency = '([$€¥Ұ£₤₽])';\n      var space = \"[ \\xA0\\u2009\\u202F]\";\n      var re1 = new RegExp('(^|[\\\\D]{2})' + currency + ' ?(' + regExpNumber + '(' + space + '\\\\d{3})*)(' + space + '?(тыс\\\\.|млн|млрд|трлн))?', 'gm');\n      var re2 = new RegExp('(^|[\\\\D])(' + regExpNumber + ') ?' + currency, 'gm');\n      return text.replace(re1, function ($0, $1, $2, $3, $4, $5, $6, $7) {\n        return $1 + $3 + ($7 ? \"\\xA0\" + $7 : '') + \"\\xA0\" + $2;\n      }).replace(re2, \"$1$2\\xA0$4\");\n    },\n    disabled: true\n  };\n  var ruble = {\n    name: 'ru/money/ruble',\n    handler: function handler(text) {\n      var newSubstr = \"$1\\xA0\\u20BD\";\n      var commonPart = \"(\\\\d+)( |\\xA0)?(\\u0440|\\u0440\\u0443\\u0431)\\\\.\";\n      var re1 = new RegExp('^' + commonPart + '$', 'g');\n      var re2 = new RegExp(commonPart + '(?=[!?,:;])', 'g');\n      var re3 = new RegExp(commonPart + '(?=\\\\s+[A-ЯЁ])', 'g');\n      return text.replace(re1, newSubstr).replace(re2, newSubstr).replace(re3, newSubstr + '.');\n    },\n    disabled: true\n  };\n  Typograf.addRules([currency, ruble]);\n  var abbr = {\n    name: 'ru/nbsp/abbr',\n    handler: function handler(text) {\n      function abbr($0, $1, $2, $3) {\n        // дд.мм.гггг\n        if ($2 === 'дд' && $3 === 'мм') {\n          return $0;\n        } // Являются ли сокращения ссылкой\n\n\n        if (['рф', 'ру', 'рус', 'орг', 'укр', 'бг', 'срб'].indexOf($3) > -1) {\n          return $0;\n        }\n\n        return $1 + $2 + '.' + \"\\xA0\" + $3 + '.';\n      }\n\n      var re = new RegExp(\"(^|\\\\s|\".concat(privateLabel, \")([\\u0430-\\u044F\\u0451]{1,3})\\\\. ?([\\u0430-\\u044F\\u0451]{1,3})\\\\.\"), 'g');\n      return text.replace(re, abbr) // Для тройных сокращений - а.е.м.\n      .replace(re, abbr);\n    }\n  };\n  var addr = {\n    name: 'ru/nbsp/addr',\n    handler: function handler(text) {\n      return text.replace(/(\\s|^)(дом|д\\.|кв\\.|под\\.|п-д) *(\\d+)/gi, \"$1$2\\xA0$3\").replace(/(\\s|^)(мкр-н|мк-н|мкр\\.|мкрн)\\s/gi, \"$1$2\\xA0\") // микрорайон\n      .replace(/(\\s|^)(эт\\.) *(-?\\d+)/gi, \"$1$2\\xA0$3\").replace(/(\\s|^)(\\d+) +этаж([^а-яё]|$)/gi, \"$1$2\\xA0\\u044D\\u0442\\u0430\\u0436$3\").replace(/(\\s|^)литер\\s([А-Я]|$)/gi, \"$1\\u043B\\u0438\\u0442\\u0435\\u0440\\xA0$2\")\n      /*\n          область, край, станция, поселок, село,\n          деревня, улица, переулок, проезд, проспект,\n          бульвар, площадь, набережная, шоссе,\n          тупик, офис, комната, участок, владение, строение, корпус\n      */\n      .replace(/(\\s|^)(обл|кр|ст|пос|с|д|ул|пер|пр|пр-т|просп|пл|бул|б-р|наб|ш|туп|оф|комн?|уч|вл|влад|стр|кор)\\. *([а-яёa-z\\d]+)/gi, \"$1$2.\\xA0$3\") // город\n      .replace(/(\\D[ \\u00A0]|^)г\\. ?([А-ЯЁ])/gm, \"$1\\u0433.\\xA0$2\");\n    }\n  };\n  var afterNumberSign = {\n    name: 'ru/nbsp/afterNumberSign',\n    handler: function handler(text) {\n      // \\u2009 - THIN SPACE\n      // \\u202F - NARROW NO-BREAK SPACE\n      return text.replace(/№[ \\u00A0\\u2009]?(\\d|п\\/п)/g, \"\\u2116\\u202F$1\");\n    }\n  };\n  var beforeParticle = {\n    name: 'ru/nbsp/beforeParticle',\n    index: '+5',\n    handler: function handler(text) {\n      var particles = '(ли|ль|же|ж|бы|б)';\n      var re1 = new RegExp('([А-ЯЁа-яё]) ' + particles + '(?=[,;:?!\"‘“»])', 'g');\n      var re2 = new RegExp(\"([\\u0410-\\u042F\\u0401\\u0430-\\u044F\\u0451])[ \\xA0]\" + particles + \"[ \\xA0]\", 'g');\n      return text.replace(re1, \"$1\\xA0$2\").replace(re2, \"$1\\xA0$2 \");\n    }\n  };\n  var centuries$1 = {\n    name: 'ru/nbsp/centuries',\n    handler: function handler(text) {\n      var dashes = getData('common/dash');\n      var before = '(^|\\\\s)([VIX]+)';\n      var after = '(?=[,;:?!\"‘“»]|$)';\n      var re1 = new RegExp(before + \"[ \\xA0]?\\u0432\\\\.?\" + after, 'gm');\n      var re2 = new RegExp(before + '(' + dashes + ')' + \"([VIX]+)[ \\xA0]?\\u0432\\\\.?([ \\xA0]?\\u0432\\\\.?)?\" + after, 'gm');\n      return text.replace(re1, \"$1$2\\xA0\\u0432.\").replace(re2, \"$1$2$3$4\\xA0\\u0432\\u0432.\");\n    }\n  };\n  var dayMonth = {\n    name: 'ru/nbsp/dayMonth',\n    handler: function handler(text) {\n      var re = new RegExp('(\\\\d{1,2}) (' + getData('ru/shortMonth') + ')', 'gi');\n      return text.replace(re, \"$1\\xA0$2\");\n    }\n  };\n  var initials = {\n    name: 'ru/nbsp/initials',\n    handler: function handler(text) {\n      var spaces = \"\\xA0\\u202F \"; // nbsp, thinsp\n\n      var quote = getData('ru/quote');\n      var re = new RegExp('(^|[' + spaces + quote.left + privateLabel + '\"])([А-ЯЁ])\\\\.[' + spaces + ']?([А-ЯЁ])\\\\.[' + spaces + ']?([А-ЯЁ][а-яё]+)(?=[\\\\s.,;:?!\"' + quote.right + ']|$)', 'gm');\n      return text.replace(re, \"$1$2.\\xA0$3.\\xA0$4\");\n    }\n  };\n  var m = {\n    name: 'ru/nbsp/m',\n    index: '+5',\n    handler: function handler(text) {\n      var re = new RegExp('(^|[\\\\s,.\\\\(' + privateLabel + '])' + \"(\\\\d+)[ \\xA0]?(\\u043C\\u043C?|\\u0441\\u043C|\\u043A\\u043C|\\u0434\\u043C|\\u0433\\u043C|mm?|km|cm|dm)([23\\xB2\\xB3])?([\\\\s\\\\).!?,;\" + privateLabel + ']|$)', 'gm');\n      return text.replace(re, function ($0, $1, $2, $3, $4, $5) {\n        var pow = {\n          '2': '²',\n          '²': '²',\n          '3': '³',\n          '³': '³',\n          '': ''\n        }[$4 || ''];\n        return $1 + $2 + \"\\xA0\" + $3 + pow + ($5 === \"\\xA0\" ? ' ' : $5);\n      });\n    }\n  };\n  var mln = {\n    name: 'ru/nbsp/mln',\n    handler: function handler(text) {\n      return text.replace(/(\\d) ?(тыс|млн|млрд|трлн)(\\.|\\s|$)/gi, \"$1\\xA0$2$3\");\n    }\n  };\n  var ooo = {\n    name: 'ru/nbsp/ooo',\n    handler: function handler(text) {\n      return text.replace(/(^|[^a-яёA-ЯЁ])(ООО|ОАО|ЗАО|НИИ|ПБОЮЛ) /g, \"$1$2\\xA0\");\n    }\n  };\n  var page = {\n    name: 'ru/nbsp/page',\n    handler: function handler(text) {\n      var re = new RegExp('(^|[)\\\\s' + privateLabel + '])' + '(стр|гл|рис|илл?|ст|п|c)\\\\. *(\\\\d+)([\\\\s.,?!;:]|$)', 'gim');\n      return text.replace(re, \"$1$2.\\xA0$3$4\");\n    }\n  };\n  var ps = {\n    name: 'ru/nbsp/ps',\n    handler: function handler(text) {\n      var re = new RegExp(\"(^|\\\\s|\".concat(privateLabel, \")[p\\u0437]\\\\.[ \\xA0]?([p\\u0437]\\\\.[ \\xA0]?)?[s\\u044B]\\\\.:? \"), 'gim');\n      return text.replace(re, function ($0, $1, $2) {\n        return $1 + ($2 ? \"P.\\xA0P.\\xA0S. \" : \"P.\\xA0S. \");\n      });\n    }\n  };\n  var rubleKopek = {\n    name: 'ru/nbsp/rubleKopek',\n    handler: function handler(text) {\n      return text.replace(/(\\d) ?(?=(руб|коп)\\.)/g, \"$1\\xA0\");\n    }\n  };\n  var see = {\n    name: 'ru/nbsp/see',\n    handler: function handler(text) {\n      var re = new RegExp(\"(^|\\\\s|\".concat(privateLabel, \"|\\\\()(\\u0441\\u043C|\\u0438\\u043C)\\\\.[ \\xA0]?([\\u0430-\\u044F\\u04510-9a-z]+)([\\\\s.,?!]|$)\"), 'gi');\n      return text.replace(re, function ($0, $1, $2, $3, $4) {\n        return ($1 === \"\\xA0\" ? ' ' : $1) + $2 + \".\\xA0\" + $3 + $4;\n      });\n    }\n  };\n  var year = {\n    name: 'ru/nbsp/year',\n    handler: function handler(text) {\n      return text.replace(/(^|\\D)(\\d{4}) ?г([ ,;.\\n]|$)/g, \"$1$2\\xA0\\u0433$3\");\n    }\n  };\n  var years$1 = {\n    name: 'ru/nbsp/years',\n    index: '+5',\n    handler: function handler(text) {\n      var dashes = getData('common/dash');\n      var re = new RegExp('(^|\\\\D)(\\\\d{4})(' + dashes + \")(\\\\d{4})[ \\xA0]?\\u0433\\\\.?([ \\xA0]?\\u0433\\\\.)?(?=[,;:?!\\\"\\u2018\\u201C\\xBB\\\\s]|$)\", 'gm');\n      return text.replace(re, \"$1$2$3$4\\xA0\\u0433\\u0433.\");\n    }\n  };\n  Typograf.addRules([abbr, addr, afterNumberSign, beforeParticle, centuries$1, dayMonth, initials, m, mln, ooo, page, ps, rubleKopek, see, year, years$1]);\n  var comma = {\n    name: 'ru/number/comma',\n    handler: function handler(text) {\n      // \\u00A0 - NO-BREAK SPACE\n      // \\u2009 - THIN SPACE\n      // \\u202F - NARROW NO-BREAK SPACE\n      return text.replace(/(^|\\s)(\\d+)\\.(\\d+[\\u00A0\\u2009\\u202F ]*?[%‰°×x])/gim, '$1$2,$3');\n    }\n  };\n  var ordinals = {\n    name: 'ru/number/ordinals',\n    handler: function handler(text, settings, context) {\n      var re = new RegExp('(\\\\d[%‰]?)-(ый|ой|ая|ое|ые|ым|ом|ых|ого|ому|ыми)(?![' + context.getData('char') + '])', 'g');\n      return text.replace(re, function ($0, $1, $2) {\n        var parts = {\n          'ой': 'й',\n          'ый': 'й',\n          'ая': 'я',\n          'ое': 'е',\n          'ые': 'е',\n          'ым': 'м',\n          'ом': 'м',\n          'ых': 'х',\n          'ого': 'го',\n          'ому': 'му',\n          'ыми': 'ми'\n        };\n        return $1 + '-' + parts[$2];\n      });\n    }\n  };\n  Typograf.addRules([comma, ordinals]);\n\n  function removeOptAlignTags(text, classNames) {\n    var re = new RegExp('<span class=\"(' + classNames.join('|') + ')\">([^]*?)</span>', 'g');\n    return text.replace(re, '$2');\n  }\n\n  function removeOptAlignTagsFromTitle(text, classNames) {\n    return text.replace(/<title>[^]*?<\\/title>/i, function (text) {\n      return removeOptAlignTags(text, classNames);\n    });\n  }\n\n  var classNames = ['typograf-oa-lbracket', 'typograf-oa-n-lbracket', 'typograf-oa-sp-lbracket'];\n  var name = 'ru/optalign/bracket';\n  var bracket$1 = {\n    name: name,\n    handler: function handler(text) {\n      return text.replace(/( |\\u00A0)\\(/g, '<span class=\"typograf-oa-sp-lbracket\">$1</span><span class=\"typograf-oa-lbracket\">(</span>').replace(/^\\(/gm, '<span class=\"typograf-oa-n-lbracket\">(</span>');\n    },\n    disabled: true,\n    htmlAttrs: false\n  };\n  var innerStartBracket = {\n    name: name,\n    queue: 'start',\n    handler: function handler(text) {\n      return removeOptAlignTags(text, classNames);\n    }\n  };\n  var innerEndBracket = {\n    name: name,\n    queue: 'end',\n    handler: function handler(text) {\n      return removeOptAlignTagsFromTitle(text, classNames);\n    }\n  };\n  var classNames$1 = ['typograf-oa-comma', 'typograf-oa-comma-sp'];\n  var name$1 = 'ru/optalign/comma';\n  var comma$1 = {\n    name: name$1,\n    handler: function handler(text, settings, context) {\n      var re = new RegExp('([' + context.getData('char') + \"\\\\d\\u0301]+), \", 'gi');\n      return text.replace(re, '$1<span class=\"typograf-oa-comma\">,</span><span class=\"typograf-oa-comma-sp\"> </span>');\n    },\n    disabled: true,\n    htmlAttrs: false\n  };\n  var innerStartComma = {\n    name: name$1,\n    queue: 'start',\n    handler: function handler(text) {\n      return removeOptAlignTags(text, classNames$1);\n    }\n  };\n  var innerEndComma = {\n    name: name$1,\n    queue: 'end',\n    handler: function handler(text) {\n      return removeOptAlignTagsFromTitle(text, classNames$1);\n    }\n  };\n  var classNames$2 = ['typograf-oa-lquote', 'typograf-oa-n-lquote', 'typograf-oa-sp-lquote'];\n  var name$2 = 'ru/optalign/quote';\n  var quote$1 = {\n    name: name$2,\n    handler: function handler(text) {\n      var quote = this.getSetting('common/punctuation/quote', 'ru');\n      var lquotes = '([' + quote.left[0] + (quote.left[1] || '') + '])';\n      var reNewLine = new RegExp('(^|\\n\\n|' + privateLabel + ')(' + lquotes + ')', 'g');\n      var reInside = new RegExp('([^\\n' + privateLabel + \"])([ \\xA0\\n])(\" + lquotes + ')', 'gi');\n      return text.replace(reNewLine, '$1<span class=\"typograf-oa-n-lquote\">$2</span>').replace(reInside, '$1<span class=\"typograf-oa-sp-lquote\">$2</span><span class=\"typograf-oa-lquote\">$3</span>');\n    },\n    disabled: true,\n    htmlAttrs: false\n  };\n  var innerStartQuote = {\n    name: name$2,\n    queue: 'start',\n    handler: function handler(text) {\n      return removeOptAlignTags(text, classNames$2);\n    }\n  };\n  var innerEndQuote = {\n    name: name$2,\n    queue: 'end',\n    handler: function handler(text) {\n      return removeOptAlignTagsFromTitle(text, classNames$2);\n    }\n  };\n  Typograf.addRules([bracket$1, comma$1, quote$1]);\n  Typograf.addInnerRules([innerStartBracket, innerEndBracket, innerStartComma, innerEndComma, innerStartQuote, innerEndQuote]);\n  var accent = {\n    name: 'ru/other/accent',\n    handler: function handler(text) {\n      return text.replace(/([а-яё])([АЕЁИОУЫЭЮЯ])([^А-ЯЁ\\w]|$)/g, function ($0, $1, $2, $3) {\n        return $1 + $2.toLowerCase() + \"\\u0301\" + $3;\n      });\n    },\n    disabled: true\n  };\n  var defaultCityCodeLength = 5;\n  var countryCode = '7';\n  var exceptions = [];\n  var exceptionsMax = 8;\n  var exceptionsMin = 2;\n  [4162, 416332, 8512, 851111, 4722, 4725, 391379, 8442, 4732, 4152, 4154451, 4154459, 4154455, 41544513, 8142, 8332, 8612, 8622, 3525, 812, 8342, 8152, 3812, 4862, 3422, 342633, 8112, 9142, 8452, 3432, 3434, 3435, 4812, 8432, 8439, 3822, 4872, 3412, 3511, 3512, 3022, 4112, 4852, 4855, 3852, 3854, 8182, 818, 90, 3472, 4741, 4764, 4832, 4922, 8172, 8202, 8722, 4932, 493, 3952, 3951, 3953, 411533, 4842, 3842, 3843, 8212, 4942, '39131-39179', '39190-39199', 391, 4712, 4742, 8362, 495, 499, 4966, 4964, 4967, 498, 8312, 8313, 3832, 383612, 3532, 8412, 4232, 423370, 423630, 8632, 8642, 8482, 4242, 8672, 8652, 4752, 4822, 482502, 4826300, 3452, 8422, 4212, 3466, 3462, 8712, 8352, '901-934', '936-939', '950-953', 958, '960-969', '977-989', '991-997', 999].forEach(function (num) {\n    if (typeof num === 'string') {\n      var buf = num.split('-');\n\n      for (var i = +buf[0]; i <= +buf[1]; i++) {\n        exceptions.push(i);\n      }\n    } else {\n      exceptions.push(num);\n    }\n  });\n\n  function phone(num) {\n    var firstSym = num[0];\n    var cityCode = '';\n    var hasPlusWithCode;\n    var hasEight;\n\n    if (num.length < 8) {\n      return phoneBlocks(num);\n    } // 8 495 123-45-67, +7 495 123-45-67\n\n\n    if (num.length > 10) {\n      if (firstSym === '+') {\n        if (num[1] === countryCode) {\n          hasPlusWithCode = true;\n          num = num.substr(2);\n        } else {\n          return num;\n        }\n      } else if (firstSym === '8') {\n        hasEight = true;\n        num = num.substr(1);\n      }\n    }\n\n    for (var cityCodeLen = exceptionsMax; cityCodeLen >= exceptionsMin; cityCodeLen--) {\n      var code = +num.substr(0, cityCodeLen);\n\n      if (exceptions.indexOf(code) > -1) {\n        cityCode = num.substr(0, cityCodeLen);\n        num = num.substr(cityCodeLen);\n        break;\n      }\n    }\n\n    if (!cityCode) {\n      cityCode = num.substr(0, defaultCityCodeLength);\n      num = num.substr(defaultCityCodeLength);\n    }\n\n    return (hasPlusWithCode ? '+' + countryCode + \"\\xA0\" : '') + (hasEight ? \"8\\xA0\" : '') + prepareCode(cityCode) + \"\\xA0\" + phoneBlocks(num);\n  }\n\n  function prepareCode(code) {\n    var numCode = +code;\n    var len = code.length;\n    var result = [code];\n    var withoutBrackets = false;\n\n    if (len > 3) {\n      switch (len) {\n        case 4:\n          result = [code.substr(0, 2), code.substr(2, 2)];\n          break;\n\n        case 5:\n          result = [code.substr(0, 3), code.substr(3, 3)];\n          break;\n\n        case 6:\n          result = [code.substr(0, 2), code.substr(2, 2), code.substr(4, 2)];\n          break;\n      }\n    } else {\n      // Мобильные и московские номера без скобок\n      withoutBrackets = numCode > 900 && numCode <= 999 || numCode === 495 || numCode === 499;\n    }\n\n    result = result.join('-');\n    return withoutBrackets ? result : '(' + result + ')';\n  }\n\n  function phoneBlocks(num) {\n    var add = '';\n\n    if (num.length % 2) {\n      add = num[0];\n      add += num.length <= 5 ? '-' : '';\n      num = num.substr(1, num.length - 1);\n    }\n\n    return add + num.split(/(?=(?:\\d\\d)+$)/).join('-');\n  }\n\n  function clearPhone(text) {\n    return text.replace(/[^\\d+]/g, '');\n  }\n\n  var phoneNumber = {\n    name: 'ru/other/phone-number',\n    live: false,\n    handler: function handler(text) {\n      var re = new RegExp('(^|,| |' + privateLabel + \")(\\\\+7[\\\\d\\\\(\\\\) \\xA0-]{10,18})(?=,|;|\" + privateLabel + '|$)', 'gm');\n      return text.replace(re, function ($0, $1, $2) {\n        var buf = clearPhone($2);\n        return buf.length === 12 ? $1 + phone(buf) : $0;\n      }).replace( // eslint-disable-next-line no-misleading-character-class\n      /(^|[^а-яё])([☎☏✆📠📞📱]|т\\.|тел\\.|ф\\.|моб\\.|факс|сотовый|мобильный|телефон)(:?\\s*?)([+\\d(][\\d \\u00A0\\-()]{3,}\\d)/gi, function ($0, $1, $2, $3, $4) {\n        var buf = clearPhone($4);\n\n        if (buf.length >= 5) {\n          return $1 + $2 + $3 + phone(buf);\n        }\n\n        return $0;\n      });\n    }\n  };\n  Typograf.addRules([accent, phoneNumber]);\n  var ano = {\n    name: 'ru/punctuation/ano',\n    handler: function handler(text) {\n      var re = new RegExp(\"([^!?,:;\\\\-\\u2012\\u2013\\u2014\\\\s])(\\\\s+)(\\u0430|\\u043D\\u043E)(?= |\\xA0|\\\\n)\", 'g');\n      return text.replace(re, '$1,$2$3');\n    },\n    // Запятая может идти после ссылки.\n    queue: 'hide-safe-tags-html'\n  };\n  var exclamation = {\n    name: 'ru/punctuation/exclamation',\n    live: false,\n    handler: function handler(text) {\n      return text.replace(/(^|[^!])!{2}($|[^!])/gm, '$1!$2').replace(/(^|[^!])!{4}($|[^!])/gm, '$1!!!$2');\n    }\n  };\n  var exclamationQuestion = {\n    name: 'ru/punctuation/exclamationQuestion',\n    index: '+5',\n    handler: function handler(text) {\n      var re = new RegExp('(^|[^!])!\\\\?([^?]|$)', 'g');\n      return text.replace(re, '$1?!$2');\n    }\n  };\n  var hellipQuestion = {\n    name: 'ru/punctuation/hellipQuestion',\n    handler: function handler(text) {\n      return text.replace(/(^|[^.])(\\.\\.\\.|…),/g, '$1…').replace(/(!|\\?)(\\.\\.\\.|…)(?=[^.]|$)/g, '$1..');\n    }\n  };\n  Typograf.addRules([ano, exclamation, exclamationQuestion, hellipQuestion]);\n  var afterHellip = {\n    name: 'ru/space/afterHellip',\n    handler: function handler(text) {\n      return text.replace(/([а-яё])(\\.\\.\\.|…)([А-ЯЁ])/g, '$1$2 $3').replace(/([?!]\\.\\.)([а-яёa-z])/gi, '$1 $2');\n    }\n  };\n  var year$1 = {\n    name: 'ru/space/year',\n    handler: function handler(text, settings, context) {\n      var re = new RegExp(\"(^| |\\xA0)(\\\\d{3,4})(\\u0433\\u043E\\u0434([\\u0430\\u0443\\u0435]|\\u043E\\u043C)?)([^\" + context.getData('char') + ']|$)', 'g');\n      return text.replace(re, '$1$2 $3$5');\n    }\n  };\n  Typograf.addRules([afterHellip, year$1]);\n  var nn = {\n    name: 'ru/symbols/NN',\n    handler: function handler(text) {\n      return text.replace(/№№/g, '№');\n    }\n  };\n  Typograf.addRules([nn]);\n  var replacements = {\n    A: 'А',\n    // Latin: Russian\n    a: 'а',\n    B: 'В',\n    E: 'Е',\n    e: 'е',\n    K: 'К',\n    M: 'М',\n    H: 'Н',\n    O: 'О',\n    o: 'о',\n    P: 'Р',\n    p: 'р',\n    C: 'С',\n    c: 'с',\n    T: 'Т',\n    y: 'у',\n    X: 'Х',\n    x: 'х'\n  };\n  var keys = Object.keys(replacements).join('');\n  var switchingKeyboardLayout = {\n    name: 'ru/typo/switchingKeyboardLayout',\n    handler: function handler(text) {\n      var re = new RegExp('([' + keys + ']{1,3})(?=[А-ЯЁа-яё]+?)', 'g');\n      return text.replace(re, function (str, $1) {\n        var result = '';\n\n        for (var i = 0; i < $1.length; i++) {\n          result += replacements[$1[i]];\n        }\n\n        return result;\n      });\n    }\n  };\n  Typograf.addRules([switchingKeyboardLayout]);\n  var titles = {\n    \"common/html/e-mail\": {\n      \"en-US\": \"Placement of links for e-mail\",\n      \"ru\": \"Расстановка ссылок для эл. почты\"\n    },\n    \"common/html/escape\": {\n      \"en-US\": \"Escaping HTML\",\n      \"ru\": \"Экранирование HTML\"\n    },\n    \"common/html/nbr\": {\n      \"en-US\": \"Replacement line break on <br/>\",\n      \"ru\": \"Замена перевода строки на <br/>\"\n    },\n    \"common/html/p\": {\n      \"en-US\": \"Placement of paragraph\",\n      \"ru\": \"Расстановка абзацев\"\n    },\n    \"common/html/processingAttrs\": {\n      \"en-US\": \"Processing HTML attributes\",\n      \"ru\": \"Типографирование HTML-атрибутов\"\n    },\n    \"common/html/quot\": {\n      \"common\": \"&⁠quot; → \\\"\"\n    },\n    \"common/html/stripTags\": {\n      \"en-US\": \"Removing HTML-tags\",\n      \"ru\": \"Удаление HTML-тегов\"\n    },\n    \"common/html/url\": {\n      \"en-US\": \"Placement of links\",\n      \"ru\": \"Расстановка ссылок\"\n    },\n    \"common/nbsp/afterNumber\": {\n      \"en-US\": \"Non-breaking space between number and word\",\n      \"ru\": \"Нераз. пробел между числом и словом\"\n    },\n    \"common/nbsp/afterParagraphMark\": {\n      \"en-US\": \"Non-breaking space after ¶\",\n      \"ru\": \"Нераз. пробел после ¶\"\n    },\n    \"common/nbsp/afterSectionMark\": {\n      \"en-US\": \"Non-breaking space after §\",\n      \"ru\": \"Нераз. узкий пробел после §\"\n    },\n    \"common/nbsp/afterShortWord\": {\n      \"en-US\": \"Non-breaking space after short word\",\n      \"ru\": \"Нераз. пробел после короткого слова\"\n    },\n    \"common/nbsp/beforeShortLastNumber\": {\n      \"en-US\": \"Non-breaking space before number (maximum 2 digits) at end of sentence\",\n      \"ru\": \"Нераз. пробел перед числом (не более 2 цифр) в конце предложения\"\n    },\n    \"common/nbsp/beforeShortLastWord\": {\n      \"en-US\": \"Non-breaking space before last short word in sentence\",\n      \"ru\": \"Нераз. пробел перед последним коротким словом в предложении\"\n    },\n    \"common/nbsp/dpi\": {\n      \"en-US\": \"Non-breaking space before lpi and dpi\",\n      \"ru\": \"Нераз. пробел перед lpi и dpi\"\n    },\n    \"common/nbsp/nowrap\": {\n      \"en-US\": \"Replace non-breaking space to normal space in tags nowrap and nobr\",\n      \"ru\": \"Заменять нераз. пробел на обычный пробел в тегах nowrap и nobr\"\n    },\n    \"common/nbsp/replaceNbsp\": {\n      \"en-US\": \"Replacing non-breaking space on normal before text correction\",\n      \"ru\": \"Замена неразрывного пробела на обычный перед типографированием\"\n    },\n    \"common/number/digitGrouping\": {\n      \"en-US\": \"Divide into groups numbers with many digits\",\n      \"ru\": \"Разбивать длинные числа по разрядам\"\n    },\n    \"common/number/fraction\": {\n      \"common\": \"1/2 → ½, 1/4 → ¼, 3/4 → ¾\"\n    },\n    \"common/number/mathSigns\": {\n      \"common\": \"!= → ≠, <= → ≤, >= → ≥, ~= → ≅, +- → ±\"\n    },\n    \"common/number/times\": {\n      \"common\": \"x → × (10 x 5 → 10×5)\"\n    },\n    \"common/other/delBOM\": {\n      \"en-US\": \"Delete character BOM (Byte Order Mark)\",\n      \"ru\": \"Удаление символа BOM (Byte Order Mark)\"\n    },\n    \"common/other/repeatWord\": {\n      \"en-US\": \"Removing repeat words\",\n      \"ru\": \"Удаление повтора слова\"\n    },\n    \"common/punctuation/apostrophe\": {\n      \"en-US\": \"Placement of correct apostrophe\",\n      \"ru\": \"Расстановка правильного апострофа\"\n    },\n    \"common/punctuation/delDoublePunctuation\": {\n      \"en-US\": \"Removing double punctuation\",\n      \"ru\": \"Удаление двойной пунктуации\"\n    },\n    \"common/punctuation/hellip\": {\n      \"en-US\": \"Replacement of three points by ellipsis\",\n      \"ru\": \"Замена трёх точек на многоточие\"\n    },\n    \"common/punctuation/quote\": {\n      \"en-US\": \"Placement of quotation marks in texts\",\n      \"ru\": \"Расстановка кавычек правильного вида\"\n    },\n    \"common/punctuation/quoteLink\": {\n      \"en-US\": \"Removal quotes outside a link\",\n      \"ru\": \"Вынос кавычек за пределы ссылки\"\n    },\n    \"common/space/afterPunctuation\": {\n      \"en-US\": \"space after punctuation\",\n      \"ru\": \"Пробел после знаков пунктуации\"\n    },\n    \"common/space/beforeBracket\": {\n      \"en-US\": \"Space before opening bracket\",\n      \"ru\": \"Пробел перед открывающей скобкой\"\n    },\n    \"common/space/bracket\": {\n      \"en-US\": \"Remove extra spaces after opening and before closing bracket\",\n      \"ru\": \"Удаление лишних пробелов после открывающей и перед закрывающей скобкой\"\n    },\n    \"common/space/delBeforePercent\": {\n      \"en-US\": \"Remove space before %, ‰ and ‱\",\n      \"ru\": \"Удаление пробела перед %, ‰ и ‱\"\n    },\n    \"common/space/delBeforePunctuation\": {\n      \"en-US\": \"Remove spaces before punctuation\",\n      \"ru\": \"Удаление пробелов перед знаками пунктуации\"\n    },\n    \"common/space/delLeadingBlanks\": {\n      \"en-US\": \"Remove spaces at start of line\",\n      \"ru\": \"Удаление пробелов в начале строки\"\n    },\n    \"common/space/delRepeatN\": {\n      \"en-US\": \"Remove duplicate line breaks\",\n      \"ru\": \"Удаление повторяющихся переносов строки\"\n    },\n    \"common/space/delRepeatSpace\": {\n      \"en-US\": \"Removing duplicate spaces between characters\",\n      \"ru\": \"Удаление повторяющихся пробелов между символами\"\n    },\n    \"common/space/delTrailingBlanks\": {\n      \"en-US\": \"Remove spaces at end of line\",\n      \"ru\": \"Удаление пробелов в конце строки\"\n    },\n    \"common/space/insertFinalNewline\": {\n      \"en-US\": \"Insert final newline\",\n      \"ru\": \"Вставить в конце текста перевод строки\"\n    },\n    \"common/space/replaceTab\": {\n      \"en-US\": \"Replacement of tab to 4 spaces\",\n      \"ru\": \"Замена таба на 4 пробела\"\n    },\n    \"common/space/squareBracket\": {\n      \"en-US\": \"Remove extra spaces after opening and before closing square bracket\",\n      \"ru\": \"Удаление лишних пробелов после открывающей и перед закрывающей квадратной скобкой\"\n    },\n    \"common/space/trimLeft\": {\n      \"en-US\": \"Remove spaces and line breaks in beginning of text\",\n      \"ru\": \"Удаление пробелов и переносов строк в начале текста\"\n    },\n    \"common/space/trimRight\": {\n      \"en-US\": \"Remove spaces and line breaks at end of text\",\n      \"ru\": \"Удаление пробелов и переносов строк в конце текста\"\n    },\n    \"common/symbols/arrow\": {\n      \"common\": \"-> → →, <- → ←\"\n    },\n    \"common/symbols/cf\": {\n      \"en-US\": \"Adding ° to C and F\",\n      \"ru\": \"Добавление ° к C и F\"\n    },\n    \"common/symbols/copy\": {\n      \"common\": \"(c) → ©, (tm) → ™, (r) → ®\"\n    },\n    \"en-US/dash/main\": {\n      \"en-US\": \"Replace hyphens surrounded by spaces with an em-dash\",\n      \"ru\": \"Замена дефиса на длинное тире\"\n    },\n    \"ru/dash/centuries\": {\n      \"en-US\": \"Hyphen to dash in centuries\",\n      \"ru\": \"Замена дефиса на тире в веках\"\n    },\n    \"ru/dash/daysMonth\": {\n      \"en-US\": \"Dash between days of one month\",\n      \"ru\": \"Тире между днями одного месяца\"\n    },\n    \"ru/dash/de\": {\n      \"en-US\": \"Hyphen before “де”\",\n      \"ru\": \"Дефис перед «де»\"\n    },\n    \"ru/dash/decade\": {\n      \"en-US\": \"Dash in decade\",\n      \"ru\": \"Тире в десятилетиях, 80—90-е гг.\"\n    },\n    \"ru/dash/directSpeech\": {\n      \"en-US\": \"Dash in direct speech\",\n      \"ru\": \"Тире в прямой речи\"\n    },\n    \"ru/dash/izpod\": {\n      \"en-US\": \"Hyphen between “из-под”\",\n      \"ru\": \"Дефис между «из-под»\"\n    },\n    \"ru/dash/izza\": {\n      \"en-US\": \"Hyphen between “из-за”\",\n      \"ru\": \"Дефис между «из-за»\"\n    },\n    \"ru/dash/ka\": {\n      \"en-US\": \"Hyphen before “ка” and “кась”\",\n      \"ru\": \"Дефис перед «ка» и «кась»\"\n    },\n    \"ru/dash/koe\": {\n      \"en-US\": \"Hyphen after “кое” and “кой”\",\n      \"ru\": \"Дефис после «кое» и «кой»\"\n    },\n    \"ru/dash/main\": {\n      \"en-US\": \"Replacement hyphen with dash\",\n      \"ru\": \"Замена дефиса на тире\"\n    },\n    \"ru/dash/month\": {\n      \"en-US\": \"Dash between months\",\n      \"ru\": \"Тире между месяцами\"\n    },\n    \"ru/dash/surname\": {\n      \"en-US\": \"Acronyms with a dash\",\n      \"ru\": \"Сокращения с помощью тире\"\n    },\n    \"ru/dash/taki\": {\n      \"en-US\": \"Hyphen between “верно-таки” and etc.\",\n      \"ru\": \"Дефис между «верно-таки» и т. д.\"\n    },\n    \"ru/dash/time\": {\n      \"en-US\": \"Dash in time intervals\",\n      \"ru\": \"Тире в интервалах времени\"\n    },\n    \"ru/dash/to\": {\n      \"en-US\": \"Hyphen before “то”, “либо”, “нибудь”\",\n      \"ru\": \"Дефис перед «то», «либо», «нибудь»\"\n    },\n    \"ru/dash/weekday\": {\n      \"en-US\": \"Dash between the days of the week\",\n      \"ru\": \"Тире между днями недели\"\n    },\n    \"ru/dash/years\": {\n      \"en-US\": \"Hyphen to dash in years\",\n      \"ru\": \"Замена дефиса на тире в годах\"\n    },\n    \"ru/date/fromISO\": {\n      \"en-US\": \"Converting dates YYYY-MM-DD type DD.MM.YYYY\",\n      \"ru\": \"Преобразование дат YYYY-MM-DD к виду DD.MM.YYYY\"\n    },\n    \"ru/date/weekday\": {\n      \"common\": \"2 Мая, Понедельник → 2 мая, понедельник\"\n    },\n    \"ru/money/currency\": {\n      \"en-US\": \"Currency symbol ($, €, ¥, Ұ, £ and ₤) after the number, $100 → 100 $\",\n      \"ru\": \"Символ валюты ($, €, ¥, Ұ, £ и ₤) после числа, $100 → 100 $\"\n    },\n    \"ru/money/ruble\": {\n      \"common\": \"1 руб. → 1 ₽\"\n    },\n    \"ru/nbsp/abbr\": {\n      \"en-US\": \"Non-breaking space in abbreviations, e.g. “т. д.”\",\n      \"ru\": \"Нераз. пробел в сокращениях, например, в «т. д.»\"\n    },\n    \"ru/nbsp/addr\": {\n      \"en-US\": \"Placement of non-breaking space after “г.”, “обл.”, “ул.”, “пр.”, “кв.” et al.\",\n      \"ru\": \"Расстановка нераз. пробела после «г.», «обл.», «ул.», «пр.», «кв.» и др.\"\n    },\n    \"ru/nbsp/afterNumberSign\": {\n      \"en-US\": \"Non-breaking thin space after №\",\n      \"ru\": \"Нераз. узкий пробел после №\"\n    },\n    \"ru/nbsp/beforeParticle\": {\n      \"en-US\": \"Non-breaking space before “ли”, “ль”, “же”, “бы”, “б”\",\n      \"ru\": \"Нераз. пробел перед «ли», «ль», «же», «бы», «б»\"\n    },\n    \"ru/nbsp/centuries\": {\n      \"en-US\": \"Remove spaces and extra points in “вв.”\",\n      \"ru\": \"Удаление пробелов и лишних точек в «вв.»\"\n    },\n    \"ru/nbsp/dayMonth\": {\n      \"en-US\": \"Non-breaking space between number and month\",\n      \"ru\": \"Нераз. пробел между числом и месяцем\"\n    },\n    \"ru/nbsp/initials\": {\n      \"en-US\": \"Binding of initials to the name\",\n      \"ru\": \"Привязка инициалов к фамилии\"\n    },\n    \"ru/nbsp/m\": {\n      \"en-US\": \"m2 → м², m3 → м³ and non-breaking space\",\n      \"ru\": \"м2 → м², м3 → м³ и нераз. пробел\"\n    },\n    \"ru/nbsp/mln\": {\n      \"en-US\": \"Non-breaking space between number and “тыс.”, “млн”, “млрд” and “трлн”\",\n      \"ru\": \"Неразр. пробел между числом и «тыс.», «млн», «млрд» и «трлн»\"\n    },\n    \"ru/nbsp/ooo\": {\n      \"en-US\": \"Non-breaking space after “OOO, ОАО, ЗАО, НИИ, ПБОЮЛ”\",\n      \"ru\": \"Нераз. пробел после OOO, ОАО, ЗАО, НИИ и ПБОЮЛ\"\n    },\n    \"ru/nbsp/page\": {\n      \"en-US\": \"Non-breaking space after “стр.”, “гл.”, “рис.”, “илл.”\",\n      \"ru\": \"Нераз. пробел после «стр.», «гл.», «рис.», «илл.»\"\n    },\n    \"ru/nbsp/ps\": {\n      \"en-US\": \"Non-breaking space in P. S. and P. P. S.\",\n      \"ru\": \"Нераз. пробел в P. S. и P. P. S.\"\n    },\n    \"ru/nbsp/rubleKopek\": {\n      \"en-US\": \"Not once. space before the “rub” and “cop.”\",\n      \"ru\": \"Нераз. пробел перед «руб.» и «коп.»\"\n    },\n    \"ru/nbsp/see\": {\n      \"en-US\": \"Non-breaking space after abbreviation «см.» and «им.»\",\n      \"ru\": \"Нераз. пробел после сокращений «см.» и «им.»\"\n    },\n    \"ru/nbsp/year\": {\n      \"en-US\": \"Non-breaking space before XXXX г. (2012 г.)\",\n      \"ru\": \"Нераз. пробел после XXXX г. (2012 г.)\"\n    },\n    \"ru/nbsp/years\": {\n      \"en-US\": \"г.г. → гг. and non-breaking space\",\n      \"ru\": \"г.г. → гг. и нераз. пробел\"\n    },\n    \"ru/number/comma\": {\n      \"en-US\": \"Commas in numbers\",\n      \"ru\": \"Замена точки на запятую в числах\"\n    },\n    \"ru/number/ordinals\": {\n      \"common\": \"N-ый, -ой, -ая, -ое, -ые, -ым, -ом, -ых → N-й, -я, -е, -м, -х (25-й)\"\n    },\n    \"ru/optalign/bracket\": {\n      \"en-US\": \"for opening bracket\",\n      \"ru\": \"для открывающей скобки\"\n    },\n    \"ru/optalign/comma\": {\n      \"en-US\": \"for comma\",\n      \"ru\": \"для запятой\"\n    },\n    \"ru/optalign/quote\": {\n      \"en-US\": \"for opening quotation marks\",\n      \"ru\": \"для открывающей кавычки\"\n    },\n    \"ru/other/accent\": {\n      \"en-US\": \"Replacement capital letters to lowercase with addition of accent\",\n      \"ru\": \"Замена заглавной буквы на строчную с добавлением ударения\"\n    },\n    \"ru/other/phone-number\": {\n      \"en-US\": \"Formatting phone numbers\",\n      \"ru\": \"Форматирование телефонных номеров\"\n    },\n    \"ru/punctuation/ano\": {\n      \"en-US\": \"Placement of commas before “а” and “но”\",\n      \"ru\": \"Расстановка запятых перед «а» и «но»\"\n    },\n    \"ru/punctuation/exclamation\": {\n      \"common\": \"!! → !\"\n    },\n    \"ru/punctuation/exclamationQuestion\": {\n      \"common\": \"!? → ?!\"\n    },\n    \"ru/punctuation/hellipQuestion\": {\n      \"common\": \"«?…» → «?..», «!…» → «!..», «…,» → «…»\"\n    },\n    \"ru/space/afterHellip\": {\n      \"en-US\": \"Space after “...”, “!..” and “?..”\",\n      \"ru\": \"Пробел после «...», «!..» и «?..»\"\n    },\n    \"ru/space/year\": {\n      \"en-US\": \"Space between number and word “год”\",\n      \"ru\": \"Пробел между числом и словом «год»\"\n    },\n    \"ru/symbols/NN\": {\n      \"common\": \"№№ → №\"\n    },\n    \"ru/typo/switchingKeyboardLayout\": {\n      \"en-US\": \"Replacement of Latin letters in Russian. Typos occur when you switch keyboard layouts\",\n      \"ru\": \"Замена латинских букв на русские. Опечатки, возникающие при переключении клавиатурной раскладки\"\n    }\n  };\n  var groups = [{\n    \"name\": \"punctuation\",\n    \"title\": {\n      \"en-US\": \"Punctuation\",\n      \"ru\": \"Пунктуация\"\n    }\n  }, {\n    \"name\": \"optalign\",\n    \"title\": {\n      \"en-US\": \"Hanging punctuation\",\n      \"ru\": \"Висячая пунктуация\"\n    }\n  }, {\n    \"name\": \"dash\",\n    \"title\": {\n      \"en-US\": \"Dash and hyphen\",\n      \"ru\": \"Тире и дефис\"\n    }\n  }, {\n    \"name\": \"nbsp\",\n    \"title\": {\n      \"en-US\": \"Non-breaking space\",\n      \"ru\": \"Неразрывный пробел\"\n    }\n  }, {\n    \"name\": \"space\",\n    \"title\": {\n      \"en-US\": \"Space and line ending\",\n      \"ru\": \"Пробел и окончание строки\"\n    }\n  }, {\n    \"name\": \"html\",\n    \"title\": {\n      \"en-US\": \"HTML\",\n      \"ru\": \"HTML\"\n    }\n  }, {\n    \"name\": \"date\",\n    \"title\": {\n      \"en-US\": \"Date\",\n      \"ru\": \"Дата\"\n    }\n  }, {\n    \"name\": \"money\",\n    \"title\": {\n      \"en-US\": \"Money\",\n      \"ru\": \"Деньги\"\n    }\n  }, {\n    \"name\": \"number\",\n    \"title\": {\n      \"en-US\": \"Numbers and mathematical expressions\",\n      \"ru\": \"Числа и математические выражения\"\n    }\n  }, {\n    \"name\": \"symbols\",\n    \"title\": {\n      \"en-US\": \"Symbols and signs\",\n      \"ru\": \"Символы и знаки\"\n    }\n  }, {\n    \"name\": \"typo\",\n    \"title\": {\n      \"en-US\": \"Typos\",\n      \"ru\": \"Опечатки\"\n    }\n  }, {\n    \"name\": \"other\",\n    \"title\": {\n      \"en-US\": \"Other\",\n      \"ru\": \"Прочее\"\n    }\n  }];\n  Typograf.titles = titles;\n  Typograf.groups = groups;\n  return Typograf;\n});\n\n//# sourceURL=webpack:///./node_modules/typograf/dist/typograf.all.js?");

/***/ }),

/***/ "./src/app.desktop.js":
/*!****************************!*\
  !*** ./src/app.desktop.js ***!
  \****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _less_desktop_less__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./less/desktop.less */ \"./src/less/desktop.less\");\n/* harmony import */ var _less_desktop_less__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_less_desktop_less__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./app */ \"./src/app.js\");\n\n\nnew _app__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n\n//# sourceURL=webpack:///./src/app.desktop.js?");

/***/ }),

/***/ "./src/app.js":
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return App; });\n/* harmony import */ var _start__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./start */ \"./src/start.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var throttle_debounce__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! throttle-debounce */ \"./node_modules/throttle-debounce/dist/index.esm.js\");\n/* harmony import */ var typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! typograf/dist/typograf.all */ \"./node_modules/typograf/dist/typograf.all.js\");\n/* harmony import */ var typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _helpers_hash__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./helpers/hash */ \"./src/helpers/hash.js\");\n/* harmony import */ var _helpers_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./helpers/string */ \"./src/helpers/string.js\");\n/* harmony import */ var _i18n_index__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./i18n/index */ \"./src/i18n/index.js\");\n/* harmony import */ var _components_lang_ui_lang_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/lang-ui/lang-ui */ \"./src/components/lang-ui/lang-ui.js\");\n/* harmony import */ var _components_entity_highlight_entity_highlight__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/entity-highlight/entity-highlight */ \"./src/components/entity-highlight/entity-highlight.js\");\n/* harmony import */ var _helpers_prepare_locale__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./helpers/prepare-locale */ \"./src/helpers/prepare-locale.js\");\n/* harmony import */ var _components_diff_diff__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/diff/diff */ \"./src/components/diff/diff.js\");\n/* harmony import */ var _components_tooltip_tooltip__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/tooltip/tooltip */ \"./src/components/tooltip/tooltip.js\");\n/* harmony import */ var _helpers_save_file__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./helpers/save-file */ \"./src/helpers/save-file.js\");\n/* harmony import */ var _components_prefs_prefs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./components/prefs/prefs */ \"./src/components/prefs/prefs.js\");\n/* harmony import */ var _services_metrika__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./services/metrika */ \"./src/services/metrika.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar typograf = new typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_3___default.a();\n\nvar App = /*#__PURE__*/function () {\n  function App() {\n    var _this = this;\n\n    _classCallCheck(this, App);\n\n    this.last = {\n      value: '',\n      result: ''\n    };\n    var body = jquery__WEBPACK_IMPORTED_MODULE_1___default()(document.body);\n    body.removeClass('transition_no');\n    this.isMobile = body.hasClass('page_is-mobile');\n\n    if (window.location.hash === '#!prefs') {\n      setTimeout(function () {\n        _this._onprefs();\n      }, 1);\n    }\n\n    if (!this.isMobile) {\n      this._setValue(Object(_helpers_hash__WEBPACK_IMPORTED_MODULE_4__[\"getHashParam\"])('text') || '');\n    }\n\n    this._tooltip = new _components_tooltip_tooltip__WEBPACK_IMPORTED_MODULE_11__[\"default\"]();\n    this._prefs = new _components_prefs_prefs__WEBPACK_IMPORTED_MODULE_13__[\"default\"](typograf);\n    this._prefs.onChange = this.execute.bind(this);\n\n    _components_lang_ui_lang_ui__WEBPACK_IMPORTED_MODULE_7__[\"default\"].onChange = function () {\n      _this._prefs.changeLangUI();\n\n      Object(_services_metrika__WEBPACK_IMPORTED_MODULE_14__[\"metrikaReachGoal\"])('switch-lang');\n    };\n\n    if (this._prefs.rules) {\n      typograf.enableRule(this._prefs.rules.enabled).disableRule(this._prefs.rules.disabled);\n    }\n\n    this.updateResult = Object(throttle_debounce__WEBPACK_IMPORTED_MODULE_2__[\"debounce\"])(250, this.updateResult);\n\n    this._events();\n\n    this.execute();\n  }\n\n  _createClass(App, [{\n    key: \"copyText\",\n    value: function copyText(text) {\n      var textarea = document.createElement('textarea');\n      textarea.style.position = 'absolute';\n      textarea.style.left = '-9999px';\n      textarea.value = text;\n      document.body.appendChild(textarea);\n      textarea.select();\n\n      try {\n        document.execCommand('copy');\n\n        this._tooltip.show(Object(_i18n_index__WEBPACK_IMPORTED_MODULE_6__[\"default\"])('copied'), 'ok', true);\n      } catch (e) {\n        this._tooltip.show(Object(_i18n_index__WEBPACK_IMPORTED_MODULE_6__[\"default\"])('notSupportCopy'), 'error', true);\n      }\n\n      document.body.removeChild(textarea);\n    }\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var value = this._getValue(),\n          result = typograf.execute(value, {\n        locale: Object(_helpers_prepare_locale__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(this._prefs.locale),\n        htmlEntity: {\n          type: this._prefs.mode\n        }\n      });\n\n      this.last = {\n        value: value,\n        result: result\n      };\n\n      if (this.isMobile) {\n        jquery__WEBPACK_IMPORTED_MODULE_1___default()('.input__text').val(result);\n      } else {\n        this.updateResult();\n      }\n    }\n  }, {\n    key: \"updateResult\",\n    value: function updateResult() {\n      var value = this.last.value,\n          result = this.last.result,\n          resText = jquery__WEBPACK_IMPORTED_MODULE_1___default()('.result__text'),\n          resHTML = jquery__WEBPACK_IMPORTED_MODULE_1___default()('.result__html'),\n          resDiff = jquery__WEBPACK_IMPORTED_MODULE_1___default()('.result__diff');\n      resText.is(':visible') && resText.val(result);\n      resHTML.is(':visible') && resHTML.html(Object(_components_entity_highlight_entity_highlight__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(result));\n      resDiff.is(':visible') && resDiff.html(_components_diff_diff__WEBPACK_IMPORTED_MODULE_10__[\"default\"].make(value, result));\n    }\n  }, {\n    key: \"_setValue\",\n    value: function _setValue(value) {\n      jquery__WEBPACK_IMPORTED_MODULE_1___default()('.input__text').val(value);\n\n      this._updateValue(value);\n    }\n  }, {\n    key: \"_getValue\",\n    value: function _getValue() {\n      return jquery__WEBPACK_IMPORTED_MODULE_1___default()('.input__text').val();\n    }\n  }, {\n    key: \"_updateValue\",\n    value: function _updateValue(value) {\n      if (!this.isMobile && window.location.hash !== '#!prefs') {\n        window.location.hash = '#!text=' + window.encodeURIComponent(Object(_helpers_string__WEBPACK_IMPORTED_MODULE_5__[\"truncate\"])(value, 512));\n      }\n\n      this._updateClearText(value);\n    }\n  }, {\n    key: \"_updateClearText\",\n    value: function _updateClearText(value) {\n      var clear = jquery__WEBPACK_IMPORTED_MODULE_1___default()('.input__clear');\n\n      if (value.length > 0) {\n        clear.show();\n      } else {\n        clear.hide();\n      }\n    }\n  }, {\n    key: \"_events\",\n    value: function _events() {\n      var _this2 = this;\n\n      window.addEventListener('message', function (e) {\n        var data;\n\n        try {\n          data = JSON.parse(e.data);\n        } catch (e) {\n          return;\n        }\n\n        if (data && data.service === 'typograf' && data.command === 'execute') {\n          e.source.postMessage(JSON.stringify({\n            service: 'typograf',\n            command: 'return',\n            text: typograf.execute(data.text, {\n              locale: Object(_helpers_prepare_locale__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(_this2._prefs.locale),\n              htmlEntity: {\n                type: _this2._prefs.mode\n              }\n            })\n          }), '*');\n        }\n      }, false);\n\n      this._onprefs = function () {\n        var el = jquery__WEBPACK_IMPORTED_MODULE_1___default()('.header'),\n            clSelected = '.header_selected';\n\n        if (el.hasClass(clSelected)) {\n          window.location.hash = '';\n          setTimeout(function () {\n            _this2.execute();\n          }, 0);\n        } else {\n          window.location.hash = '#!prefs';\n        }\n\n        el.toggleClass(clSelected);\n\n        _this2._prefs.toggle();\n      };\n\n      jquery__WEBPACK_IMPORTED_MODULE_1___default()('.header, .paranja').on('click', this._onprefs);\n      jquery__WEBPACK_IMPORTED_MODULE_1___default()('.result__as-text, .result__as-html, .result__as-diff').on('click', function (e) {\n        jquery__WEBPACK_IMPORTED_MODULE_1___default()('.result__text').hide().val('');\n        jquery__WEBPACK_IMPORTED_MODULE_1___default()('.result__html, .result__diff').hide().html('');\n        jquery__WEBPACK_IMPORTED_MODULE_1___default()('.result__' + e.target.value).show();\n\n        _this2.updateResult();\n      });\n      jquery__WEBPACK_IMPORTED_MODULE_1___default()('.input__copy').on('click', function () {\n        _this2.copyText(_this2.last.result);\n\n        Object(_services_metrika__WEBPACK_IMPORTED_MODULE_14__[\"metrikaReachGoal\"])('copy-text');\n      });\n      jquery__WEBPACK_IMPORTED_MODULE_1___default()('.input__save').on('click', function () {\n        Object(_helpers_save_file__WEBPACK_IMPORTED_MODULE_12__[\"saveFile\"])(jquery__WEBPACK_IMPORTED_MODULE_1___default()('.result__text')[0], Object(_i18n_index__WEBPACK_IMPORTED_MODULE_6__[\"default\"])('notSupportSave'));\n        Object(_services_metrika__WEBPACK_IMPORTED_MODULE_14__[\"metrikaReachGoal\"])('save-text');\n      });\n      jquery__WEBPACK_IMPORTED_MODULE_1___default()('.input__clear').on('click', function () {\n        _this2._setValue('');\n\n        jquery__WEBPACK_IMPORTED_MODULE_1___default()('.input__text').focus();\n\n        _this2.execute();\n      });\n      var oldValue = null;\n\n      if (this.isMobile) {\n        jquery__WEBPACK_IMPORTED_MODULE_1___default()('.input__execute').on('click', this.execute.bind(this));\n      } else {\n        jquery__WEBPACK_IMPORTED_MODULE_1___default()('.input__text').on('keyup input click', function () {\n          var val = _this2._getValue();\n\n          if (val === oldValue) {\n            return;\n          }\n\n          oldValue = val;\n\n          _this2._updateValue(val);\n\n          _this2.execute();\n        });\n      }\n    }\n  }]);\n\n  return App;\n}();\n\n\n\n//# sourceURL=webpack:///./src/app.js?");

/***/ }),

/***/ "./src/components/diff/diff.js":
/*!*************************************!*\
  !*** ./src/components/diff/diff.js ***!
  \*************************************/
/*! exports provided: getDiffTitle, makeDiff */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDiffTitle\", function() { return getDiffTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeDiff\", function() { return makeDiff; });\n/* harmony import */ var _helpers_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/string */ \"./src/helpers/string.js\");\n/* harmony import */ var diff__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! diff */ \"./node_modules/diff/dist/diff.js\");\n/* harmony import */ var diff__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(diff__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _diff_less__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./diff.less */ \"./src/components/diff/diff.less\");\n/* harmony import */ var _diff_less__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_diff_less__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nfunction getDiffTitle(sym) {\n  var title = '';\n\n  if (sym === \"\\xA0\") {\n    title = 'NO-BREAK SPACE';\n  } else if (sym === \"\\u202F\") {\n    title = 'NARROW NO-BREAK SPACE';\n  } else if (sym === \"\\u2011\") {\n    title = 'NON-BREAKING HYPHEN';\n  }\n\n  return title;\n}\nfunction makeDiff(before, after) {\n  var _this = this;\n\n  return Object(diff__WEBPACK_IMPORTED_MODULE_1__[\"diffChars\"])(before, after).map(function (part) {\n    var val = Object(_helpers_string__WEBPACK_IMPORTED_MODULE_0__[\"escapeHTML\"])(part.value),\n        title = _this.getDiffTitle(part.value);\n\n    var html;\n\n    if (part.added) {\n      html = \"<ins class=\\\"diff\\\" title=\\\"\".concat(title, \"\\\">\").concat(val, \"</ins>\");\n    } else if (part.removed) {\n      html = \"<del class=\\\"diff\\\" title=\\\"\".concat(title, \"\\\">\").concat(val, \"</del>\");\n    } else {\n      html = val;\n    }\n\n    return html;\n  }, this).join('');\n}\n\n//# sourceURL=webpack:///./src/components/diff/diff.js?");

/***/ }),

/***/ "./src/components/diff/diff.less":
/*!***************************************!*\
  !*** ./src/components/diff/diff.less ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/diff/diff.less?");

/***/ }),

/***/ "./src/components/entity-highlight/entity-highlight.js":
/*!*************************************************************!*\
  !*** ./src/components/entity-highlight/entity-highlight.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _entity_highlight_less__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./entity-highlight.less */ \"./src/components/entity-highlight/entity-highlight.less\");\n/* harmony import */ var _entity_highlight_less__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_entity_highlight_less__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (text) {\n  [[/(\\u00A0|&nbsp;|&#160;)/g, \"\\xA0\", 'NO-BREAK SPACE'], [/(\\u202F|&#8239;)/g, \"\\u202F\", 'NARROW NO-BREAK SPACE'], [/(\\u2011|&#8209;)/g, \"\\u2011\", 'NON-BREAKING HYPHEN']].forEach(function (el) {\n    text = text.replace(el[0], '<span class=\"entity-highlight\" title=\"' + el[2] + '\">' + el[1] + '</span>');\n  });\n  return text;\n});\n\n//# sourceURL=webpack:///./src/components/entity-highlight/entity-highlight.js?");

/***/ }),

/***/ "./src/components/entity-highlight/entity-highlight.less":
/*!***************************************************************!*\
  !*** ./src/components/entity-highlight/entity-highlight.less ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/entity-highlight/entity-highlight.less?");

/***/ }),

/***/ "./src/components/extension/extension.js":
/*!***********************************************!*\
  !*** ./src/components/extension/extension.js ***!
  \***********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _extension_less__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./extension.less */ \"./src/components/extension/extension.less\");\n/* harmony import */ var _extension_less__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_extension_less__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar browser = 'chrome';\nvar ua = navigator.userAgent;\n\nif (ua.search('YaBrowser') > -1) {\n  browser = 'yabro';\n}\n\nif (typeof InstallTrigger !== 'undefined') {\n  browser = 'firefox';\n}\n\nif (ua.search(' OPR/') > -1) {\n  browser = 'opera';\n}\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(\".extension_\".concat(browser)).show();\n\n//# sourceURL=webpack:///./src/components/extension/extension.js?");

/***/ }),

/***/ "./src/components/extension/extension.less":
/*!*************************************************!*\
  !*** ./src/components/extension/extension.less ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/extension/extension.less?");

/***/ }),

/***/ "./src/components/lang-ui/lang-ui.js":
/*!*******************************************!*\
  !*** ./src/components/lang-ui/lang-ui.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _i18n_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../i18n/index */ \"./src/i18n/index.js\");\n/* harmony import */ var _helpers_local_storage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/local-storage */ \"./src/helpers/local-storage.js\");\n/* harmony import */ var _lang_ui_less__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lang-ui.less */ \"./src/components/lang-ui/lang-ui.less\");\n/* harmony import */ var _lang_ui_less__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_lang_ui_less__WEBPACK_IMPORTED_MODULE_3__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar LangUI = /*#__PURE__*/function () {\n  function LangUI() {\n    var _this = this;\n\n    _classCallCheck(this, LangUI);\n\n    this.defaultLang = 'ru';\n    this.langs = [{\n      value: 'ru',\n      text: 'Rus'\n    }, {\n      value: 'en-US',\n      text: 'Eng'\n    }];\n    this._elem = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.lang-ui').click(function (e) {\n      var value = _this.val();\n\n      _this._next();\n\n      _this.onChange(e, value);\n    });\n    this._langsByValue = {};\n    this.langs.forEach(function (item, i) {\n      this._langsByValue[item.value] = item;\n      item.index = i;\n    }, this);\n    this.val(_helpers_local_storage__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getItem('settings.langUI') || this.defaultLang);\n  }\n\n  _createClass(LangUI, [{\n    key: \"val\",\n    value: function val(value) {\n      if (typeof value !== 'undefined') {\n        if (value === 'en') {\n          value = 'en-US';\n        }\n\n        if (this._langsByValue[value]) {\n          this._val = value;\n          _i18n_index__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lang = value;\n          _helpers_local_storage__WEBPACK_IMPORTED_MODULE_2__[\"default\"].setItem('settings.langUI', value);\n\n          this._update(value);\n\n          return;\n        }\n      }\n\n      return this._val;\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      this._elem.text(this._langsByValue[this.val()].text);\n    }\n  }, {\n    key: \"_next\",\n    value: function _next() {\n      var index = this._langsByValue[this.val()].index + 1;\n\n      if (index >= this.langs.length) {\n        index = 0;\n      }\n\n      this.val(this.langs[index].value);\n    }\n  }]);\n\n  return LangUI;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new LangUI());\n\n//# sourceURL=webpack:///./src/components/lang-ui/lang-ui.js?");

/***/ }),

/***/ "./src/components/lang-ui/lang-ui.less":
/*!*********************************************!*\
  !*** ./src/components/lang-ui/lang-ui.less ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/lang-ui/lang-ui.less?");

/***/ }),

/***/ "./src/components/prefs/prefs.js":
/*!***************************************!*\
  !*** ./src/components/prefs/prefs.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Prefs; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! typograf/dist/typograf.all */ \"./node_modules/typograf/dist/typograf.all.js\");\n/* harmony import */ var typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _services_metrika__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/metrika */ \"./src/services/metrika.js\");\n/* harmony import */ var _i18n_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../i18n/index */ \"./src/i18n/index.js\");\n/* harmony import */ var _helpers_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/string */ \"./src/helpers/string.js\");\n/* harmony import */ var _helpers_local_storage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/local-storage */ \"./src/helpers/local-storage.js\");\n/* harmony import */ var _helpers_prepare_locale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../helpers/prepare-locale */ \"./src/helpers/prepare-locale.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\nvar typografPrefs = new typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_1___default.a({\n  disableRule: '*',\n  enableRule: ['common/nbsp/*', 'ru/nbsp/*']\n}),\n    typografEntities = new typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_1___default.a({\n  disableRule: '*',\n  enableRule: ['common/nbsp/*', 'common/punctuation/quote'],\n  locale: ['ru', 'en-US']\n});\n\nvar Prefs = /*#__PURE__*/function () {\n  function Prefs(typograf) {\n    _classCallCheck(this, Prefs);\n\n    this._typograf = typograf;\n    this._wasRebuilt = false;\n    var rules;\n\n    try {\n      rules = JSON.parse(_helpers_local_storage__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getItem('settings.rules'));\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.locale = _helpers_local_storage__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getItem('settings.locale');\n    this.mode = _helpers_local_storage__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getItem('settings.mode');\n    this.onlyInvisible = _helpers_local_storage__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getItem('settings.onlyInvisible');\n\n    if (rules && Array.isArray(rules.disabled) && Array.isArray(rules.enabled)) {\n      this.rules = rules;\n    }\n\n    this.locale = this.locale || 'ru';\n    this.mode = this.mode || '';\n    this.onlyInvisible = this.onlyInvisible || false;\n\n    this._events();\n\n    this.changeLangUI();\n\n    this._updateSelects();\n  }\n\n  _createClass(Prefs, [{\n    key: \"show\",\n    value: function show() {\n      if (!this._wasRebuilt) {\n        this.rebuild();\n        this._wasRebuilt = true;\n      }\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs').addClass('prefs_opened');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.paranja').addClass('paranja_opened');\n\n      this._updateSelects();\n\n      this._synchronizeMainCheckbox();\n\n      Object(_services_metrika__WEBPACK_IMPORTED_MODULE_2__[\"metrikaReachGoal\"])('settings-open');\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs').removeClass('prefs_opened');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.paranja').removeClass('paranja_opened');\n      Object(_services_metrika__WEBPACK_IMPORTED_MODULE_2__[\"metrikaReachGoal\"])('settings-close');\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs').is('.prefs_opened')) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      var enabled = [],\n          disabled = [];\n      Object.keys(this._typograf._enabledRules).forEach(function (name) {\n        if (this._typograf._enabledRules[name]) {\n          enabled.push(name);\n        } else {\n          disabled.push(name);\n        }\n      }, this);\n      _helpers_local_storage__WEBPACK_IMPORTED_MODULE_5__[\"default\"].setItem('settings.rules', JSON.stringify({\n        enabled: enabled,\n        disabled: disabled\n      })).setItem('settings.locale', this.locale).setItem('settings.mode', this.mode).setItem('settings.onlyInvisible', this.onlyInvisible);\n    }\n  }, {\n    key: \"byDefault\",\n    value: function byDefault() {\n      var _this = this;\n\n      this._getCheckboxes().each(function (i, el) {\n        el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(el);\n        var id = el.data('id');\n\n        typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_1___default.a.prototype._rules.some(function (rule) {\n          if (id === rule.name) {\n            var checked = rule.disabled !== true;\n            el.checked(checked);\n\n            if (checked) {\n              _this._typograf.enableRule(id);\n            } else {\n              _this._typograf.disableRule(id);\n            }\n\n            return true;\n          }\n\n          return false;\n        });\n      });\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__all-rules').checked(undefined);\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__set-mode').val('');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__only-invisible').checked(false);\n      this.changeMode();\n      this.save();\n      this.onChange();\n      Object(_services_metrika__WEBPACK_IMPORTED_MODULE_2__[\"metrikaReachGoal\"])('settings-default');\n    }\n  }, {\n    key: \"changeLocale\",\n    value: function changeLocale() {\n      this.locale = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__set-locale').val();\n      this.save();\n      this.onChange();\n      Object(_services_metrika__WEBPACK_IMPORTED_MODULE_2__[\"metrikaReachGoal\"])('settings-select-locale');\n    }\n  }, {\n    key: \"changeLangUI\",\n    value: function changeLangUI() {\n      this._updateLocaleOptions();\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-text-id]').each(function (i, el) {\n        el.innerHTML = Object(_i18n_index__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(el.dataset.textId);\n      });\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-value-id]').each(function (i, el) {\n        el.value = Object(_i18n_index__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(el.dataset.valueId);\n      });\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-title-id]').each(function (i, el) {\n        el.title = Object(_i18n_index__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(el.dataset.titleId);\n      });\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-placeholder-id]').each(function (i, el) {\n        el.placeholder = Object(_i18n_index__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(el.dataset.placeholderId);\n      });\n      this.rebuild();\n      this.save();\n      this.onChange();\n    }\n  }, {\n    key: \"changeMode\",\n    value: function changeMode() {\n      this.mode = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__set-mode').val();\n      this.onlyInvisible = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__only-invisible').checked();\n      this.save();\n      this.updateInvisibleSymbols();\n      this.onChange();\n      Object(_services_metrika__WEBPACK_IMPORTED_MODULE_2__[\"metrikaReachGoal\"])('settings-select-html-entity');\n    }\n  }, {\n    key: \"updateInvisibleSymbols\",\n    value: function updateInvisibleSymbols() {\n      var html = typografEntities.execute(Object(_i18n_index__WEBPACK_IMPORTED_MODULE_3__[\"default\"])('html-entities-example'), {\n        htmlEntity: {\n          type: this.mode,\n          onlyInvisible: this.onlyInvisible\n        }\n      });\n      html = Object(_helpers_string__WEBPACK_IMPORTED_MODULE_4__[\"escapeHTML\"])(html).replace(/(&amp;#?[\\da-z_-]+;)/gi, '<span style=\"color: green;\">$1</span>');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__html-entities-example').html(html);\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__invisible-symbols-container')[this.mode ? 'show' : 'hide']();\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange() {}\n  }, {\n    key: \"rebuild\",\n    value: function rebuild() {\n      var groups = this._getSortedGroups(typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_1___default.a.prototype._rules, _i18n_index__WEBPACK_IMPORTED_MODULE_3__[\"default\"].lang);\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__rules').html(this._buildHTML(groups));\n    }\n  }, {\n    key: \"_sortByGroupIndex\",\n    value: function _sortByGroupIndex(rules) {\n      rules.sort(function (a, b) {\n        if (!a.name || !b.name) {\n          return -1;\n        }\n\n        var indexA = typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_1___default.a.getGroupIndex(a._group),\n            indexB = typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_1___default.a.getGroupIndex(b._group);\n\n        if (indexA > indexB) {\n          return 1;\n        } else if (indexA === indexB) {\n          return 0;\n        } else {\n          return -1;\n        }\n      });\n    }\n  }, {\n    key: \"_splitGroups\",\n    value: function _splitGroups(rules) {\n      var currentGroupName, currentGroup;\n      var groups = [];\n      rules.forEach(function (rule) {\n        var groupName = rule._group;\n\n        if (groupName !== currentGroupName) {\n          currentGroupName = groupName;\n          currentGroup = [];\n          groups.push(currentGroup);\n        }\n\n        currentGroup.push(rule);\n      }, this);\n      return groups;\n    }\n  }, {\n    key: \"_sortGroupsByTitle\",\n    value: function _sortGroupsByTitle(groups, lang) {\n      var titles = typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_1___default.a.titles;\n      groups.forEach(function (group) {\n        group.sort(function (a, b) {\n          var titleA = titles[a.name],\n              titleB = titles[b.name];\n          return (titleA[lang] || titleA.common) > (titleB[lang] || titleB.common) ? 1 : -1;\n        });\n      });\n    }\n  }, {\n    key: \"_getSortedGroups\",\n    value: function _getSortedGroups(rules, lang) {\n      var filteredRules = []; // Правила для live-режима не показываем в настройках\n\n      rules.forEach(function (el) {\n        if (!el.live) {\n          filteredRules.push(el);\n        }\n      });\n\n      this._sortByGroupIndex(filteredRules);\n\n      var groups = this._splitGroups(filteredRules);\n\n      this._sortGroupsByTitle(groups, lang);\n\n      return groups;\n    }\n  }, {\n    key: \"_buildHTML\",\n    value: function _buildHTML(groups) {\n      var html = '';\n      var langUI = _i18n_index__WEBPACK_IMPORTED_MODULE_3__[\"default\"].lang;\n      groups.forEach(function (group) {\n        var groupName = group[0]._group,\n            groupTitle = typografPrefs.execute(typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_1___default.a.getGroupTitle(groupName, langUI), {\n          locale: Object(_helpers_prepare_locale__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(langUI)\n        });\n        html += '<fieldset class=\"prefs__fieldset\"><legend class=\"prefs__legend button\">' + groupTitle + '</legend><div class=\"prefs__group-rules\">';\n        group.forEach(function (rule) {\n          var name = rule.name,\n              ruleLang = name.split('/')[0],\n              langPrefix = ruleLang === 'common' ? '' : '<span class=\"prefs__rule-lang\">' + ruleLang + '</span>',\n              buf = typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_1___default.a.titles[name];\n\n          if (!buf || !(buf[langUI] || buf.common)) {\n            console.warn('Not found title for name \"' + name + '\".');\n          }\n\n          var title = typografPrefs.execute(Object(_helpers_string__WEBPACK_IMPORTED_MODULE_4__[\"escapeHTML\"])(buf[langUI] || buf.common), {\n            locale: Object(_helpers_prepare_locale__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(langUI)\n          }),\n              id = 'setting-' + name,\n              ch = this._typograf.isEnabledRule(name),\n              checked = ch ? ' checked=\"checked\"' : '';\n\n          html += '<div class=\"prefs__rule\" title=\"' + name + '\">' + '<input type=\"checkbox\" class=\"prefs__rule-checkbox\"' + checked + ' id=\"' + id + '\" data-id=\"' + name + '\" /> ' + '<label for=\"' + id + '\">' + title + langPrefix + '</label>' + '</div>';\n        }, this);\n        html += '</div></fieldset>';\n      }, this);\n      return html;\n    }\n  }, {\n    key: \"_getCheckboxes\",\n    value: function _getCheckboxes() {\n      return jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__rule-checkbox');\n    }\n  }, {\n    key: \"_clickRule\",\n    value: function _clickRule() {\n      var _this2 = this;\n\n      this._getCheckboxes().each(function (i, el) {\n        el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(el);\n        var id = el.data('id');\n\n        if (el.checked()) {\n          _this2._typograf.enableRule(id);\n        } else {\n          _this2._typograf.disableRule(id);\n        }\n      });\n\n      this._synchronizeMainCheckbox();\n\n      this.save();\n      this.onChange();\n      Object(_services_metrika__WEBPACK_IMPORTED_MODULE_2__[\"metrikaReachGoal\"])('settings-click-rule');\n    }\n  }, {\n    key: \"_clickLegend\",\n    value: function _clickLegend() {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).closest('.prefs__fieldset').toggleClass('prefs__fieldset_visible').find('.prefs__group-rules').slideToggle('fast');\n      Object(_services_metrika__WEBPACK_IMPORTED_MODULE_2__[\"metrikaReachGoal\"])('settings-click-group-rule');\n    }\n  }, {\n    key: \"_selectAll\",\n    value: function _selectAll() {\n      var _this3 = this;\n\n      var checked = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__all-rules').checked(),\n          els = this._getCheckboxes();\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default.a.each(els, function (i, el) {\n        el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(el);\n        var id = el.data('id');\n        el.checked(checked);\n\n        if (checked) {\n          _this3._typograf.enableRule(id);\n        } else {\n          _this3._typograf.disableRule(id);\n        }\n      });\n      this.save();\n      this.onChange();\n      Object(_services_metrika__WEBPACK_IMPORTED_MODULE_2__[\"metrikaReachGoal\"])('settings-select-all-rules');\n    }\n  }, {\n    key: \"_synchronizeMainCheckbox\",\n    value: function _synchronizeMainCheckbox() {\n      var count = 0,\n          checked;\n\n      var els = this._getCheckboxes();\n\n      els.each(function (i, el) {\n        if (el.checked) {\n          count++;\n        }\n      });\n\n      if (count === els.length) {\n        checked = true;\n      } else if (!count) {\n        checked = false;\n      } else {\n        checked = undefined;\n      }\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__all-rules').checked(checked);\n    }\n  }, {\n    key: \"_updateSelects\",\n    value: function _updateSelects() {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__set-locale').val(this.locale);\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__set-mode').val(this.mode);\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__only-invisible').val(this.onlyInvisible);\n      this.updateInvisibleSymbols();\n    }\n  }, {\n    key: \"_updateLocaleOptions\",\n    value: function _updateLocaleOptions() {\n      var html = typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_1___default.a.getLocales().sort(function (a, b) {\n        return Object(_i18n_index__WEBPACK_IMPORTED_MODULE_3__[\"default\"])('locale-' + a) > Object(_i18n_index__WEBPACK_IMPORTED_MODULE_3__[\"default\"])('locale-' + b) ? 1 : -1;\n      }).map(function (l) {\n        return '<option value=\"' + l + '\" data-text-id=\"locale-' + l + '\"></option>\\n';\n      }).join('');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__set-locale').html(html).val(this.locale);\n    }\n  }, {\n    key: \"_events\",\n    value: function _events() {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__set-locale').on('change', this.changeLocale.bind(this));\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__set-mode, .prefs__only-invisible').on('change', this.changeMode.bind(this));\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__all-rules').on('click', this._selectAll.bind(this));\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__default').on('click', this.byDefault.bind(this));\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__close').on('click', this.hide.bind(this));\n      var rules = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.prefs__rules');\n      rules.on('click', '.prefs__legend', this._clickLegend);\n      rules.on('click', '.prefs__rule-checkbox', this._clickRule.bind(this));\n    }\n  }]);\n\n  return Prefs;\n}();\n\n\n\n//# sourceURL=webpack:///./src/components/prefs/prefs.js?");

/***/ }),

/***/ "./src/components/tooltip/tooltip.js":
/*!*******************************************!*\
  !*** ./src/components/tooltip/tooltip.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Tooltip; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _tooltip_less__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tooltip.less */ \"./src/components/tooltip/tooltip.less\");\n/* harmony import */ var _tooltip_less__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tooltip_less__WEBPACK_IMPORTED_MODULE_1__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar Tooltip = /*#__PURE__*/function () {\n  function Tooltip(data) {\n    _classCallCheck(this, Tooltip);\n\n    data = data || {};\n    this._timeout = data.timeout || 3000;\n    this._dom = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div>', {\n      'class': 'tooltip'\n    });\n\n    this._dom.appendTo('body');\n  }\n\n  _createClass(Tooltip, [{\n    key: \"show\",\n    value: function show(text, type, autocloseable) {\n      var _this = this;\n\n      this._dom.attr('class', 'tooltip tooltip_visible tooltip_type_' + (type || 'ok')).text(text);\n\n      if (autocloseable) {\n        clearTimeout(this._timer);\n        this._timer = setTimeout(function () {\n          return _this.hide();\n        }, this._timeout);\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this._dom.removeClass('tooltip_visible');\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._dom && this._dom.remove();\n      delete this._dom;\n    }\n  }]);\n\n  return Tooltip;\n}();\n\n\n\n//# sourceURL=webpack:///./src/components/tooltip/tooltip.js?");

/***/ }),

/***/ "./src/components/tooltip/tooltip.less":
/*!*********************************************!*\
  !*** ./src/components/tooltip/tooltip.less ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/tooltip/tooltip.less?");

/***/ }),

/***/ "./src/components/version/version.js":
/*!*******************************************!*\
  !*** ./src/components/version/version.js ***!
  \*******************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! typograf/dist/typograf.all */ \"./node_modules/typograf/dist/typograf.all.js\");\n/* harmony import */ var typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_1__);\n\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()('#version').text(typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_1___default.a.version);\n\n//# sourceURL=webpack:///./src/components/version/version.js?");

/***/ }),

/***/ "./src/helpers/hash.js":
/*!*****************************!*\
  !*** ./src/helpers/hash.js ***!
  \*****************************/
/*! exports provided: getHashParams, getHashParam */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getHashParams\", function() { return getHashParams; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getHashParam\", function() { return getHashParam; });\nfunction getHashParams() {\n  var hash = window.location.hash.replace(/^#!/, ''),\n      params = {};\n  hash.split('&').forEach(function (item) {\n    var el = item.split('=');\n\n    if (el.length > 1 && el[1] !== undefined) {\n      try {\n        params[el[0]] = window.decodeURIComponent(el[1]);\n      } catch (e) {\n        params[el[0]] = el[1];\n      }\n    }\n  });\n  return params;\n}\nfunction getHashParam(param) {\n  return getHashParams()[param];\n}\n\n//# sourceURL=webpack:///./src/helpers/hash.js?");

/***/ }),

/***/ "./src/helpers/jquery.checked.js":
/*!***************************************!*\
  !*** ./src/helpers/jquery.checked.js ***!
  \***************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\n\njquery__WEBPACK_IMPORTED_MODULE_0___default.a.fn.checked = function (checked) {\n  var el = this[0];\n\n  if (arguments.length) {\n    if (typeof checked === 'undefined') {\n      el.indeterminate = true;\n    } else {\n      el.indeterminate = false;\n      el.checked = checked;\n    }\n\n    return this;\n  } else {\n    return el.checked;\n  }\n};\n\n//# sourceURL=webpack:///./src/helpers/jquery.checked.js?");

/***/ }),

/***/ "./src/helpers/local-storage.js":
/*!**************************************!*\
  !*** ./src/helpers/local-storage.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  getItem: function getItem(key) {\n    var result;\n\n    if (window.localStorage) {\n      try {\n        result = localStorage.getItem(key);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    return result;\n  },\n  setItem: function setItem(key, value) {\n    if (window.localStorage) {\n      try {\n        localStorage.setItem(key, value);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    return this;\n  }\n});\n\n//# sourceURL=webpack:///./src/helpers/local-storage.js?");

/***/ }),

/***/ "./src/helpers/prepare-locale.js":
/*!***************************************!*\
  !*** ./src/helpers/prepare-locale.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (locale) {\n  return locale === 'en' || locale === 'en-US' ? ['en-US'] : [locale, 'en-US'];\n});\n\n//# sourceURL=webpack:///./src/helpers/prepare-locale.js?");

/***/ }),

/***/ "./src/helpers/save-file.js":
/*!**********************************!*\
  !*** ./src/helpers/save-file.js ***!
  \**********************************/
/*! exports provided: getFilename, saveFile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFilename\", function() { return getFilename; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"saveFile\", function() { return saveFile; });\n/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./string */ \"./src/helpers/string.js\");\n\nfunction getFilename(text) {\n  var ext = Object(_string__WEBPACK_IMPORTED_MODULE_0__[\"isHTML\"])(text) ? 'html' : 'txt',\n      file = Object(_string__WEBPACK_IMPORTED_MODULE_0__[\"stripTags\"])(text).replace(/\\s+/g, ' ').trim();\n  return (Object(_string__WEBPACK_IMPORTED_MODULE_0__[\"truncate\"])(file, 32) || 'text') + '.' + ext;\n}\nfunction saveFile(textarea, notSupportSave) {\n  if (!window.Blob) {\n    window.alert(notSupportSave);\n    return;\n  }\n\n  var textToWrite = textarea.value,\n      textFileAsBlob = new Blob([textToWrite], {\n    type: 'text/plain'\n  }),\n      downloadLink = document.createElement('a');\n  downloadLink.download = getFilename(textToWrite);\n  downloadLink.innerHTML = 'Download File';\n\n  if (window.webkitURL) {\n    // Chrome allows the link to be clicked\n    // without actually adding it to the DOM.\n    downloadLink.href = window.webkitURL.createObjectURL(textFileAsBlob);\n  } else {\n    // Firefox requires the link to be added to the DOM\n    // before it can be clicked.\n    downloadLink.href = window.URL.createObjectURL(textFileAsBlob);\n\n    downloadLink.onclick = function () {\n      document.body.removeChild(downloadLink);\n    };\n\n    downloadLink.style.display = 'none';\n    document.body.appendChild(downloadLink);\n  }\n\n  downloadLink.click();\n}\n\n//# sourceURL=webpack:///./src/helpers/save-file.js?");

/***/ }),

/***/ "./src/helpers/string.js":
/*!*******************************!*\
  !*** ./src/helpers/string.js ***!
  \*******************************/
/*! exports provided: escapeHTML, isHTML, stripTags, truncate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"escapeHTML\", function() { return escapeHTML; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isHTML\", function() { return isHTML; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stripTags\", function() { return stripTags; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"truncate\", function() { return truncate; });\nfunction escapeHTML(text) {\n  return (text || '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\nfunction isHTML(text) {\n  return (text || '').search(/(<\\/?[a-z]|<!|&[lg]t;)/i) !== -1;\n}\nfunction stripTags(text) {\n  return (text || '').replace(/<\\/?[^>]+(>|$)/g, '');\n}\nfunction truncate(text, len) {\n  if (text) {\n    return text.length > len ? text.substr(0, len) : text;\n  }\n\n  return '';\n}\n\n//# sourceURL=webpack:///./src/helpers/string.js?");

/***/ }),

/***/ "./src/helpers/typograf-groups.js":
/*!****************************************!*\
  !*** ./src/helpers/typograf-groups.js ***!
  \****************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! typograf/dist/typograf.all */ \"./node_modules/typograf/dist/typograf.all.js\");\n/* harmony import */ var typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_0__);\n\ntypograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_0___default.a.groupsByName = {};\ntypograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_0___default.a.groups.forEach(function (group, i) {\n  group.index = i;\n  typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_0___default.a.groupsByName[group.name] = group;\n});\n\ntypograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_0___default.a.getGroupTitle = function (name, lang) {\n  return typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_0___default.a.groupsByName[name].title[lang];\n};\n\ntypograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_0___default.a.getGroupIndex = function (groupName) {\n  return typograf_dist_typograf_all__WEBPACK_IMPORTED_MODULE_0___default.a.groupsByName[groupName].index;\n};\n\n//# sourceURL=webpack:///./src/helpers/typograf-groups.js?");

/***/ }),

/***/ "./src/i18n/index.js":
/*!***************************!*\
  !*** ./src/i18n/index.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return i18n; });\n/* harmony import */ var _texts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./texts */ \"./src/i18n/texts.js\");\n\nfunction i18n(id, lang) {\n  var key = _texts__WEBPACK_IMPORTED_MODULE_0__[\"default\"][id];\n\n  if (!key) {\n    console.warn(\"Not found key \\\"\".concat(id, \"\\\" in getText().\"));\n    return '';\n  }\n\n  var l = lang || i18n.lang,\n      value = key[l];\n\n  if (typeof value === 'undefined') {\n    console.warn(\"Not found key \\\"\".concat(id, \"\\\", lang \\\"\").concat(l, \"\\\" in getText().\"));\n    return '';\n  }\n\n  return value;\n}\n\n//# sourceURL=webpack:///./src/i18n/index.js?");

/***/ }),

/***/ "./src/i18n/texts.js":
/*!***************************!*\
  !*** ./src/i18n/texts.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  typograf: {\n    'en-US': 'Typograf',\n    ru: 'Типограф'\n  },\n  'to-typograf': {\n    'en-US': 'Make beautiful',\n    ru: 'Сделать красиво'\n  },\n  'close': {\n    'en-US': 'Close',\n    ru: 'Закрыть'\n  },\n  extension: {\n    'en-US': 'Extension for',\n    ru: 'Дополнение для'\n  },\n  prefs: {\n    'en-US': 'Settings',\n    ru: 'Настройки'\n  },\n  'lang-rule': {\n    'en-US': 'Language rules',\n    ru: 'Язык правил'\n  },\n  'lang-ui': {\n    'en-US': 'UI language',\n    ru: 'Язык интерфейса'\n  },\n  'html-entities': {\n    'en-US': 'HTML entities',\n    ru: 'HTML-сущности'\n  },\n  'example': {\n    'en-US': 'Example',\n    ru: 'Пример'\n  },\n  'html-entities-example': {\n    'en-US': '\"A Z\"',\n    ru: '\"А Я\"'\n  },\n  'invisible-symbols': {\n    'en-US': 'for invisible symbols',\n    ru: 'для невидимых символов'\n  },\n  names: {\n    'en-US': 'Names',\n    ru: 'Имена'\n  },\n  digits: {\n    'en-US': 'Digits',\n    ru: 'Цифры'\n  },\n  copy: {\n    'en-US': 'Copy',\n    ru: 'Копировать'\n  },\n  copied: {\n    'en-US': 'Copied',\n    ru: 'Скопировано'\n  },\n  save: {\n    'en-US': 'Save',\n    ru: 'Сохранить'\n  },\n  notSupportCopy: {\n    'en-US': 'Your browser does not support copy text.',\n    ru: 'Ваш браузер не поддерживает копирование текста.'\n  },\n  notSupportSave: {\n    'en-US': 'Your browser does not support save text to a file.',\n    ru: 'Ваш браузер не поддерживает сохранение текста в файл.'\n  },\n  'select-all': {\n    'en-US': 'Select all',\n    ru: 'Выбрать всё'\n  },\n  'default': {\n    'en-US': 'Default',\n    ru: 'По умолчанию'\n  },\n  'text:': {\n    'en-US': 'Text:',\n    ru: 'Текст:'\n  },\n  clear: {\n    'en-US': 'Clear',\n    ru: 'Очистить'\n  },\n  text: {\n    'en-US': 'Text',\n    ru: 'Текст'\n  },\n  html: {\n    'en-US': 'HTML',\n    ru: 'HTML'\n  },\n  'diff-1': {\n    'en-US': 'Diffe',\n    ru: 'Измен'\n  },\n  'diff-2': {\n    'en-US': 'rences',\n    ru: 'ения'\n  },\n  'input-text': {\n    'en-US': 'Input text',\n    ru: 'Введите текст'\n  },\n  result: {\n    'en-US': 'Result',\n    ru: 'Результат'\n  },\n  locale: {\n    'en-US': 'Locale',\n    ru: 'Локаль'\n  },\n  'full-version': {\n    'en-US': 'Full version',\n    ru: 'Полная версия'\n  },\n  'mobile-version': {\n    'en-US': 'Mobile version',\n    ru: 'Мобильная версия'\n  },\n  'report-error': {\n    'en-US': 'Report a error',\n    ru: 'Сообщить об ошибке'\n  },\n  'powered-by': {\n    'en-US': 'Powered by',\n    ru: 'На основе'\n  },\n  'ru': {\n    'en-US': 'Russian',\n    ru: 'Русский'\n  },\n  'en-US': {\n    'en-US': 'English',\n    ru: 'Английский'\n  },\n  'locale-be': {\n    'en-US': 'Belarusian',\n    ru: 'Белорусская'\n  },\n  'locale-bg': {\n    'en-US': 'Bulgarian',\n    ru: 'Болгарская'\n  },\n  'locale-ca': {\n    'en-US': 'Catalan',\n    ru: 'Каталанская'\n  },\n  'locale-cs': {\n    'en-US': 'Czech',\n    ru: 'Чешская'\n  },\n  'locale-da': {\n    'en-US': 'Danish',\n    ru: 'Датская'\n  },\n  'locale-de': {\n    'en-US': 'German',\n    ru: 'Немецкая'\n  },\n  'locale-el': {\n    'en-US': 'Greek',\n    ru: 'Греческая'\n  },\n  'locale-en-GB': {\n    'en-US': 'English UK',\n    ru: 'Английская'\n  },\n  'locale-en-US': {\n    'en-US': 'English US',\n    ru: 'Американская'\n  },\n  'locale-eo': {\n    'en-US': 'Esperanto',\n    ru: 'Эсперанто'\n  },\n  'locale-es': {\n    'en-US': 'Spanish',\n    ru: 'Испанская'\n  },\n  'locale-et': {\n    'en-US': 'Estonian',\n    ru: 'Эстонская'\n  },\n  'locale-fi': {\n    'en-US': 'Finnish',\n    ru: 'Финская'\n  },\n  'locale-fr': {\n    'en-US': 'French',\n    ru: 'Французская'\n  },\n  'locale-ga': {\n    'en-US': 'Irish',\n    ru: 'Ирландская'\n  },\n  'locale-hu': {\n    'en-US': 'Hungarian',\n    ru: 'Венгерская'\n  },\n  'locale-it': {\n    'en-US': 'Italian',\n    ru: 'Итальянская'\n  },\n  'locale-lv': {\n    'en-US': 'Latvian',\n    ru: 'Латвийская'\n  },\n  'locale-nl': {\n    'en-US': 'Dutch',\n    ru: 'Голландская'\n  },\n  'locale-no': {\n    'en-US': 'Norwegian',\n    ru: 'Норвежская'\n  },\n  'locale-pl': {\n    'en-US': 'Polish',\n    ru: 'Польская'\n  },\n  'locale-ro': {\n    'en-US': 'Romanian',\n    ru: 'Румынская'\n  },\n  'locale-ru': {\n    'en-US': 'Russian',\n    ru: 'Русская'\n  },\n  'locale-sk': {\n    'en-US': 'Slovak',\n    ru: 'Словацкая'\n  },\n  'locale-sl': {\n    'en-US': 'Slovenian',\n    ru: 'Словенская'\n  },\n  'locale-sr': {\n    'en-US': 'Serbian',\n    ru: 'Сербская'\n  },\n  'locale-sv': {\n    'en-US': 'Swedish',\n    ru: 'Шведская'\n  },\n  'locale-tr': {\n    'en-US': 'Turkish',\n    ru: 'Турецкая'\n  },\n  'locale-uk': {\n    'en-US': 'Ukrainian',\n    ru: 'Украинская'\n  },\n  rules: {\n    'en-US': 'Rules',\n    ru: 'Правила'\n  },\n  yabro: {\n    'en-US': 'Yandex.Browser',\n    ru: 'Яндекс.Браузера'\n  }\n});\n\n//# sourceURL=webpack:///./src/i18n/texts.js?");

/***/ }),

/***/ "./src/less/desktop.less":
/*!*******************************!*\
  !*** ./src/less/desktop.less ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/less/desktop.less?");

/***/ }),

/***/ "./src/services/metrika.js":
/*!*********************************!*\
  !*** ./src/services/metrika.js ***!
  \*********************************/
/*! exports provided: metrikaHit, metrikaReachGoal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metrikaHit\", function() { return metrikaHit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metrikaReachGoal\", function() { return metrikaReachGoal; });\n/* harmony import */ var lyam__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lyam */ \"./node_modules/lyam/dist/index.esm.js\");\n\nvar counterId = '28700106';\nfunction metrikaHit() {\n  Object(lyam__WEBPACK_IMPORTED_MODULE_0__[\"hit\"])(counterId);\n  console.info('metrika: hit');\n}\nfunction metrikaReachGoal(name, params) {\n  Object(lyam__WEBPACK_IMPORTED_MODULE_0__[\"reachGoal\"])(counterId, name, params);\n  console.info('metrika: reachGoal', name, params);\n}\n\n//# sourceURL=webpack:///./src/services/metrika.js?");

/***/ }),

/***/ "./src/services/show-js-error.js":
/*!***************************************!*\
  !*** ./src/services/show-js-error.js ***!
  \***************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var show_js_error_dist_show_js_error_custom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! show-js-error/dist/show-js-error.custom */ \"./node_modules/show-js-error/dist/show-js-error.custom.js\");\n/* harmony import */ var show_js_error_dist_show_js_error_custom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(show_js_error_dist_show_js_error_custom__WEBPACK_IMPORTED_MODULE_0__);\n\nshow_js_error_dist_show_js_error_custom__WEBPACK_IMPORTED_MODULE_0___default.a.init({\n  title: 'JavaScript error',\n  userAgent: navigator.userAgent,\n  sendText: 'Send 🐛',\n  templateDetailedMessage: '```{message}```',\n  sendUrl: 'https://github.com/typograf/typograf.github.io/issues/new?title={title}&body={body}'\n});\n\n//# sourceURL=webpack:///./src/services/show-js-error.js?");

/***/ }),

/***/ "./src/start.js":
/*!**********************!*\
  !*** ./src/start.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _services_show_js_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./services/show-js-error */ \"./src/services/show-js-error.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _helpers_jquery_checked__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers/jquery.checked */ \"./src/helpers/jquery.checked.js\");\n/* harmony import */ var _helpers_typograf_groups__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helpers/typograf-groups */ \"./src/helpers/typograf-groups.js\");\n/* harmony import */ var _components_extension_extension__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/extension/extension */ \"./src/components/extension/extension.js\");\n/* harmony import */ var _components_version_version__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/version/version */ \"./src/components/version/version.js\");\n/* harmony import */ var _services_metrika__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./services/metrika */ \"./src/services/metrika.js\");\n\n\n\n\n\n\n\nObject(_services_metrika__WEBPACK_IMPORTED_MODULE_6__[\"metrikaHit\"])();\n\n//# sourceURL=webpack:///./src/start.js?");

/***/ })

/******/ });